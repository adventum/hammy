(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    560060,      11680]
NotebookOptionsPosition[    550338,      11531]
NotebookOutlinePosition[    551273,      11559]
CellTagsIndexPosition[    551191,      11554]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Combinatorial Surfaces", "Subtitle",
 CellChangeTimes->{{3.8914682305184307`*^9, 
  3.8914682446179886`*^9}},ExpressionUUID->"c333f29a-1060-4e0f-87ca-\
3b3b5ddc9ed3"],

Cell[TextData[{
 StyleBox["2.1.",
  FontWeight->"Bold"],
 " Prove the formula for a disk that consist of polygons, not necessary \
triangles. For a single loop made of ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7f9f5fd4-4149-4bda-a6f1-fa8165048d5b"],
 " edges",
 " it holds obviously, because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"N", "+", "1", "-", "N"}], "=", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7f720944-8a54-4e24-8eaa-c719b1c145d8"],
 ". Now suppose it is true for disks with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", ",", "...", ",", "n"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "41d2d126-c3b4-4c14-9b94-161f83724863"],
 " faces and consider a disk with ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "63a38be4-f49d-43cf-bd8a-03fcd3c1fdbb"],
 " faces. Take any non-boundary edge (it exists, because ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5d199872-20af-47d6-8f73-8821a576e4b4"],
 "). This edge is between two faces of the disk. It may be a part of bigger \
path where each path element has vertices with exactly two edges, except path \
ends where the number of edges is more than two (otherwise it would not be \
connected). Remove this path. If it consist of ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5ead273b-1dc3-4543-8bbf-0fc5cdd26ce6"],
 " edges, the resulting mesh has ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "-", "M"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "052432be-62ba-4d4d-a3d6-2b2d25491648"],
 " edges, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "-", "M", "+", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b0a2903f-a0ff-41f3-b2f1-42d594dfbc3f"],
 " vertices, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "-", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "caa62134-2414-4f1e-af8e-a7c3549c8ca5"],
 " faces. By induction, we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"E", "-", "M", "+", "1", "+", "F", "-", "1", "-", "V", "+", "M"}],
     "=", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "901ddd42-5641-4e8c-a215-4c1a80a871b6"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"E", "+", "F", "-", "V"}], "=", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c0ad95e1-bf83-498c-a8be-ec33f415151e"],
 "."
}], "Text",
 CellChangeTimes->{{3.891468260937707*^9, 3.8914682671378*^9}, {
   3.891468307289729*^9, 3.8914683932104115`*^9}, {3.891468427291108*^9, 
   3.8914684294100204`*^9}, {3.8914684833554893`*^9, 3.891468523522732*^9}, {
   3.8914685544999895`*^9, 3.891468569060218*^9}, {3.891468604752152*^9, 
   3.8914686426546793`*^9}, {3.891468829533512*^9, 3.8914689405497828`*^9}, {
   3.8914689846159744`*^9, 3.8914690067581244`*^9}, {3.8914690839177103`*^9, 
   3.8914690958381243`*^9}, {3.8914691489306283`*^9, 
   3.8914692889201455`*^9}, {3.891469323935629*^9, 3.8914693498014417`*^9}, {
   3.8914696335600376`*^9, 3.8914696729689713`*^9}, {3.891469726275165*^9, 
   3.8914698356567593`*^9}, {3.89146987463431*^9, 3.8914699762650566`*^9}, {
   3.8914740573949285`*^9, 3.891474324154527*^9}, {3.8914743544341607`*^9, 
   3.8914745809476795`*^9}, {3.8914746121071815`*^9, 
   3.8914746198753014`*^9}, {3.891643544874158*^9, 3.891643929626746*^9}, 
   3.891643978442897*^9, {3.8916440315273366`*^9, 3.891644077871461*^9}, {
   3.8916441538876996`*^9, 3.8916442087683644`*^9}, {3.891644404239091*^9, 
   3.8916444306554437`*^9}, {3.891735956361062*^9, 3.8917361031213255`*^9}, {
   3.8917361334989367`*^9, 3.891736181186229*^9}, {3.8917362115774307`*^9, 
   3.8917363013388596`*^9}, {3.8917363652012405`*^9, 
   3.8917370696951647`*^9}},ExpressionUUID->"4bed9d0b-15c9-4e78-b84e-\
e08bbd68a536"],

Cell[TextData[{
 StyleBox["2.2.",
  FontWeight->"Bold"],
 " Let ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "826f2182-7936-4020-8876-99c5c21d8e71"],
 " denote number of sides of each face and ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e4ba2c17-02b6-4557-9ade-686240edebd9"],
 " \[LongDash] number of faces meeting at each vertex. Obviously ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", ">=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b8dfb4c9-5798-4a3f-bc07-a8745dbd3f71"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", ">=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "04f35c5c-c0e2-41ef-91ff-857e92a5bba5"],
 ". Then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "=", 
    FractionBox[
     RowBox[{"s", " ", "F"}], "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a899289e-d569-40c9-9e94-063f525fb4af"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    FractionBox[
     RowBox[{"s", " ", "F"}], "f"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "85ff8949-a003-4921-8ac8-adc1f672cd50"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", ">=", "4"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b5b5ee0e-9d95-41fb-9e5e-1c898cbaeaba"],
 ". By Euler\[CloseCurlyQuote]s formula we have: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", "(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "s"}], "f"], "+", "2", "-", "s"}], ")"}], "=", "4"}],
    TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "83f576d9-9366-44bc-b0ac-2da73bbe2166"],
 ", so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", "-", 
     FractionBox[
      RowBox[{"2", "s"}], "f"]}], "\[Element]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "806f277d-2863-4cea-bfc1-0ade58214175"],
 ". Because ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", ">=", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a12dafd3-9a9a-455e-bddc-907cbe257abf"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", "s"}], "3"], "+", "2", "-", "s"}], " ", ">", "0"}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "dcddc669-8df1-442c-a13a-382ca461e427"],
 ", so ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "<", "6"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6dc3f712-a210-47ff-8bc4-7878179bef9e"],
 ". Because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", ">=", "3"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["6", "f"], "-", "1"}], ">", "0"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4d55d5c1-6f3c-4ea7-aaff-d725d58f0aef"],
 ", so ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "<", "6"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9d8fa748-7de5-4747-ae6c-ec2273869d8c"],
 ". If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "=", "5"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "44b19d29-e84b-48da-9108-c8fd932cd392"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "=", "3"}], ",", 
    RowBox[{"F", "=", "12"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7b3fd7d3-b049-450f-88f2-5e635fe93798"],
 "; if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", "=", "4"}], ",", " ", 
    RowBox[{"f", "=", "3"}], ",", 
    RowBox[{"F", "=", "6"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "77e30df8-6c17-4a69-a0a7-2b57eb046181"],
 "; if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", "=", "3"}], ",", 
    RowBox[{"f", "=", "5"}], ",", 
    RowBox[{"F", "=", "20"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7326e961-e193-4152-ac9f-3575167d3a7a"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "=", "4"}], ",", 
    RowBox[{"F", "=", "8"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "44bc3fca-caa9-48bd-9bf7-cf3dd92124e6"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "=", "3"}], ",", 
    RowBox[{"F", "=", "4"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7b1b1818-cbd4-4249-be3f-e78251ffa8fd"],
 "."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ7dd90PPZvzeO2R/TkkC06LmSNBD9dc30LBD9tH9i
MYi+lLAPTCf8bikH0UwHZ4PpTbYB/SB6TdSkKSDaa8vZrSD6THXENrA5l3pO
geglDRMugegtHQLfQbSKb+0fEJ114ArncyBtE/1bCkQneTMogOjVhccVQfTt
SayeIFrrWJQ3iF4hZ+IPoq9ceB4E5q9NjADRGo9XRIHoja+qEkD0M7O8FBB9
45ZGLojukr6ZD6LVHpzoB9HbeP1mgOhFgp/mgehJD10Wg+h9c/VWg+i6uUlg
uv6dzyYQPWvX/s0gOuGO4g4Qva7V6DCIzlq0/SyIDuvkuwCiAdjQ3Bg=
  "],ExpressionUUID->"7a2d9414-ab82-40b6-a5f3-16a373545086"],

Cell[TextData[{
 StyleBox["2.3.",
  FontWeight->"Bold"],
 " In case of regular valence, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"E", "=", 
     FractionBox[
      RowBox[{"3", "F"}], "2"]}], ",", " ", 
    RowBox[{"V", "=", 
     FractionBox["F", "2"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "44949e91-9000-48f8-b3f5-57078730c191"],
 ". ",
 "By Euler\[CloseCurlyQuote]s formula, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["3", "2"], "F"}], "-", 
     RowBox[{
      FractionBox["3", "2"], "F"}]}], "=", 
    RowBox[{"2", "-", 
     RowBox[{"2", "g"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0260ec35-aef5-4364-b0e9-20f3043743e1"],
 ", so ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "=", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "30bbe2a8-09de-4e21-9d7d-cc18fa9167e2"],
 "."
}], "Text",
 CellChangeTimes->{{3.8917402896842427`*^9, 3.891740312032195*^9}, {
  3.891740357945488*^9, 3.8917403714979353`*^9}, {3.8917404275404015`*^9, 
  3.891740526896366*^9}, {3.891740736069765*^9, 
  3.8917407364366727`*^9}},ExpressionUUID->"28e3d3ca-8aa2-4172-8a82-\
e33e546bd5d3"],

Cell[TextData[{
 StyleBox["2.5.",
  FontWeight->"Bold"],
 " Let ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "21e9080b-bf1f-4295-96f3-5800d3c5b8b5"],
 " be the mean valence. Then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "=", 
    FractionBox[
     RowBox[{"3", "F"}], "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ce8b459c-af44-44ca-89dd-50cdbe97bf7c"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    FractionBox[
     RowBox[{"3", "F"}], "v"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9eedb1e5-fb5c-46c9-b0fc-e9c5a790209e"],
 ". By Euler\[CloseCurlyQuote]s formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["6", "v"], "-", "1"}], "\[Rule]", "0"}], TraditionalForm]],
  ExpressionUUID->"343749af-5641-4de2-b28e-b83314ae5f7f"],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "\[Rule]", "\[Infinity]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bf0fb44d-de6c-43f4-807c-cfe842d61506"],
 ", so ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "->", "6"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fb3e292c-04ff-49ee-a14f-7ca9fc5edb33"],
 ". Then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["E", "F"], "->", 
    FractionBox["3", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fc60350f-ffcd-4435-9ddb-c8e44b20cab1"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["F", "V"], "->", "2"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f31b0cea-e316-42a6-8a1a-7326b1c8b84a"],
 "."
}], "Text",
 CellChangeTimes->{{3.891772629737921*^9, 3.891772632705372*^9}, {
  3.8917746329262867`*^9, 
  3.8917748356948767`*^9}},ExpressionUUID->"159adcef-ae36-4ac1-8500-\
c166926d3ebf"],

Cell[TextData[{
 StyleBox["2.6.",
  FontWeight->"Bold"],
 " Let ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "74263760-4b26-4159-a79f-244bf6ac4137"],
 " be the mean valence. Then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "=", 
    RowBox[{"2", "F"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bc6d8aea-7bf7-4667-8d6b-2160c29b48a9"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    FractionBox[
     RowBox[{"4", "F"}], "v"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "037b2240-9c34-4c5a-a1b8-b698df0f7b80"],
 ". By Euler\[CloseCurlyQuote]s formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["8", "v"], "-", "2"}], "\[Rule]", "0"}], TraditionalForm]],
  ExpressionUUID->"02c87ad4-f209-41be-b05a-647403cfa23d"],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "\[Rule]", "\[Infinity]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "08ab9f27-b352-49d7-86a3-b0ae2e4cc172"],
 ", so ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "->", "4"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "dd72516c-5218-407c-bf90-b2864da14c32"],
 ". Then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["E", "F"], "->", "2"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "97865b2e-8a0d-4037-a7dc-66508c8f656d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["F", "V"], "->", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b55460ff-6db7-461e-95c7-e04fe0c3f2f7"],
 ", so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"V", ":", "E", ":", "F"}], "=", 
    RowBox[{"1", ":", "2", ":", "1"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ba1fc127-c382-4899-b592-9037f0781816"],
 "."
}], "Text",
 CellChangeTimes->{{3.8917748590283966`*^9, 
  3.8917749705058827`*^9}},ExpressionUUID->"eded7164-4cbb-4df4-be0b-\
d128e86fd5a2"],

Cell[TextData[{
 StyleBox["2.7.",
  FontWeight->"Bold"],
 " Each edge is in 5 tetrahedrons, each tetrahedron consists of 6 edges, so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["E", "T"], "=", 
    FractionBox["6", "5"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9d648fc5-3d2c-40a2-bcf7-9cdcfb62563d"],
 ".\nEach face is in 2 tetrahedrons, each tetrahedron consists of 2 faces, so \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["F", "T"], "=", "2"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "942fd158-7eaa-4611-a8eb-f101d7437922"],
 ".\nEach vertex is in 20 tetrahedrons, each tetrahedron consist of 4 \
vertices, so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["T", "V"], "=", "5"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a94e5753-2fa3-4dea-9958-b8c3f5042fde"],
 "."
}], "Text",
 CellChangeTimes->{{3.891821172696129*^9, 3.8918213245850306`*^9}, {
  3.891821372152195*^9, 3.891821376824669*^9}, {3.8918214426080704`*^9, 
  3.8918214460485992`*^9}, {3.891821535385647*^9, 3.891821555762196*^9}, {
  3.8918219290029945`*^9, 
  3.891821959044639*^9}},ExpressionUUID->"e4eccb31-7603-4541-9c07-\
60181ef11c30"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"meshes", " ", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<V\>\"", "->", "#1"}], ",", 
        RowBox[{"\"\<E\>\"", "->", "#2"}], ",", 
        RowBox[{"\"\<F\>\"", "->", "#3"}], ",", 
        RowBox[{"\"\<T\>\"", "->", "#4"}]}], "|>"}], "&"}], "@@@", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "9344", " ", ",", "64814", ",", " ", "109660", ",", " ", "54189"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "10784", ",", " ", "69807", ",", " ", "114345", ",", " ", "55323"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
        "13630", ",", " ", "97271", ",", " ", "166689", ",", " ", "83047"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
        "20514", ",", " ", "144661", ",", " ", "245764", ",", " ", "121616"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
        "21222", ",", " ", "146117", ",", " ", "245959", ",", " ", "121063"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
        "21464", ",", " ", "144263", ",", " ", "240663", ",", " ", "117865"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
        "22933", " ", ",", "163360", ",", " ", "279634", ",", " ", "139206"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
        "24522", ",", " ", "175177", ",", " ", "300272", ",", " ", "149616"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
        "37483", " ", ",", "262803", " ", ",", "447463", ",", " ", "222143"}],
         "}"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"meshes", "[", 
  RowBox[{"All", ",", 
   RowBox[{
    RowBox[{"#", "~", "Join", "~", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<E/T\>\"", "->", 
        RowBox[{"#E", "/", "#T"}]}], ",", 
       RowBox[{"\"\<F/T\>\"", "->", 
        RowBox[{"#F", "/", "#T"}]}], ",", 
       RowBox[{"\"\<T/V\>\"", "->", 
        RowBox[{"#T", "/", "#V"}]}]}], "|>"}]}], "&"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.891821980792455*^9, 3.8918219808212633`*^9}, {
   3.8918220726137953`*^9, 3.891822325948136*^9}, {3.8918224024342365`*^9, 
   3.8918224076307287`*^9}, 3.891822530138486*^9, {3.8918225660147467`*^9, 
   3.8918225711202235`*^9}, {3.891822734672063*^9, 3.8918228266784906`*^9}, {
   3.891822896807706*^9, 3.8918229615019293`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"49ca6829-3e01-4f87-a603-42b9d2fc7f1e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "V" -> 9344, "E" -> 64814, "F" -> 109660, "T" -> 54189, "E/T" -> 
        Rational[64814, 54189], "F/T" -> Rational[109660, 54189], "T/V" -> 
        Rational[54189, 9344]], 
       Association[
       "V" -> 10784, "E" -> 69807, "F" -> 114345, "T" -> 55323, "E/T" -> 
        Rational[23269, 18441], "F/T" -> Rational[4235, 2049], "T/V" -> 
        Rational[55323, 10784]], 
       Association[
       "V" -> 13630, "E" -> 97271, "F" -> 166689, "T" -> 83047, "E/T" -> 
        Rational[97271, 83047], "F/T" -> Rational[166689, 83047], "T/V" -> 
        Rational[83047, 13630]], 
       Association[
       "V" -> 20514, "E" -> 144661, "F" -> 245764, "T" -> 121616, "E/T" -> 
        Rational[13151, 11056], "F/T" -> Rational[61441, 30404], "T/V" -> 
        Rational[60808, 10257]], 
       Association[
       "V" -> 21222, "E" -> 146117, "F" -> 245959, "T" -> 121063, "E/T" -> 
        Rational[146117, 121063], "F/T" -> Rational[245959, 121063], "T/V" -> 
        Rational[121063, 21222]], 
       Association[
       "V" -> 21464, "E" -> 144263, "F" -> 240663, "T" -> 117865, "E/T" -> 
        Rational[144263, 117865], "F/T" -> Rational[240663, 117865], "T/V" -> 
        Rational[117865, 21464]], 
       Association[
       "V" -> 22933, "E" -> 163360, "F" -> 279634, "T" -> 139206, "E/T" -> 
        Rational[81680, 69603], "F/T" -> Rational[139817, 69603], "T/V" -> 
        Rational[139206, 22933]], 
       Association[
       "V" -> 24522, "E" -> 175177, "F" -> 300272, "T" -> 149616, "E/T" -> 
        Rational[175177, 149616], "F/T" -> Rational[18767, 9351], "T/V" -> 
        Rational[24936, 4087]], 
       Association[
       "V" -> 37483, "E" -> 262803, "F" -> 447463, "T" -> 222143, "E/T" -> 
        Rational[262803, 222143], "F/T" -> Rational[447463, 222143], "T/V" -> 
        Rational[222143, 37483]]}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "V"} -> 1, {All, "E"} -> 1, {All, "F"} -> 
        1, {All, "T"} -> 1, {All, "E/T"} -> 1, {All, "F/T"} -> 
        1, {All, "T/V"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "V" -> TypeSystem`PackageScope`AtomShape[34], "E" -> 
            TypeSystem`PackageScope`AtomShape[34], "F" -> 
            TypeSystem`PackageScope`AtomShape[34], "T" -> 
            TypeSystem`PackageScope`AtomShape[34], "E/T" -> 
            TypeSystem`PackageScope`AtomShape[60], "F/T" -> 
            TypeSystem`PackageScope`AtomShape[60], "T/V" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 7, {All}]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"V", "E", "F", "T", "E/T", "F/T", "T/V"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "V"} -> 1, {All, "E"} -> 1, {All, "F"} -> 
        1, {All, "T"} -> 1, {All, "E/T"} -> 1, {All, "F/T"} -> 
        1, {All, "T/V"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "V" -> TypeSystem`PackageScope`AtomShape[34], "E" -> 
            TypeSystem`PackageScope`AtomShape[34], "F" -> 
            TypeSystem`PackageScope`AtomShape[34], "T" -> 
            TypeSystem`PackageScope`AtomShape[34], "E/T" -> 
            TypeSystem`PackageScope`AtomShape[60], "F/T" -> 
            TypeSystem`PackageScope`AtomShape[60], "T/V" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 7, {All}]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"V", "E", "F", "T", "E/T", "F/T", "T/V"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Path" -> {}, "DisplayedRowCount" -> 9, 
     "DisplayedColumnCount" -> 7, "DataRowCount" -> 9, "DataColumnCount" -> 7,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["V", 
                  Style[
                  "V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "V"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "V"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["E", 
                  Style[
                  "E", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "E"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "E"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["F", 
                  Style[
                  "F", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "F"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "F"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T", 
                  Style[
                  "T", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "T"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "T"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["E/T", 
                  Style[
                  "E/T", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "E/T"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "E/T"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["F/T", 
                  Style[
                  "F/T", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "F/T"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "F/T"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T/V", 
                  Style[
                  "T/V", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "T/V"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "T/V"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9344"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64814"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["E"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["109660"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["F"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54189"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.19607"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["E/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.02366"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["F/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.79934"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["T/V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10784"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["69807"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["E"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["114345"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["F"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["55323"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.26181"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["E/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.06686"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["F/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.1301"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["T/V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13630"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["97271"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["E"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["166689"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["F"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["83047"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.17128"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["E/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.00716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["F/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.09296"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["T/V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["20514"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["144661"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["E"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["245764"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["F"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["121616"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.18949"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["E/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.02082"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["F/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.92844"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["T/V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["21222"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["146117"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["E"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["245959"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["F"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["121063"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.20695"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["E/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.03166"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["F/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.7046"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["T/V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["21464"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["144263"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["E"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["240663"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["F"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["117865"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.22397"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["E/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.04185"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["F/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.49129"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["T/V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["22933"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["163360"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["E"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["279634"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["F"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["139206"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.17351"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["E/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.00878"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["F/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.07012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["T/V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["24522"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["175177"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["E"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["300272"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["F"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["149616"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.17084"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["E/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.00695"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["F/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.1013"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["T/V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["37483"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["262803"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["E"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["447463"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["F"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["222143"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.18304"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["E/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0143"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["F/T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.9265"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["T/V"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{430., {161.84743643933908`, 168.15256356066092`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{430., {161.84743643933908`, 168.15256356066092`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8918221710714893`*^9, {3.8918224036361465`*^9, 3.891822408183381*^9}, 
   3.8918225721209984`*^9, {3.89182273600074*^9, 3.891822770571661*^9}, {
   3.8918228035902433`*^9, 3.89182282740742*^9}, 3.891822962173275*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6c3f3b9b-ccb2-4a35-b08a-1e605e75431b"]
}, Open  ]],

Cell[TextData[{
 StyleBox["2.8.",
  FontWeight->"Bold"],
 " Star, closure, link\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
2pbaQ/vP162NJ3YqD+luuIf33NmAilSFLTOtV6EWwAtac1VNIgm17kGvlVEL
4GKzUtWk1TW7VQWC0ZWZVXswvmjL1tyvvhG88fbZx56Inz4rFmz96z077/vb
Hup007NH4c+++0Hyp19kfruKZbb6ErjPP/+i9MPiEDeO8U3hqoePv25EloZW
LI9Jv2NaFo413TH86kznbg3HwV7FXsnnL+/768yUhB7bhQpTQrzi7Qei5//U
NDB8VRcvXfbB0dlTY/+TRMovjkFVdTcvkHhw1gXWNbUAnmfFXA22uh0tg/z9
4f1g673z9kDVLnrm6EuvJrzzQdKnSzK+WSmMDFu9ChQlzGnl6Flu/0QOjsuP
LoiHFx9W/rqyGNMpBL5MjrIxTCcEio0dSSmVSpdz2nKFBUbareF4/ZKpefDc
qZTpz+Qqis2Sqhu2gcY1j8R9cLJDtEebVNk/YMx9Iioh1kRU8Rhcv34zAtYU
c1HludfZ/G6N5Ie1nLHVl2Ay+edLJxnSJAgug0RTZ0SneQRpsstfJ4uzxeay
8k6YPfIcC2Z10JmuAAKTid1gGfhB9t1qx5oqngjTa3jYlZXDRVuPzHlDesZw
Fb+1dRjfjYr/95q8tIZhGNvnz6bNXJiT73PJ9s4FJkN2D+2EIvCVklws6mMn
SjgnrFe5/8G923dogqAMQ94pcxvhMuhCPuUy7sQiltbr81vdNC+sX52hRSZv
yLCf+UlOrQLN1XlWVo6FyBSWlLQqOiUUnovpoqvL5Sim7erJf8fO+bS83c7s
/hzxA9P2fJrcZ//ppvyH/Q98V0/saU+0tPam+M1KHUkpKKLiiw8cKjx0uGjX
HkPC6bIdMVrOOesmXyzn/c89O/1TLEQunzlbHnVvXFj5i/Zjwhy33zGvanTN
8HfolcnU9GqxpF6jbQ46MxtVeJFfB9OdfrTQXvPr1nC8Ub9q/r5vRPQRB1t1
zMl7Fsi19ALYYMdvz+7+LO0GFyyZ6LDZRtA1mkDKJoZJ6OokcAadfNmyTXXq
TPlv2/M4Z66rPP/iidffGj/UKBQDm8rS88zRcJDX+VyRpN4jG3lXvq7F6LuD
oIvVGis+RW8gpmfWSOUNmA0CXRbDDAD9TpehgdEuFJmco3HQqHry/oyUS/TQ
vHrqP3EP/dhIk3i4ufD12WcPthCn2DvQO2Hd92cosO5Onipdu34MZX7fngci
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
AgICAgICAoI7C/8/qrTrJw==
     "], {{0, 165.}, {193.2, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{193.2, 165.},
   PlotRange->{{0, 193.2}, {0, 165.}}]], "Input",ExpressionUUID->
  "78063427-c39f-4513-8982-58763efbee4b"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztvWd4U1f2Pjr3/r/cj/d57sdkfhCKgZAwyYRUQvokJCGTRtokQwoB0iC/
FNIbqQRc6GB6dZdlSZYlS5bVXeXeJFu23I2NAZtmG1vOfY+2LWQ1H0lHOjbs
91nJY+Rjaeuc/a6y915r3fTOxy+s+b//9re/ffb/4H8vvP3lw59++vbXL/6/
+MdL6z97f+361e8+uf7z1WtXf3rPO/8HL/5//9ff/vYI/mN+/ouCgoKCgoKC
goKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKC
goKCgoIiAIxeODcwzPcgKCgogsBAXV3sT9I3n4//x8rSU3a+R0NBQREcLpk/
WBT9yJ+d1BZTUExT2LtML0Vt/zBriO+BUFBQBIlBXfbiqIT41lG+B0JBQREc
Rtv2J8xempM39Jf9wpmco/rvfyzU9VBGU1BMIwwrN+yav7qqyVS9Z09JSlLO
0/Ni30i4yPeoKCh4g72vJ3O/7vtvFBu3FcfsqLGN8D2gSTFyZsdzsQ++rz+k
6WcGO9T2wwMx/95zlu9hUVDwgtGzhQWffK4/IbGIk4zvLIm++7vmQb7HNDku
mz9cFP3Az61j1nfA+unire8IpsHAKSi4R1/DJw+c2F7v2HMdbP5qyc5pseo7
XK3/17zjO6xjW8Uj1vxnFpzY1Uh3jimuQ4y2HU2+9VVTm2P6D5VqHlqYcqx7
GqwRnUtNX/CopmRM39hbDiTe+pqpZeoHAhQUnMPed/DVrc/Fn3NM/yH9d/tm
PZNnmQZcGDZ+H79gbc0F8q+hzj+eOvidcRq4EBQU3KO3cuUtB342MbwdbjZ/
8WTc9AiK7f0HXo2Zt6qyl/nHcNUe4crt7Rf4HhQFBS8YNCrunpeacO6vv/p7
VKrq7x+Ne+XYhekQWw6b4o4vmL390bfEH38i+yO1m1KY4rrFZaFw9gJhsrUt
S3Gqp6f89Xk7P0hoFqY2d0wHp7q7tkVb0NM9DVwHCoowYkCVdfvC/av2tJ62
/zViK3j21n0roxtaKC8oKKYRhs5bmwfHXGj7QEcHXSCioKCIKEZG7K2tfVbr
mcuXr/A9FgoKioAxODQszbKcSKiAJCZXnqJLXBQU0wqjo6Nl5Z2EwkQypRa+
B0VBwTO6Tl0oNnVU13QPDEaieIbdPjo0NHLp0pX+/oHeM5dgSdvb+23N5xqs
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
BkdNAIWygdS7wP91eqaMbUpqtd7QYsxvVTjOgZAtoWxH4b6urvNTakuIgoKi
prbbrd5UWno1kyWUWAGzC/tbVd3d3XMx+Pw+CgqKMMNSf9qNxdnKhrq6njNn
uMnvo6Cg4BBDXa3HY4pU3aP27sY/3078Vc8sRtlsZ91YTJeXKSimJIbqMvSf
rNj99zmJ+1u697y67cZZB38rZRamEORKpGYnhY15LXwPlYKCwgvsvZ2Gysv9
gvSo+7MPxIk+3G0t1jdXXxj77eDgcGUVczrLUt9LvWgKiikMe23c0fnLkr6I
77zE91AoKCiCwpD4g20zHsox0E6eFBTTFEMdvz0auyy2m56voqCYprCfKnl5
waFNFXTbl4JiuqJfLFq4OEtJs4soKKYrrig37J79emk3NcUUFNMVw+113V2X
6S4SBQUFBQUFBQUFBQUFBUV4ceXKSI6q8evvFGs/EP24UVVY1Mb3iCgoKAKA
3tj8zur0I0dLU1Krvvw6e/4tW2+YsVkmr+d7XBQUFKyQJbMsf/a4a1sHnd4G
Fu+JL+RxVBQUFCxxeeDKrbfv2Bytd32xvr53zXsZZ89e5mtUFBQU7NHccg5m
9/kVJ/lvsURBQREU7PbRJ546AiK//W56Tw/Nm6KgmJY4e+7yqjVCEHl2VOw3
3ympI01BMU1RVXXqrVUCcPmOu3YXm9r5Hg4FBQUrVNd0wxC7vnLoSAkhMm0Y
QUEx9fHHn9p1H2d6LmqtfV8EItuaz/IyKgoKCpbIy28FVUtKOzx/tSVG/487
dlJbTEExxXHwsAksjttmdHt9ZMT++FNH5Nn01BYFxVRHa2vfrKiY/5m1ZduO
/L6+sUoiDQ29n3yelZxSye/YKCgoWMJkan/sicOwyDNmR9+3dN+zL5z84aec
jo5+vsdFQUERGFpaz5WVdzbZ6FoWBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
BQUFBQXF9YX/HxkSloA=
     "], {{0, 165.}, {193.2, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{193.2, 165.},
   PlotRange->{{0, 193.2}, {0, 165.}}]], "Input",ExpressionUUID->
  "a15033f0-5cc4-4aff-8a62-81122ee70ed4"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztvWd0U9fWNnru/f7cn3eM+zM5bwjFQEg4yQmphPReThrpCSkESAPeVEIL
IZCE4gIYMKab4m7LapYsWZZtyXKTe5Pc5G5MNdU2tnzus7VkIatuSVvaNqxn
zGRgW9pa2ns9a8651ix3frHyraX/9z/+8Y8f/x/8763PVz31ww+fr377/8UP
76z48etlK5Z8+dKKn5YsW/LDw1/8H/zy//u//vGPp/Ef8+//UlBQUFBQUFBQ
UFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ
UFBQUPiA0csXBob5HgQFBYUfGGhoiPxd+umbsf9aVH7KzPdoKCgo/MNVwzdz
w5/e2kN1MQXFJIW5V/9O2K5vM4f4HggFBYWfGMzPmhcWH9sxyvdAKCgo/MNo
54H4aQuydUP/NV8+lx2nWb+hOP80ZTQFxSTCsPLnPbOW1LTqa2NiypITs1+Z
Gflx/BW+R0VBwRvM/aclB/LXr1Fs3FkaEV1nGuF7QF4xci76jcgnvtYczr3I
DHao87fHI/4Tc57vYVFQ8ILR88VF3/+kOSE2ihILvpgf/tC6tkG+x+Qd1wzf
zg1//I8Oq/YdaP5h3o4v0ibBwCkouEd/0/ePn9jVaDlzHWz7df7uSbHrO1yr
eW7m8ehm61HxSHPha7NP7GmhJ8cUtyBGO+OS7nlf32mZ/kPluU/OST7WNwn2
iC6kpM9+JrfMut6Y2w8m3POBvn3iOwIUFJzD3H/o/R1vxF6wTP8hzbr9U1/T
GScBF4YL1sfOXlZ3mfw01PP3y4fWFUwCE4KCgnucrV5098E/9Axvh9sMv7wU
NTmcYvPFg+9HzFxcfZb5YbgmRrBoV9dlvgdFQcELBgsUD81Mib/w3/9ePK1S
1a5/Juq9Y5cng285rI86Pnvarmc+E638XvZ3Sh+lMMUti2sCwbTZgqTmzkzF
qdOnKz+aufub+DZBSlv3ZDCq++rb84pO900C04GCIogYUGXeN+fA4piOM+b/
jpiKXr9n/6LwpnbKCwqKSYShS81tg1YT2jzQ3U03iCgoKEKKkRFzR0d/c/O5
a9eu8z0WCgoKnzE4NCzNNJ6Ir4IkJFWfoltcFLc2/hEScDjg0dHRisoeQmEi
EqmRw+tTUEwuhIbCoQHf95KCgh/wzTyOYWw8O0Ar6lHcYuCbdhwjNb0OBrZC
2dzYdHZwkNKZ4uYH35zjHlXVp4pLusBi0PlkQpVS1dzcfG5wiNKZ4uaEw/y3
7RRpde3gArcSMgrbS1FJZ5ayOSWtFnTOzmlpaTk3NDQJ4tIoKFji+vURlywW
ZNRzTmEORV/WnZRSI5M32n4DegqEXsZcVNyZpWgidM5Rt7a2nsfX5/sJUFD4
D7N51Nh41lmRlVf0aLTtmOdl5T28s9WlVFT2pqXXCcWGyqpe2y8LdB3xidUs
r1BY3ClXNCWn1uIt6txWk4nSmWLyobOzP0PUAHXmQGEbc9Mz6uVZTbwT1lnA
XJHYAG8XXLb/PRYfmBCl+m6frlZY1CnLstI5N8/U1nZheHgypHNR3No4e/Yq
1FBCUrUyu9mDRwnVBnWsL/eNFCEQkA6LDyxq5z/h9/maNv9WBl1hB7ky6Jyn
MbV39FM6U0xAXL48lK9tAzcz5Y1E5zpQ2N5ArbKoY9kEU8dwZsGyopJOl38V
SQxZyuZArj9G50bQGQsd1oSOzv6REUpnCv4xNDQC5QX+Yp6XlHaRGet1a9eq
jl1pPV5EW8B46/i/uxfAuhCKGjj5LNAZXx/LXVJyTWJSjUbb1tl1kdKZghdg
4tU3nIZmgWKFlrGfqJ4pTEQwYdRxUXEntHBObquH12gK2hOTa7j9XAud20Fn
XBmi1bV3dV80mydBaUGKmwNtbRdA3uTU2rx8k4O17FURE5kg6hgDAIO87rbh
ZSfigzVa3ECYAVKZESOBgi4o7OjuuUTpTBE89J2+AvUBzy5b1eKwl+uSxR5m
r0DIszour+hJTa8TjT9XcieMunRvcnNJ50wjbi+MnMKijp5eSmcKLnHx0qA6
rxUKFJrL3YEvS0VMBEqHR3UMysDVTRM4niu5kwxRA7zj0IwNQ9JorXSGwQOb
v/fU5dFRSmcK/zEwOFxc0gXGiaXGUn2Xh+nHnsJEGHVsFyUVSsHnMudKrA+8
spTNIokhxIO00LlNkmmE587QuaTzVF9gdDYPGLPLIzcrV/2uTSi9TONRbgWM
jJhrahljEnQrLHJ9CuOOwmxYrONJHatyWsALLE3s35KvaUtOqQ3xOO3pjAFI
pAydU9JqS0q74Nr4Smfz+fbIpYJtOf3Xhq6V70/516wD7y4XrYjtDNLkoeAd
mCEtredhcGLO5GtZBTz4SmEioVfHGsvRtq8ZGTBCTsRXwZXmi8j2dBZLDaAz
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
VLEGeh2hWGK4fco2r0sl7ITUINjVuCD0LzlkJ1v9JP5crzII1Tfq+FVomhSF
nj4a1kJHZz/fk/3mxOjoKBZYn9xGmKnpGfV4KBz24KsaCw/wsI1cmpr9+pPx
G8Ws9pmhPqA7OK/sijnMyak6ewpD9h8ovXfeHjbXxEPhfG8BFgj0r22cJBdM
4ftNgD9SVNzJ93y/OXH+/DXoF/YHtaTuokhiCMbZLnSx+5WhV/nX8al3nfhL
4f1zc/NNjNIMwrlVDpMZEajZj1uXBgpnsKIwZOOmnJdejWPzStgznOeWYqgO
nC20dFvzdaMPDwWLP9/z/eZEbV0f9Aubp4AplylnWp3mcFqq2l6cuxGNk8ou
XaF33UoaEwSpRQIxGAKpsMFQWFCXzprCkK++EX6xJJ3li/GMOLSribvtbCDB
wHZX5sidkGo/ly4P8j3lb0JgmWWzt1lc2pWaVgfbO6hZwKRWbSBXsBak5SiU
lBF9u7Zk3G/AQT8isYnYKOyTJfP6WyfWrFeyfDEWBw7talK+z93D8nXbIV1Q
b2ykoZgcY3jYzCZiSp1rIp2sg12OA+xzG3xSYjywKXPNgRbnoAL7CQzzT+QU
hOyPVLYe3yJf/N7h+++O/TZhnMbBose+J6y9WChc7yuFIQ8+si96TxH711vt
6oAdClzBg+FB4tJ92heVW8qJ8z3rbzZ0dV/0fHSCJ0WC8fI1oUjhz80zufI6
e1TH1d8uOnz3nduZ9Bn3b8dQYUxyt9T0yDccuePulD3F435fXNLpR8g3Xg/+
Qhn5+kZ8nTumhfta51/GhV0Nbeu5wykMM5+cF9jnmG9mMw3F5BIlpV0eHhMc
zOSUWqiPkBVaLHTZpL6yTZTRXJyX+8r0XZ8ecDsS2JC+emrepPvYN3vufCVH
4RTDAJPVp1hxQmHYn35sCUL133bHNs81FpwF3Mez82Mn2Sak8KZXBwoLLxPd
yi5kCKPCi/tOX+F74t9UyBA1uMzTAY+yVUxQZYirl3vox6c/Ibwv7NgmtevB
5Gu8FKT1RypbN70WMe+7Kue6cHAVxazDzjF1/aYw5NiJyplzdvjxRhJ66rdd
LZU1Ctn1xcArU9JqWZpAJOmS74l/8+DKlSGXFcL15d1gt6XGDg/V1J0rO1mk
V7k5bup8aZKryjCkRBv3TQPLyr64L2rhDsvKUNQQtTL+yQWJW5QME0mACpt5
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
V984/v5HSYvB1h+sbPUgeNfjTx3AKxXKZnJMg2/NFe9gS+P6wWBW1ZgJ/Y/x
CNJnFVsazjrnwGbKGjH9QsmImxLagvZg2FGYxtDI0MvQztYN8MRqsnkCDQ49
7nWvDFwg8T9yS5c0n45vQH8s/rv3Fq3fkL30qwzo0AceiYFWBVvB2Xvui374
sdgnnz30yuvH3/sw6YslghXfS7yy1aUs/1/J7VPGFXvHF8eaAy5zUrvvj81q
mPFBYlYVY0U3hIbFVZaTaOdmUnhSsAb5JsGkx6m+yxweLrgTXB++MzxomIjg
F9krg3/NbIDntsLjdtCz+E1Sco3lNczGmrs0GSxBael1e/cV/7ZRtewb4etv
nXjo0X1Twxi2wmO9+14LW5859PJ/jr37QSJMZZDu51/l/hHWpfznzROPPXnA
eWDqXKb8hVhiCPBE7OvvRJ8tZlv60o+HgkGGjMVVlmRnmFj2k41EL/T3D4yf
laNny6u3rC/KO8+cJpv7T4v3qTcn9xH/+aqp5ch21T7tNcf0nlsbUJHcenNe
hdkAL+rIUbdKZcy+B9krYzbAM40qdatG2+bQFQhGV3pGfUxsycZNOV9/K3rj
7ZOPPBY7bWYk2PrPO7ff/a9dD83f98QzB+HPvvN+4mdfpn+3kmO2uhO4z7/9
rnL5HeFECDLqHYPQfBR8U7jqQXoKuKsOFJYH1iyPzXPHsuxQIwXTr8Fw+sZ0
HOpXRsu+eHn3P2ckxfWZz1YZ4mKVb98bPu/X1sGRy9pY+dL3D86aEvlJAm2/
OA41tacEvuSDcy6wrpkN8DwT1mqw1SG0DPLvB/aArXfN3QVV+8TTB196NW7h
+wmfLU77doU4NGx1KVCUMKdV7kOOmV1uSytJLFb+WTsPz4+FF8/5DYfZD2cH
fooDizFUCHyZbFVLkCIESPM7+5umUDbDSLsxHa+eN7QNnT6WNO3pHGWpUVZz
zTzY8vODUe8f7Zbu0iRUDwzqcx4Li4s0UFU8DlevXmdTJC1kos5z7LP5/c+y
n1bxxlZ3gsXk+ZeOev06xaVdUECgjK/l70CiKdPDU5ySNP0WqMI8TRtIilua
LmAMMAcWV1T2QEErspuxqoPOpAMITCZuk2VIMlrhWC0g0hV6ZMSelSMlmw7M
fkN+QncZvzV3698Ji/3w57yUphEY22dOpsxYkF3odsv21gUWw2BUvPFPoLYS
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
q7CoMzm1FoxjvR/VI9kSP3dq5AOvJX38ccK732kzil2/UqtjGiv4VCUgGCzG
YyV9qz25CXaSKW8Uiqk7zCegTP1LjmDaT6fW8liXAwIb4PDR8p3R/kSD/PiL
bPqsyIOH9ey/si2pQa7wtXNZb4G8+vCRygy1F4aCDmJfag5zy2K4+fIsxoSG
s8/yCBsqG3x3aoxIEVJ0dDLJEX64Y+D+0eMVq9bwWewOsv53JhokPNJtdU13
Ai08c84O9pt77pIauBWY9yBRAbuP4JbCufkmzIQ0SyIh+9EmJFU3t5zjexbf
6vAvOaJAx1QA2PDHhCgF//smJhrkr62+NZh47MkDS5YJ2HxZz0kNnEuWognL
BRtTlisWF5V0pmfUg485uaxMaCLEHda6KlFLEXqUMbXdfLDimI5pSdXhUT6r
v+AJfHMQmX3w5w8/Z06ZHg5islE3XpMauBWmwEJyDZuzg8BZjM+SyRuxIGfK
Gn2NApUx7nADdYcnCC5e9C05ApQ/OPF6HW4N18Qdr3DZe8JZ3vkgce6/d3vV
Oy6TGkIgJDPX84cGSGF8d7XlU6BPC30PG8u3hH/TsrQTCjLWyRGYYExx6d9C
UX/DV4naqTsSV772N+/HXo8siF3xvdTD13ST1BAiIQmeMo/5zoGwuKi4M03A
mNDqXJMfsfRWd7iZusMTC3gibJIjSGK7rx5oKCV6b9HBw16iQUiJLQ8H5WNJ
DQ0OSQ2hlMKiTs8V0vxjMcxmGM+MCS1v9M/AgDucLqiHf8H3nKVwBJvkCHA8
Nb1ubzCz9QOXVWuy9u0v2XfAUzTIGwtPPvjoPneTnCQ1qF0kNYRaJJnGDKHr
kj5+UJgxoXNb8ZSxfAWSeSHLaoSVQt3hiQldYYfEY3KEgqkA4HNx6dALRnjw
sH63+1L2DzwS8+sahfMX9JLUEHKBVY/1ROOq8bSvLIZmT0uvS0yucZVy5YMQ
d/j8BdqYdILCc3IEMfA2bg5KBQDOZe165eG48qhdLpKdv1spvn3KNvn4QBdW
SQ18SLaqJTml1vl4iz2LYV1IZUZL+c2mAPfosLhBlTc2neV7qlJ4AiwllyUv
MIuwjLskxYSV9b8zDSa2RThmWr36+vEnnjlo/+3YJjXwIbjzpO2pHxTGcoSn
CQcf1kXgFcgZdzijHoYB35OUwgvq6l0nR8DSPhz8CgCcCyyHYycqHRq93Ttv
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
4tbC/w8m610y
     "], {{0, 165.}, {193.2, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{193.2, 165.},
   PlotRange->{{0, 193.2}, {0, 165.}}]], "Input",ExpressionUUID->
  "b2932092-4c5e-4625-b4a5-e66da3d3656d"]
}], "Text",
 CellChangeTimes->{{3.891823146548527*^9, 3.8918231799846354`*^9}, {
  3.891823357215135*^9, 3.891823362181943*^9}, {3.8918234574687347`*^9, 
  3.8918234647740655`*^9}, {3.891824058242419*^9, 
  3.891824060589216*^9}},ExpressionUUID->"9ff99aae-835d-452f-b1e8-\
e0a1e526ce28"],

Cell[TextData[{
 StyleBox["2.9.",
  FontWeight->"Bold"],
 " Boundary (interior is the rest)\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztvWdcU9n2N36f//Pmefm8+L+7MypVEcVeEHvDjhWxd7GCStG5d+6dub8p
d0aqKApYQTqENFLoLfTee29iQVFpUuZZJwdjSD1JTnKC7u9n6YckJ8nJOfu7
11p77bWWwWnHvef/v7/97W9O/wf+23vq5robN079sO//woMDDk4X7R3Ond3q
4HzO/tyN5af/Nzz5//+vv/1tPfzD/v4LAQEBAQEBAQEBAQEBAQEBAQEBAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAUGPMfZxsG+E6pNAQEBQA4Mv
md6JjmeCLRdFPnsxTvXZICAgqIdh9hWf6ZvSipEuRkCYohj78MTOw9yhpp/q
E0FAQFATQ803LT32Brwbo/pEEBAQ1MNYe/4+04B/ZY/+NTbckFR0+6fEBxkf
EaMREKYQBpO4C+bERDZ3RD7IeRJV+uNOT6OTpa+pPisEBMowNlgTV3D757hb
v2Y99Mmht+q/Thtr8H1utIF5+2ljxyg8HM3+OcBwT07TKNXnhYBABcbett93
4f4ZUs1hl3md859ulZAxRPU5KcenWAef6esSsz7iD0cSXHxnnit/R+1JISBQ
g8E454Bd914JldhIxo9+Fg41H6k+J+UYeeG21XP73dcTunf0zd3dXrsevEGq
GOEbxFh7kd2C8Mftwo0Tw52/bfA+HPxB/+3pv96Vn5r76JfCzyRuyz8Av6Jt
Cpw4AgLZGG9/GjZrX26LkA39mQkrTIPu1E0BLgxlJVjOpcd8wB+NVXg+X/9T
yxQwIRAQyEd/2Cnv1b92DMOfI72xt56ZWsVPBad4vPNJmIE5LUK4JD1YU2B/
Niv/A9UnhYBACYZafrDyPBY+AH9VJzdE//TY+HBRzxRQxX8NFgp2zHU33xx1
6TrH6c/yCkRhhG8WA5VnZnqdiXyTx6svf/nx+XFPi6slGYzyjM4pwOShnp7M
9LaqHrSLGuHbxmDDjcXeK8/nZL8a/2u013fvHauTGfFtiBcICFMIo10NvX0T
inf8bWcfskwREBAQEBAQiKOs/MXOPcGGph579odUVb+k+nQQEBDkwpC5Q4H8
ffptkPmLfQcHkUeP8K3j9ev+7hfa9YwV81FtwYmcnNKo1ZNHQNBnDA+POt7g
4Fw4dDTy3btBpW/REh81YfF9v9zauldIIyN8m7h3PwcnAi7XnbiUE1NVFm/Z
HhifUE+jVwaHlsYnNNTVvx4cQnRG+IZwwC5MnMWUs1INyc1rLy17AZKb1xGf
2BAdUxkSVpqQ2FDf8HoI0RnhawcM8uOnovWWxa4/xEnLrr3BEofhFBYXjM4J
n+mc1NDQ+AYcB6ovNgICyRgdHaus6gmPLA94lD/T3Bun8HcztMVimXxUQw4f
i/zewE3iw4uKu6SJjEtObntcQkMUrQLonJjc2NjUi+iM8BVgfHy8qbkXvEgY
2+kZLdk57f4P8378d+LFKyxg8YXLTJ1RUlU5a0+fZui+90CoxPmw2DXyWDyJ
zvH1OJ2TU5qamno/fUJ0RpiSePHiQyy3FlRwUkpTSWk3DG8avYrHr8OHuu2h
8FXrHukJZyXksgPbaKbnpq1P8YdKjWp5kp3bzo+vj4yuCA0vS0ltam5GdEaY
Mnj3bhCYGxpWBipJZIKmpTeHRZQVFk08BKUmba9Szl+Q685c83k+lqv8XW7x
NWTxFzrntPPjPtM5rbml5e3IyBTI50L4NjEw8AkUEFiSHG5tfkGnaBgXl3RH
RGFKWXxsHzwcrj8mNC7ON/mLlz+wWHjPyZUnelJzFuMCBklWdhsP6ByF0Rmm
tda2d4jOCPoDGI2lZd2gbRmsanAMJQZwfCK27IPb1SJhx+qdOl674bHpbG+H
6xzxJ8lisSSd+XUws8EVS89oaWt7NzqK6IxAGcbHx+sb3gBJo2MqMzJbpQdt
QWEnaGeBrJcOHo7QHxbv2P3cwMTD/hJT+iXSiSyic2Z2GxfoHInROUPQ0t6O
6Iyga3R2vmfF1oBOSUltklC1Ionl1IKClvkSm1OjJ0a13dEIMAxOnKbJfFVL
LJ5E5yyMzuGR5SAw43V09I2NoV6rCNrFm94BsJPBv4tPaAC3V974zM5pDw4t
zc3rkHfAoaORlLP49Dn6NEO3/QfD5B2gbRaL01mQ1crlYXQGBQ2aGuZJRGcE
0tHfPwzKAoxkGGxgLSseljFi0SV5mppadXzpKhZXst72TMEx0meoPSJ/oXNm
K4dXGx5RDqYO+NFdXYjOCCTg06fRouIu0L9MdrUC9SoSieiSXHV8jDJ1fM2J
azb3jtXqAKVH6pjF4nTOADpza+FKAp3BtunuRnRGUAcwbGpqX0VGV9DoleDB
ERl+MqNLMgWGKCUsdr7JX7j0/vzFvuJxJX1jsfj1zBC0xgrpDDciJ7f9xYsP
4+Pq0Xn8XV1jkHfyD/9I9Ahv70FbUb4BtLW9YzCrYeSkpjfLW8KSFiy6FC0Z
XZInlBjVq9c9mjXH2/EGh8jBlLNYnM7pghagMxhFUbSKvPyOnh5V6Dw2kO1D
P3O7vvnDp5cFuYcXea08xLp8PS9vWJtjCIE6vHrVz4+rh8k/MalRwRKWtODR
JZmBJ5kCDqCOWbxtV5CBiceFyyyCx+veNSZE54yWWA5G5+iYSqDzy5cfcToP
Do7kF3bGJzQUFnVKpEz2JfEsNyTnTvTmGGZc9J6+PYmT/+YtCnB9dXj/YSgt
oxmYyIurU+rYSgtoCnnRJXmiSxbbHg7/3sDt5BnZcSX9V8fSdE7LaGFzaj7T
uR1sp+DQUlx4/DoxTf2Jd+3u7Ms1AxMPB8NOeZpdrEK1hb8ywNSdX9AB/IVR
AdO7GoNKaXSJCIu1R+RTZ2OmGbrZHgpX9Y16y2KRFBV3paU3xzCqRBTGpeel
qEfcUMRpT9PzFRMtmN/VXl3q55SgvHQSwlSBMBH4ZXhkOZ1ZlZVNaAlLpiiN
LhEksjYofPEKy9DUY+uOQDXeq/8sxiVD0CLB4u7u959v8lhrGM1i9pNrgY15
uXX3LwUf9GxDtvTXAbC4mpt7gX14IrAmQwiLLoUrjy4RYTHpRHZ04syac2fl
2ofqvV0PXWNpAXUMnrI4hcG6nhyZGmnPrfK/FbzxlCC2cgCtT38deNHzgYMn
Aic3El+ClikT0aXkRrU/QXssdnLlLVjiu3CJr/NNvtofoucszsxqhetPo1cK
MlsjoyuAwvD/hw+Sq89jPdWXLR9cT0Cr0l8D3vUNJgsTgfliicCaiErRJR2z
eOWah2Zz71xz4mryIXrLYpg/ufw6vJQffv2Z7GouD3tGqjTB+NvCjJ1mt6db
xjwqQ0SewhgY+JQjTASOnZwIrImoGl0iwmKyiLxlR6Chqeelq0TjSlOLxVnZ
baBzo2Mqc/K+5ISCUk7LaI6ILG/v6BPd95HuZh8X1q37NYUFFTe335k2N/Dn
xPfIqJ5yUJwIrImoEV0iQmTNKXzALnyaodvpczGkTAh6RWRQwfy4epg84xIa
xE0geB7M6bz8Drgp8P/EvX/X+MOmwJ+zPq9I978Mueg/Y25UUDvazzllMD4+
3qAwEVgTUS+6RITFGhL5xBna9wZuB49EkEJhvWJxdm473E0QuPjSLwG1gdep
ac0MZjU+APro9NnW6aVie0DGXpUeN7/vnIIqaU8NEEkE1kRiGGpGl4gQWYpK
3AvHglYt9Zk113f1QaazfMZduMw0MPHYbvOcLArrCYvhDsYnNABPQRHL3FMH
5IW5ulTo5sDs+uEj5v/28znz50U/b/8SWPpQkLptc2J6n/xxg6Af6O0dSPic
CEzKEpa0pKW3qB1dUpnFrswDG/xW7aVdcWbvtXT/fkGQ/U3ZdHO4zplp7r1m
/SMSKawPLAaDBxgKjrCCmD4/vp7NqcX/ptEr6+pfY0Nh9C3rx+Bla8Mcf8u8
65v5+0/86z/mpnWiaLFeA0sEziKaCKy2aB5dUspiMSJzT1j7mK6NdIS/b8Xu
W+Fusj7quiyuObny5i+6t2jZfU3iSmQRuSi7kRPXnFOs6WUBFZyQ1IjdUH6d
4m3tDFY1TN0TjI6rT01vFo2K0f4PLXUva1s+fEB2tA4wNlgdK3C0e7Zy7VPb
n2pUeuunT6PFJVgiMItdQ4qvqkA0jy4RIfIEg26ELzfxXH2c53qLc2afv8XS
Z8euySCpyy3+itUBsy3uXHfWKK5EAotLmsM8eCdt/M1MA27QNJpI8/I7aPQq
mDBhZlZ6MByWIZjYvSPIbI2ILFc3hxFBfYy96/B35t5JeftxdORloeCgfSnR
N6qeCKxQulIiiiIz5DKUlOgScRZfO+RvYOBjuS3QelugzTHmtVuyWbZ52zOj
mZ6XHdjaoLAKLC6sdT8ZdiMcZtHudE5NaomalwJmSDB18LAgEZ8IjsEXqPGH
oLVDwspeverX6ohFkMTYB8YV/513X00E8oZaHwd2EXlfW/s7MKWwROA0FRKB
ZUtxQ8CP9P2bfI1mhroJ5B5GVnRJKYuFROad2OT9/fxnZ1wUUWyfbdg0Q/cz
5+laorA0i+UQuSv+9yCTZaznhRpdh/yCTjqzKjzii25VKtk5bfgCtegZJru6
rPyFNocsgiRGyjI2mYX6tyladgCdOzQ8IjKTXr2eSAROUDERWKF0hjr6TV/L
j5Hj0JEYXSJCZGDxASu37y1Dr8nn1/FT0d8buB06Gqk9ChNWx21eB72MD2Zm
anAFUlKbwC1ix9aotHKYkjqxQC2SxKRGXlydTgYvAo6xau9Ao81pJfIXH5qa
e+E2AYM4vLqu7vfpGS1qJwIrlHbfY95mJ/Jy5RwQw6jikhddUspikMNrPb+z
eHbaFeOR87WYvbvCTjt/YZb9JeYMY/edu8mMK6nP4sLSS8vdV92sKlLrt4Or
AkYOTMtp6Sonp/Di6sFGEn8mJ69d1lZMBO1hmHHB2/hsubzE7bdvByXyzmCu
Vi8RWIkUV7uu97T+n4ZiWa+SHl0iQuRrp56aG7kZL/K3WvNwzbawM05flrYc
rseazvZeu/GxDiisjMXdKaGp9rsfGM24PcvqqfXWkJthqq1rpQrzwsAMVi+y
wGBWg/KVeDIiqhwcLp0O5G8a/UFHPUzsq8QXI8Rt64rKHgkWk2zTFjaFuvMv
nGdccaWtn/3gYqiMgaSN6BIRFgN9nK4xTp6Ksb8xaWn6hgvPYuG9JZYPtBFX
IsJiCSLnpNWzvKLmGD1xDq3l8BozCceYYFZkxdbgTdnUvmjhkeXS642gnXNy
23U9lr9djPCv352+NjEbL6rS95J+N5vT/IXHTU29Eizmx9eTpRML+DlXT9B/
8Mjx9UlzORpgbBbmmSXjsATtRJeUsljmbkyXW/zlK/3N5/loKa6knjpO/j3I
YCkrWJWlLfCMsP3tzGpN8lPwBWrpT0gV1gChakx/g/iYm2Y9233+jpgrDiyH
n/IzXkxa5hoZGQN3WERhsLtoMZX41o5cDe3qvFLHdQ+vhk8MAIFnqOnGeLaU
HtFedIkIkaXZtHHLU+NZnlccY3VJYWUs7nx2wdf0YKaAMPXYnFq8a7mGc2NW
dhuocukPgXkeRsv7D0NUjepvEIPdLzJSW0vbh2WuU/cPDGPuMKc2Q9CK3y+4
d0x2DUZqVnUmgV0BsqQ72S1k1pcV6Y6HZ+/OO1dYIHWk9qJLRFgsQeQ9B0Kn
G7mfvcDQMYWVsLik6Zednmv/WUNkaQvmQ7CBQVGSsriRnNpEo1fKfCmGXlVb
91rXQxlBDto7+iIiy6XnWxgGeKp4dExlalqzaiGnkqbfd3stv14+Qdvs/BML
PHfdbpZY2srO1W50iQiRRTw6eiLqewO3I8ejdE9haRZPInJh0bklvmeeKjGM
QQVzeJgKTkzStMqKSHj8Os7kBWqRgOeVktZE9eBFmACeN6pgbCQkNeLd98CB
Jeoy5+YcMvc+/ADPcetkekUtn+XvGC05DrUdXSLO4nMXGaCFbfaFUEJhxeq4
ODHZenbInxmKflRmVhtWXSemktwpkc6sSpSz6ghGGgwJ1B1GTwB3KlXZGiaW
W5qORf9xl1mptVbE5K82DrhBA8p3Z4Rn/PFf5orZ4d45k47RTXRJKYtBdu5+
Dr7w+s1PKKSwAhbnP6RZbIxjyVmaBhuJN7m6DokSHlEus1U0/r3gMotVtUWg
DB8+YE5xQRHRZUyY85nsanwdTMHO6oIw9hKjh0605og/uU4+NQl/PDecF/6f
u8munhW5n8eAbqJLRIj89+m3gcUut3QUV1KRxV30m4+WXimVXlIAycoRVteh
VZJbaAUXfAlLQZSZya6BeYPqIYzwV23da3nLFwpkksssq91ScVLqDtPbBgsD
L92rLSjrYtx6ZLTg2SWfGtHGLVAckTqJLhFkMcj5ixQsaikncknzf/f6nQuS
pBJWXSdeWF0nXnZqv+aSKVygVnAATMJgmFE9hBH+SklrgsGg3l2GuRrIOOEy
JzVOTpDpTIgpi82ceKYorZaf9WWk6Ti6BCcGqio9oyUxqREmHwarWtqoxtXx
Mis/6+2BBw9H2F9i6mzLhxIWZ2Yd2Z3AmGxO5wir68A0KF1dh0RJTmmKoVcp
OAB8cFDWw8NoKyaVGBsbBwJqmHIIigCv6ILnmxMJcGgpugSaPb+gMzOrNSW1
CTQUO7aGFlMZFlGGh8JhzDOYWDlW4DIwWoIvBiYe++3CgMJA5FlzvIHU3xu4
mc/zsVodsG1X0OFjkZeusnRgckucFUfQEODK+Hd0h/hvjE9sEG5015YKFgnc
TQ5PydojXNXWNrQVk0r0vPwIJhNZgwFzmVm4y1yjoPwLKdElMAPgc9IyWsAG
gJFGZ1ZHRlXgbAXago/A5tTEJTQAneGsgNrSprsEXyRyD2+48M7a0/cfDNu4
5eni5Q+MZ3kBr6cbuVssvLt63aNde4KPnYq+eo38nSGSRsLSkFvBX8JzcNFg
XoqIKs/UoGMOcYlhVClduODwasEeoHogf9OAsc1i15B763PBZRaWH4fxljbZ
ZYbpAkSl6BK8HZS7ILMVrDuw/FmxNaD0YeYBtsJXYOqVVQ2flpjcmC5oATuT
YCkwaXPa4bqSvsPXnLgnz8bs2R+6btPjBUt8DU094F3wP/y9buNjeB5e1bDI
vFyjWngdEvHqOrw6LZU7kxaYD5Xu+UlLb4E5k+qB/E2Dw61NSmnSxgAAXQmG
X3gE5jLD8Css6sSjITj7ZO7sxdRrThsQH3xtODE6E6sng6tX+Bxw0GI5tfEJ
DWC9g6IHz1rtlTHpePGsOXf22YapSjfQxaCRQS+DdrZYeA80tdC59gLdvdH6
Kehx0OZOrjzNWQzzGEx9cCXlBX20IQVFnYoXqEV3DQ7re4+2YlKDoaER8Uos
2hDQvClpzVG0Spy/IgG/OCOzFSYQcO7A/IYDROo1ilYBZjlQHmy5DEEL2JDk
en8yd2Bu2vJ02Qo/DXUoeM3gO4MHDX40eNPgU4NnDbwGL1ulRTOJ04OrRLy6
DokCngjoYiJHwgxTU/uK6uH8jaK55S1YpLoZEsBNicwpfK8vDE5Q2ZqrV7Up
jLP4pLAHMfjC5Dq5QFig7cEjEcQXzcAmlz7DdMLVdUgUmD3gBhE5Mi6hISml
kerh/I0iM7tNZ7sfGcxJnawJDg/dUBhXo4amnsApclksLfIXze7hi2aLlt3H
3G1F+U06EnDAucoWqHGBgQRaG23FpATRMZUaNhcmKKBqxS1q+JuMcpoksFic
X6vWPQIeaZvF0iKxaIbvP9EHFmML1MTWTMCCAofoRY+8cjII2gJeqEfbrhbe
wxpucVp6S55w7Rq+VKsbFdSjMMihY5FGM6nfhDnbwkeaxfEJDXDRdLzPDe4a
8cmWFVtTXIK2YuoaVdUv6UztmrU5ue14Iev8gokFNBiHwGJt7PhVlcLSLAZb
F1zjU2fJ6YSonoAfPW/RPWkWg4ABEx5RHsutBfNJB8tceD8m6USVoqy2HFnH
g9bmcGupHtTfHBISG+I/9+wgXbDgprBuOT++XkKDAK91Y8arRGFclq7w27T1
KYUUtlzlP9Pc2/ZQuDSRQdNlCFrBmAmPxKJvdGZ1UnKj9uILgsxW8QXqYkGZ
203Gga1+5pbMQFlVg+BM4KyGhlCXF91hZGQM7KXsHK04pzCB40VTZQY3mWId
f/SKwiB7bUPN5t6hisIrVgcAhS87sE+fwxbMFbjGYMzANaTRq/Btpby4+sys
VnLtbZgiJE21kqb/2eFuLL9qEJxJc8tbqof2N4TOrvdgnmnDzwJPCpQFgym3
aKp0cWM9obCrsHotKMELl1m6p7DV6gDT2d54E5kDduHgHRNZ4IIJMzWtmS2s
col10YqtgYek5GtzeLWSnWcLyx2sPNb/q1Ze1SCwE7Ky26ge2t8QgGKxHJKp
BHNCnLAHruJyMckpTTSFaTJUURgXcEt36KSMvEhcbvGt1gSYmnld+twHauuO
QHwLCvGVarjgMH/y4+pBIYKCptErwV3SZP0BPiE5dfICdZZg7yxf++dyt3KB
oxQdg7Zi6g5MdnVKqvoFiqUlv6AzRtiAT+n6M9h+BHcEkc5iIpzabvN8/mJf
XVJ45dqHJkDhq19aucEzG6wn3HM1Qk7gooI9DOYQtiAWWc7h1WUIWlTd/waa
XSKfpSCSs3z250LEOTUPfmJf+LU0S+wAvObtu3eDVI/ubwL9/cNE9scSF5iE
8e4/RNZOge8yFz/1gcKuwq4u381QnhlBNoUn2fAwjYjKf0n/EOIXAW4H3BoO
txa4DIxmsKqTUpqI1KaWeY/S3IKNsULEnfwH3IO7ny41u210QCDhI4MrXV3z
kuoB/k2goeGNRPMstQVmeDx9KSWVaEoF2H5wvJYW1jSkMC6z5njvP6hyZoQa
FF617qHxLK+LVyTdcKOZnkdPRGnOYvFrnp3bHp/QQBN244qiVfDj60HVynN8
BMJauJOf7Ay8eH/+ufwYD/aF38szCiud1sjwkeErEpPRVkxdAOZnXpyaxT3E
JTevA8ZDFE3loovwFqXF+kiksKos3mj9dJmVppkRSim8ev0j41me0hS+4cKT
WGEjhcgiARsMnCkWG1sQCwMLilOTmv5lQQwPEYJzDSyeFMYqrvvR2mvdUfY1
n1qs/FemYI+Z39UISbWeJdyKOTqqqDsnguYYHx/H2sdrnOCWnNqEV/ZQI+GI
FYvl7+snhUFOnqFNM3RXI6OQOIXXCCksczH8/EUGmPQSeU/kEhkXuHGCrFYe
vw5fEIthVCUkNcKtEW2UBT5+cbtysm1nu807lZcubH1e8Iw+b360X57kZ8Ik
AO/qfoG2YmoXr173h4RpVNwDvC241zCNq715A6+lo58UdhXGfQxNPbRUWx4o
vHbDY7CZL1xmyjzg8LFI09leEk9qg8XikpvfASo4hlEpkXcmapVYEMJaZPr4
FhtX2VhNTuPd6SklMj4KXx6heph/5SgrxxrBq327s3Kw0uUwb2vSwCslTbKr
tf5QGJeVax+CutQGi9duxChsf0k2hUF27gleuPS+9PPaJnLp57IA4vJ5d18X
519PDDclxOIV/Eqaf9/tudJVdifl5JQmsNKpHuZfOcCCku5FS0TAWEoQFm0D
Y5iUBl56S2GQQ0e1khmxbpMSCmPHbHwsbwLRAZEZwrJpIvnsGre47fdadLlk
oiB2Xt5xC49tt7J//zH1WYqMrkDwxsFBtBVTW/j0aRRomJun8mYA8I/ozGrN
q2XiorRWueYs1pBuN1y43xu4nT5HZmbE+k1PDE2VUBhk8fIH221kbzvRAYth
bOAeMV7VIUMgXD/Jyz8+z3O3+4QDVRSftHn2/Z3Xc9i5sj8E3tvU3Ev1YP9q
0db2DuxhVe8svjGeyaomMcirUtabjimMyxLLB5u3PiONwpuBwh5EqtbPmuNt
dyRC3qvaJjI/vp7+uYAD2MZh4WWY61TYyGI35Yq84JKWuIS2YvkfwuXXZWa1
Uj3Yv1pk57bL638nU8By5sdh3QeSkknrwYcLjV6pIMScH51oszb0P2zlkwbp
trRI9hwInW1BTmbEBuunQOFzBCgMNvx3M26ftacrOEZ7RC4q7oLZVTx+webU
0mIqVV0LTRe0gDqmerB/tQDupKUTDdSCgwPHR0ZXaCMdOJZTK78hRXfC788N
Zwf/Hq+ExdqjsKuwvuXfp9+WjueqKhutnxqYeJwj1hD5kgMbvvS6s6JyuDJ/
NSk3JSGxQWLVEXgNfCRYt0f8XSGhpW/foq2Y5KPv/RDxrY9AdpiWtVd3MT6x
gamgDnZJR1a2Eq9ZqxTGxWLhvZ17gjX5hE1bMQoT72l+/FQ0aG2lh2kpfAx+
k/Qkn5vXAcZYKuHJHxcGs7qyCm3FJB81ta+I1KyDuwnkBQprb3tVqbAUeZQG
5Te1Q2Geo9OknR7bdgUtWKJ+ZgS41RiFFZrHEgJmvMXCu0SOJJ3I4AVHRslu
fgfUFi6KqrBDD2Zp0OxUD/mvEEkpjUp3TOE1dsCs0mqRavyLYGDI9rXzah/+
wv3Hw0Z56ydkU5h/5XSI9QY/C3MPs800J7GXzl/EMiMcb6iTGbF5m8oUdhXq
7hWrAwgeTCKR4UZERJUny6+VB0Y1zLrEDbPsHCyYiLZikgu4nmAvKeidVCos
naSbHl6ln7PYRPW4PktX0vOUy8efzDFwW/fPGpmbCrRkSDtfeT7fwMPqiKRD
OtPce7+dypkR1tsDZxi7SzR+IiLLV/pbbyO6ME4ii0HbhkeUK7jv8BItBmt9
RXxagA/s6npP9cD/qtD94gOwWN46MzjL4KXCATprRQoio19JSQuL0ZCblrrd
2OfEQ9l+sZZ8YafTj00NfXc5SG7z2LD5CTBLpY/asgOj8OlzKlMYZM78u/tU
Sacii8jRtEqlZZTyCzphhBDvBwSULyjqpHrgf1XANz/LvNqgoIFQdGYVidsw
iIi8cscFwcwFpkG/SG0K0h6FMaN67/1p5k9OuEq+dOI0bbqRCpkRW3cEwvFq
bxcB+p88Q1PpLZoTGeZSsH6JWMswyQuzSgnFLFJSm2DIUT3wvyrAxCjt9WCd
cIU1dmAe1nGt41KZlZ0w6U74NdDQihMhVWhRm4vSvKPrPWdYhV3D/uaes3u6
dIHP8gNY8Q3nm3xwb4+cIJQZsW1nEFBY7Vq44ID/ffrtK46qdVPVnMUwnRJv
Qx8XXw8eNJFIB15qYGDgE9Vjf6rhXcsfB59djuqTeHpwcETaCQXNC7cP7ohi
Z1l7kpjUKKsReaf/KR+z47m5uqNwnOtN5vZFbnN3Mp1vxR7ZFmBlHbz/cMTJ
qxPW9co1D9dsUJ4ZsX2XRhQGASN8mqGbGpu3NSFyVk4bTOPEzTCY7cFsgxtH
ZNqPjqlsbEJbMVXDSJVgi6nvJXa/xPNNTb1RtElhnQxBC/g4LDahGjtaknRB
i4ztoMVVzus8t/02aYFa66Fhl4gVJl5rTsSe2vvM5izHZfKrdkcijGcpyYzY
bvMcKKyqMSwhtofC1a6jqzaRmewajoqbOsDbBReMSDFzsLVgpFHChamMsY/v
hqWTScDxEXVVKy7pxvsIKwgr6EZy87DkF8l1UUHGHrOAG7Qvc4sOdnc42z8z
N36wbV/AvA1RTlKvXnfGMiMULDjv2P18mqGmFAbZujNoqbrdV2VeJYK3QI2o
IthvwmZbStZCMwStkdEV4+OoC5umgGsIVzJD2DozN78DjBzQyzmqpzWRLsBf
GEISewkKghgLFsY8KtAdhV1/4DsceDB91t1lS7y/N3t01EXGMUuWP5AXANq5
JxgofOK0phQGWbX24frNT9R+uxosjuXWylvzVCrgEE0qBiJLsK2YYaVvegeo
JsHUwdhACT3bLealuC7+8HG4vOJFiLCrWoqwcSGHV6uDcDBBAYt6cmfeLs6/
n5odyhJVVtQ+hePwpa3pS57bX36+wNBz5VEZe5j37A81t/CRfn4XRmG342RQ
GGTBYl+bvSGafIJKRMZXnzTZJA8eWQyjSrGDDB50RWUPZaSYUuivr7nzz6iV
pm4LXBpEe9Dr6l+L0r1BHeONCylnrsQtnlyyoN3n6F2b203FuqNwnOtNxpYF
7ov3x7rcYtssczewCrt6S/KYK45YZoREvVmbvUIKn4om60zA+ya4GE4KkXlx
9Qym+lVfSoWqNjKqgq+wEiPWDiwBbcUkgrGOyp6XfTUX53odC/uIb3obGhoB
2orXbSCezaQzAW8dbIMvzxSWOawP+V0YKdYRhX+Ic3EMWWTks/k8HzOt7fwM
DO5a23MvnYo+6zzpsLkL7u4Sy4yw2RcCFD5GHoWdXPHSl0pqCJDF4sKiLiKO
rVLBd9IqqMCWLTxgZARtxSSEkfL0TTOD7zVOXK5Xrz5K1FAC4weMarjsug8N
y5OklCbxBI0iTsL+M7kZOnKHJ+T6kQADY39bnLMu0evMb383y3fTEZbEMte2
nUELFt/DS1Puxil8kjQKuwqr2QOLSSm8SYTI8YlYbWpSbmJKahPoC3lLZNhW
zMjyzk60FZMIxrsCw002phUNTzz+9GkUb5EpEiarOpqGFTmEuRHuIIdXl5zS
lJ3TRqGb/KV6eXH1jwceb7WNvZ/SrUsKg9xwYJy/JuIO/9qlmHPXJINKLrf4
G6yfAMtAQCl/b3D7qMamr4QcPhZpYiZZ+lJLRMaTEEnsPxvLrY2WX0wgllOb
X9BBKTumCgbpF3wWuTaKJ2Y3t7wVGdWiMvJwqcHIgfmTy6uj0SuB0XizALjU
icmNmVltuowg45XWhN/YlZnSKCjUqRYmLgcPR+AUxmXRMhk1KjUUMNcXapAF
qRKLk4R140k0yWBQgYKQV0YGLEDQIJQxYwphsNFpqffJSMkl/cGhkY7OPgXl
ceBW5uZ1pKY1A83pjCqc9ZFRFazYmoTEBtCVBUVa3FyNd3sRLZPqG4Udb3DO
nKfbHYkwn+cjzuLpRu6kf9e6TU9Wk1o7Vx6R8SRE4h15iE/IMHhSZOWkFxRi
i+H9/WgrphIMF6euNXn0S9brhLDaOqltH+UVL+gE6gPgtxhuB9hacfH1eCdx
uP5g9MJcGpfQkC5o0aQMtUyJiq7AV84ppLCjE+esPd3uaMTO3c+BTUst/WZb
+ABVgbDfG7jNmuMNtq44i41mepJ+DkssH2zfFUTuZ8okMszYcEO14UbBsBGf
k8UF7O2GxjdUMGMqYZDLNp/hsex4enybjDrAMA1K768gKDCRZgha4xMbWOwa
mMPxMqd0JrZ/Pi29OTe/Q0PDjMmuwffy6YDC15255y4wDh2LBPN1/eYny1b4
gZKdYYyx9bsZt2eaey9cen/1ukdbdwYdsAs/eTbmimMsvvHywmUmfhgucDAc
prg6lqoya84dsNu1zWK4WeA9qVeQnIjwhA2UpZ0yeB44rnteTDEM9pWXvP0o
/3VwhRTH9QhKYVFXZlYrDAM2pzZK2N8Hpt8YRhWXX6feAjicFbjk5FIYY+tF
xuFjkTZ7gzcIW6fNmX/XwMQDJ6DpbK8FS3xXrX24dUfg/oNhJ87QLjuwleYg
bNkeaGjisWbDo+Onou0vMecuuAufQ8qWLVfh6hm2yVPFwiBqEDkyupxgEqJ6
Anc/hl7FkqqoBq4ZqAC0FVNDtLa9AzuK9BgTGGZZ2W1JKU0c4SolTupobAG8
NjmlKYvAAjg4aGrb0jdceECoI8ejbPaFbLR+unylP5ALZysImMELFvuuXPvQ
envgPmDradqlq2yJLmbEZd6ie+IWL3wOTAJAPdDpmoeHLgtLX15zIlO5yyOy
0j1dGgoYb2CtJSZPUvcwDGBgvH4jmaeDoBLGxrDd1CQGF+SROgdbAG8G1Qxz
smgBnC1nATw7p40IhYEmwNajJ6J27w/ZtOWp5Sp/i4V3DU0n2Go8y3P+ontW
awKstz3baxsKuvLiVZbabJUpQH9s75YDW+J58KZnW9wxm3tHjeI84nL8NA0m
H21QGBewRmReZy3RWZCFFROQyHhlsKrLKyS3Yo697gy7nXAvfQDb5TA2WMXJ
/eX3skrcKezvTQ5M/9m/pRdtGBEDTJJqb31XTyYWwNObwWwGVxpfAAfLCl8A
z8hslTmujp2M3nMgdPPWZytWB1gsvGc001O0pgQKEZ7cvO0ZHACHXbzC0l5/
UnHZtisIvlrmS3ACG7c8BaUMGl/tqQMmH7AitHf+4NTLY7GWGB2f2AC2n3gx
AfDC+PH1YuNxtD0p2/ncMwsDj4NBH0Zfd7OD8v5pe3f6Mn7K0FhPZq7rhfDV
c24bnSx9TRlj9BHv3g2S2x1JDckv6MQWwBMamKzqh08KpAcSsNXQ1BPIu2JV
wKatT/fsDwUVfOEyUzdslSezLXzAaFdwwMkztJnm3uB9n7+ozhZKfMoi/bTB
4zhgF75w6X3sqhJgMYmMhgkclC+d+aWYAL5X89On0c/jcbi5tvfjyyK7mY/+
k9TO4b/oHRtJvnnf+EhhITfrdnj3u6GO/6z12OL9ErVtkwCHV5egtfVJVQXs
LomRA0oNBh6FbJUpeFtwh+tK6tnecOGu3fAYlPIOm+eq1usAH2Ez4dKXROT0
uZg1Gx6BCjYx8wJHw+5IxDRDN1WJrCGjQRGD3SUqnozFqSPL2zsmFaIZzk9e
Ofe5S2hrD5jNY30P7Twtj/H+oL0ehkevSo6YBfwrZ1TeYP5mUVf/GrxU/dlH
feI0TTRUgCmat1PRhoCiXLz8AcGDwXLA/PTFvhevqvBbwJzeZxuq+alevRa7
3eY5+OkwmYByB6dDNJ8st/JbsMTX9lA4zJNq01lVRmcLywGJCqvGcmvz8sW3
Yo6/CIwwmhv1vEO4dj3YcGOxm/mZsk6hIzyQwF24mMNH62FSAHsmLKIsk6JC
WxJSXIJtIrp2g7NtZ9DxU9Gr1j5cYvmA3FUpUsR0ttd+VarLOjpxrNYETDN0
372faLIwKE1NglZw0eyORiy19IOZECaE3ftCJJa7wR+Br5CZgaVtRielNMGQ
wzcLpaY1M5jiWzE/8a/7znOowdXzSGXGZhO/WwLcgh4t/O9js7PlqGiXTIAd
q1LbRO0JPx7bISAKRQkyW4HFq9Y9JL33tyZy6mwM2KJqbPAAI9bQ1AOUuNKa
lp9LX0ougBORcxcYeE9VQ1PPDdZP5XVWPXIiysDEY/IMyb9+gyORt6UlRrNj
a2h0LFcC34r58ePnjJ3hjv9Zf+fztuHxnuBI46W8JDwTYLT3/l4vG/+3yJ6W
iZ6eD1qN+xOUzCzM1sqevFsvPqFhtoUPiV2DNZd1mx6D06ree8G+XbrCD+hz
4FC4gsPOnKeDAazS3AXEt9kbPGf+XVC+y1b4HToWqdiGWbP+0cq1D/G/nR2i
bbY9WrrAy2Dx84s35b6FREZjxQSiK/DKb0Dn+oaJVefR+uwdM5/7NOCRpGGO
412Tk2W48h3rKTlqdtc+uJX2uLIc1fuRBTqzivTN8CoJ3NbwyHKJZgRfhoGp
h+IFYZ0JUAN03KGjkZp8yD7bsOlG7stX+stbH7M9TLT0JZwPaFWYVYD1sy3u
7Nj93OG68uLVMD9gv+KY2K9wpa03d5u5iSZdKpBcRotuLt54MU0Yc0xNbxYO
w/Gu5zErdqdn45p5qPWfVu7rb3fj9vSQIH6pqa/NDyXFb9F2L9moqOwhmByh
JQETS6Jek8Tdh2GvIXdIkaMnosCdJGVr1sIlvkYzPQ8fk/Gjtu0MAldC8Sdc
uMzctPWZ8SxPOJ+1Gx+rtMnkxBkaOOmTfoVzuKWx+zI7dbaKqU1kcIrBCExO
bYqIlLUVc6y/vvz1K1Fi7WBfdcMA2u6hAAMDn1RtZEmi4HdTIjdK+u7DcNWk
QjspAlboqnXkZAuCQtwlrNMFjr+Elw1fsX6T7NKXcORe29D5i+7hSc22h8LV
mFLWS7Wacr4QaG54b9sljdYfCLJYfK7mCBsvenhnwvDr6JDsfYCgKpJSGnlk
JEeoKvkFWBaqdEtrmQMAVI/mdajUFuALmAQkFsdzFapUi4X3TM28xMtmLlji
CwSXoPyJ0zSYQ0CHzjT33roz6LLU5k/iYmLmZTvZMb920G+G2eNjUk2ptMFo
09neB+zCfv8jDfzi4pIvhVzAow96Xkw1D6Y22tq1khyhWLCEF0YVmyN7hVzm
GADv7+o11foWkSV2RyLABiZ9wRx8WzChsTSKTU/sLzHBPIa/V619iCtZYOvW
HYHAXOAvPAnGsIYncMYeWzqbrP15Jzd7T7cMc9TOdRO/fTdceOCVbNryFGYq
oK3EzTUw8Xj9GsWD1YdukiMkJD6xISKqXMHyuEwiz1/sS24mL0FZZuWnSY13
xXL2AsNs7h0Y2KKc5XmL7oHNDH/A791nG0rWT9687dkSiS0rN1k7F7vN2c5w
1u31dLzBkbiz8GOzstuopsLURkFRp3QeqPYkO6ddOs+FIJGBUDreDXLNCevq
ol4PYoJisy9EvH4IyLqNjy9cJnn3GswVew9M3hXmHG5p4rnquK53usq4s6Ye
vahthGbQZXIEHjGMI9ZeUyaRiXQtJFH22YaBWavVr9i1J1iCxaRTGCx26R3g
TmeezDK8v1uqzqdWRfqGTjdyD48oo5oEXwO4/DqlHeRJEQ63lhZTSdwNl77p
s+Z4b9keqLNRB8atvMZMpAiYl0ssH4hT2GLhPdJ9cKyGtmRdTf7F3b7T5j49
Rd7SlmIBT1/mtNzT84Hq4f+VoL7hjQ6SI/Ciaqo25pO+7wYmHpLGoXbk6rVY
UGGgyLT0+YePRxrN9Fy4xNfuaAR4wYamntMM3bbtJH+OkuhnIRSu7Sr3GVbh
17R/GZ1ceTCNTDN0l76VVA/8rwoTyRFZWkyOwOu3JKu+VUzmBD7d0P3IcZLL
uUvLrr3Bc+bJ6K2muVx35q5a9wg4C+QS17y2h8JhjgIFTeJ34VWAJENUrjEb
57qZbgg/eiDQ5lSsC3lfJyFHT0SB+QReCaKwDpCZ3RarteQILFWcWc1kq9nS
SyaRZxh7aFgeR6mAcbvd5jnpH3viNM10tpfFwrsyg+CglNdufEzi18FEIaN+
iGuElYmb0aJHe+25WqLwpavsZSv8YKbaujNI5h2kesh/heh5+VF7yRFJyY3h
EZPKtpBCZBMzL+1lIl+8ypKhwjQTsC3Xb37yvQE2sOUttp+1p4MZf+6C7KQk
NQSmhW0yClxzL9ozHaWaQpL1M7fsCAT+Lrfyxy8gorDOwGBVq2HxKpWcPCy0
JMjUtCufTCKbz/NRWnxDPQGiwfgn8QPBcjCbe2e2xZ2z4oVqnZmH9gVZWz9c
vOj+6r0xOK3WrH8ktRilpjhcjyWlAyNxOXwsEuznWXPuiJrQIQrrEhWVPTFk
J0cUl2DVy/FkNM1FJpEXLr2vjfI+wLjdJGVUgdq13o5Vu9245an4/mcXx8j1
Vo8POmBK2fH4I1MD77WneELqcWYYu9sdIaG2/J4DoQTzpDQXsIuWWD6YbuQO
bojI0kC2tI7xOTlC/Z7y0sKLqwcWk9hGROaosFzlT+5uEDBowawlZZXp/EXm
nPl3QT2dPDO5iMct9r4VXov2sifcUpeIFca35+5g4jupdu4JNjXz0nx2Wrz8
AbmFvGQKnCd8C14dSKIYAqKw7gEWNYnJEWBFy+vXQzqR120ic0Vo05anSpME
lYrLLf6O3c9hbK/d8PiGi+RGSufzz8wNfXc6fJ58XCOtTG6L9kPCpAQ6dOsO
jaJO+Mazs1roNCEuYDOYmHmBp3BcqtYQojAlwJMjSFGdhUVYBQAtdQKSSWRZ
azhqsg+G5QE7RXU5lMrFqyxwq41necppcMy333nve7F8IpfroYsMJqX6whun
Gbppsrx24FC46WzSWiFLC7jbi5bdBxMaLAdpWwjZ0lRhbGwcDGBSkiNY7Bo6
s0p7O0lkDpL9dipUt5MnJ7FsenVKbIlkz/5QGNtWqwMcneTZ5LzDaz2/nx94
7nOpHKdTj02N7ts4TOLCUks/TcpTL1/pr6U8Drg4m4Ql9FeueSgv1wxRmEIU
FnUyNU6OSEltCgsv0/bebJlEFi2Nqi1rNz5esUpN7oBXCK6ooamHsrUpnu1K
9+++sJh30vqO8eoIiSTBC5dZwBRJh5qYgK86zdBdvfcqFttD4WBjmM/zUfDh
iMLUoq8PS47QpD1xXr6wtpJOsh2lR4uBicdZDYKtwhJbHjIr6iiVA8KdV0tX
+BFIhcZo+52x3z5hMoLzlZClFn57r8hYoNu45emc+XfV2Fl96Ggk6WnR5y8y
Fy7xnWHsbrM3RMFyIrKl9QE8fl28uskRYELT6JXa2wZGhMgzZ3tLN0QjKHit
V1Xr4Tje4Fiu8gcrmnhNeOdLIUtn3Z4+577lmoBlK5/suyDbgAfbFci4R/V9
42Drkpj/BaeB71dZte6R0gA9orA+oKHhTVS0mskRcQlKKgDogMUgcxfcle+T
KhKrNQGr16s2+PGkhgVLfFWdOlycWKdORJ24EKu4BOU+2zAwD1RqhwqKEuYi
OQtrKst+uzD4gXBJT59TXgANUVhPoHZyRFZ2G5EKALoh8uJl91VVqeBLYiW2
CHdnkJfUQK7AJwODVFqnOnYyGuxezWPo5y4w5i/2hQkBjAEiPxBRWK+QpXpy
BOhf0MLxCbrIUyZIZFCsKpHL9jC2bkPwLVhSg5kX8Et7qYsiASUI1izxL1q7
4TH8dk2+EVT/uo2Pv5txG8xy4rtfEIv1Ci9ffgwJUy05AlgPHjGFHdxkEnmD
tQoqbNkKvw0EVB6o7Imkhh3qtypWVYCVBHu9wSwEBrDdUTU3cMLb99qGgg1v
sfDeGVV2jCAK6yGw5IgUoskRaektoeFlqlYA0A2Rd+wmlF2I73RSmu0oO6lB
+3LFMRasfSKL53hLKfV2bwJtgbxA4X22hExoRGE9R2UV0eSI/IJOoHBKqmRx
af0hMpjKSsfh3gOhs+YoKrElL6lBZ7JtV9BMc2+lX73R+ukyKz9VPxzMZjCe
wYRet+mxSitpiMX6DDw5QukuaDCh6cwqXVbRVI/ISjuKLlziay2/opfcpAYd
CvAXTkBp4QI4RqU9bKBzd+8PMTDxmL/YV728ZkRhfQaWHKEsqTAxqTE8UqMK
ADojsrx+oK5Ce1VeHq4oqQFUFSUFscXl0NFIsKsV7Co5K8zGIq5MT5+Lmbvg
LvjRau8bRxTWc7R39ClOjgBNjVUAyNK0AoDOiCyvifDOPVj/UOnnlSU1UCCL
lt1f9bl7qbSAOQEHEPkch+ucVesewuy0wfqpJrMTYrGeA0+OkLeXEqsAEF1B
SZsnTYgsc8SCPpJeBCOQ1ECBgG0P2lZeofvZFj5gHiv+BHDwbfYGzzB2BydC
wzAZovCUQFFxl7yqd1x+XRStksQKALoh8hLLBxILRBcuYyW2xNU0ntQAruJB
MgpukC7rNj2RWbYa/yGKd3GDX28+zwesCyIrfojCXwf6+oZkJkdkCCsAkFsY
RGdEBotUnAJbdwSK17maSGqwJJLUQI2AbWBo6iG9hLXd5vn8RffkvQt+jtWa
ADChN219Kl21ALH46wYvTjI5orCoKyyiLClZKxUAdMBikM1bv9SxMZt7B083
UCOpgSrZvS/EaKanhHdgsfDuTlnBcTCh4Xn4XeAyk1VJD1F4aqGhUTI5gsmq
ZjCrKdymRQqRbfaFXHZg79mPNTsD/n5JarhKZvVaLQkQEwzjTWJzEb7MLn3y
J07TZlvcMTXzOnRUnXRLROGvAyMjY8LkiImF6OSUJniom+5s2iYy3hpJ+nnK
SUpEgJ5gHosqctvsDZHoZAG8XrEKM6Gttz0jt0woYvFURFZOWyyntrikO1dY
ASBdoNN+x1olsnpCOYVxWb7Sf9kKP9FZiartObnywEeeZui+xPIB6YX3EYX1
E0NtTQG/pkXXjWEPxgbKY3N/+zk7sWdcdEBxSVdwaClIaHgpO1an27Rg6igq
7gLVn1/QCXNITm57dk5bZlabILMVJpO09JbUtObk1CZw0hOTGsF/j4uv58XV
c3l1sdxaNqeGxa5hsKrpzCoavSo6ppJEIusDzS9JNSJ0FaYlzppzZ6a5t3oV
SxCFpyAGS6PSrh14MN3oyR9lYyPtdb+dCbXZcPc7o6e3K8bwI1697scpjAtw
QUQxcI0nsSwPY1nWJJY1pwDLUjCWJQDLEhr4k1nGxFnGAJZVwidHRldERJWH
R5SHhpeB0hf/XpHA82DSh0eWR0ZVRNEq4F0xjCrgKXjrrNgaNqeWw63l8uv4
cfVxCQ3Aa2B3UkpTSmoT8D09o0VnRFYs15y4pORDSXzsMitha6QdgdrY6e1y
i49YrI8YfFNeMzjAZZsv5nBqK//lJEjpHu0NjzKyYLE/ThwiUsQiARIpYBm8
NMGyaIxltAmWVeMsA8ucw/vCsgRxlqVjLMsQtIIPnpXdlp3bDtNCXn4HTBGF
RV0wV5C1nkY5hYnIpq3Ptu0M2rU3eJ9t2MEjEUdPRJ08Qzt7gQEW8tVrsbif
e92ZK/1G7a3OIQrrMcZa/EPM7OJ//2d2fh88HM36KcDYrrBzQhX/VV3zSoKn
QDRgWc5kloFSnoqr1v/6ORGM8KnI9O9m3J5h5C69Ooco/E1iJN7J13RpdADu
F4++vmPjudmjZ+Tzy8PDo6BGxVkMw34KEVaBYPtL04UrdTk1D37i/Pi4qRj+
zqt/9gf/okNqaJai30g5i+WJNijscJ2DWKzXGOlx2+qx2KXxg/DR2MuSI7P9
/pE5In7I0NBIRWVPbl57e0ffy1cfwYdlMKunXLBJQmAiEqZetqYEJZ0/+tTC
wG3jT3UCZu5/fkr+80/GKiPP3e7qL8V/TURG7rD+Y+xVyVEzv1sZE7Tt58Va
zGXQ+xS9BUgNnmxEVLkaFfb0R8AXALuiuLA+Iqw2JyN9p4nPsd/yPALrC+DV
goJT893X/qOmSGvfPoVYjCis/+iP48xfwI7txx+N5v3y0HCboKC2ISLx9Yj8
d42Pj1dU9IAui09smKLWdUZma3hkOf53UTR3hdG9HT+VCvBXszP3z/Tc40Fl
xqWeEPnkGRpisd5jRPCjn+G+vNZR/OFQ+ClPkzW0/9JfvBtT/EYMPT0fommV
THa1vlUJICKJyY105kS6Vu6DqJmmgT/HTfyKghDWIpOnP/L060fl5LbTYiph
5skQ7rrRAYuROzxFMNZV3d3yhbHjvXU9bYMqvH9wcCQhEaskr/sy1BoKl1f3
uT16F+dfTwy3JvGL8Zc6Qx39jHekxBVTf5K4FJd0x8XXg+UDJyyvMCnpREbu
8DcFsK5Ly7CVosSkxilkXdMZVUkTRT477h/3WXKltAB/SZB7dLHfhSB9mZQy
s9rwyLvEPFksqPD+kX3uAtv5tywv9zzSWbzdJgix+FtDd/d7GGys2BpdtnfR
RMA0FWQKPd/i6pvrPbf/0YyFmUqaH10Ntvu9Kpfq0ysVZoByuLX44sPkagzd
qc8T7K8kuvnmev/Bt7XynL49Ob5EUh1r5A6fjUEU/jYxMPCJH18PXM7O0ffq
ATDVfKl+kJt90Oz2303uWm4JPnIpziO6pZjq0ysVlvgOiyiLYVTl5klW+S5i
JlqvinmYjT9sub3Pa6ljWQF5RrXjDeQOf9MYGxsHgoD6SCJckZ4SgXkGThK3
/7EFatOgf4aVBkY35FN9YqXC+t5MVnVoeFlyapMsD6Xtwcm7Sx0+2/8FhacX
eNvdm5g2NWcxuMOWK/0RixE6OvsiosrZHP21rlPTm6NoE2kdAo9Q46XMoELq
zwo4C7Mf8JfFrpG7qSY379i8u6eeTLya/ThmnvGX5XTN1fEOm+eIwgg4Pn4c
FpbXq1Bal54SiUtoYE2kWHYGXbpvsCs1pYTiU8rNa6fRsUBSusIG7gVh7CWm
Qb+mCnV0XsUv++5NW0h/8nkK0pDFp5A7jDAZYF3n5XcIm7/onXXNjq2Jw9s7
Ftf/e4v7PPuiAupOBgskJTRggSSe3ECSSNJvBxvMj3lY8KK0sN73H4k/Xwww
2p2eKjYFqc1icIfN5t5BLEaQRmvbO9AvHG6tXtW8jaZVpqYJG0vlZNvNvWPz
RwNVK1qZ2VggCYRYwB0LbU+fF+lJL/jxYqwnp8Xz4MTSljwWEycycocRFOD9
+yE2pzY6plJ6uZUSwfMgJhbSi9szc6lx3kHtcnh1cCagiIlPcYK74TNnuFvs
4AYkdpUWljuu9NrrKblTVA0W79yN3GEEJRgdHcvObQfrOjWd+taK+QWdwaGl
1K68gfMLJgqNLiOQpESKm+hRdVm4CS3I2D3L72qE5DqYqur49LmY6UbuiMUI
RNDU3BsWUQbeH7XWtSCzNTyinKpvLyjsZLJrYEJLSpEZSFLlo0JYi0xD/hRI
Pq8Six2dkDuMoBr6+gZZ7BoavZLCluVAH4KtmckV4GyyMJDEZJOSnd2d+Gug
wTJWsKwYmQQlFTRstVyF3GEElTEyMibIagWlrDikoj3h8uvAIdXxl4LlDFMH
2ADyutepLh1+p3ymb09JlBUjkyamdF8nkF17gpEiRlAbDQ1vQCvx4iiwrhnM
6kQdtqeBHxgvDCRxeLVkOuO5xResvJc7yI2RSRBz30HJvk5nztORO4ygIXrf
DgChQENJd3PTqkRElWcIdFQBICu7LUoYSCK/LkpxuyBH0ZwgTU/xJmvXnLiz
LXwQhRE0x6dPo2BXh0XojlagGYNDS3XglYPa5aoeSCJXJBhqvf1LXyer1QFo
syUCiaitew3WNV8npTVzctuBxdr+os+BpEpqm8NKMHSaoRvY1XZHInbYBM2a
g9xhBJLx5k0/3uJB26U109JbwMTV3ufD+bPwQFIy9TUTpHmKN5iT2WOO6iGA
8DVgeHg0JbXpS/K+diQ+sYHJ1kqrKSyQlCoMJLGqdezpEycyYjGCDlBZ1YP7
klpSZGxOLV9WMwgNBQ8khUWUTZSp1xuRqY4RhRG0jZevPkbHVDJY1QVF5Gs0
WkxlShqZu0CxQFIiFkiK5dbqTy3QouKuDEELP66ezqiS5iyiMIIOMDQ0kpjc
qI3C9WDxkliuEwsk0fBAEpXFq3EBlxwsAS6/jkavDA4thRNLz2iprXuFWIxA
FcbHx8srXoCOSyCvcD2McxjepGhMLJDEFwaS4usp3BYODnhqWjOHVwuchZ8G
Vj3MJw2Nb96/HxJdSURhBGrxoucDjE+yCteDZgfXVfPPAWMVCyTFVFJSyQR8
8OTUJjDgwQYA5jJZ1XAazc29/f2f5F1GeRQe7X3BepBy62b8r/61NX3j8t6O
gKAhBgdHwPGMjCKYR69IYPDH0DXKg8ACSbE1WPFtHQaS4IuAp0nJjezYGpg9
gLlA4fyCjra2d4NDCvrwfIEs/Tv+OjPz0sUk/5gaelDa8bXPfikY1ep9RPjG
AdY1ntqfmKTR/mdeXD2Mf7WplCIMJDF0EkgCKx1mrYSkRha7BuwH+O08YWOI
zs73nz6pQzdJE/pjo/PqyGcvcP07VuufEdFL2v1CQJCHri5NC9cDARPUmgfy
8icCSVqtcgDMBa82PqGBIaxkC18Hf5eVv3jx4sPoKIG+WapgrCN//8zHPwr6
8RlhbGhkmNwvQECQA3D9+HFY4Xr1HFIwy9MFqsVzQQUnaDOQhIWEMlv58fV0
ZhV8CxjMSSmNlVU9r171j41p01EdfUe7/tDEwGPu6sAD5/k+SW8RixF0Bhjb
hUWdoWFlySoWrsfzIFSqkJOdIwwkRVUISA0kwWyQntECFjI46XBKMCmBiq+p
edXbOwC+gw6v5fhAz6uClKoHDo+NzKNDetDqFoJO0d6BFa6P5aiQsQv8xdqO
E4sKwcfyhIEkPkmBJCwklN7M5dVFx2DBXBq9UpDZWt/wuq9vSPmvJR9jbTHF
/HcTD0ZqM7fOjQp+iViMoGt8+DjM4dVG0ypziOUNgfqLJJYHkSFohSkiWuNA
EnjTKalNnM8hIQazGpR7U1Pvx4+UW68j6T+x/VtxX3ukxi9q5/80v6X4lBC+
UYyOjhEvXJ+Q1MhkVSs+pqCok40HktTq4joREkppYnNqYB4A5sKnwRm2tr4d
HCQUEtIRxj5G2fsYLHxid4F9yZ7u5NvyAkWZECgFcIRI4fpYbi0vTlEeREpq
c1h4GWjM/AIVfGdgLmhYYD0rtiY8ohxv8QCee0dH3/CwHnNjdLC5qCU5o7P5
Hcmr3wgI6kFYuL4GK1wvv4gHjV6VLEdlg7qkM4WBJGKJEsKQUBuW5CgMCYHE
CUscdHe/HxlBpEBAUBNY4focRYXrQc9K51ZggaSkRiyQxFESSCoq7hJktgJb
QVnjISHQvxWVPS9ffiQ9mIuA8C1jonA9X7K0JjAUvFSJQiLA+mhaJTiw8uoS
YCEhQQvY4TEMLCQER6akNVVXv3zzpl+3ISEEhG8L794NMtnVEoXrs7LbQE2L
m8TATWxbY5xkIEmY39eM5fcJQ0JgpWcIWurqX8PHUv3LEBC+IWCF6zMnFa5P
SW0GVuJ/w0t4ICn7cyAJCwmlNXO4E/l9dEYVsL6x8c2HD5SHhBAQvmnUCwvX
c3i1DBZmD2MBqbQmNqcWz1nOyW1PTmkCdxgPCbHYNbl57S0tbwcG5Ob3ISAg
6B69vQNAXiCpSMIjyxmsavgfa9bArQX7ub393RCx/D4EBATdo7//kziF8a2P
4Ah3damZ34eAgKA9DHe3PffIS+oZH+tp/PNU2K8ZmHodHh4FnSvO4uqaV1Sf
KQICgjSGqxkZ1/ff/9447GFrzwO7O98ZPv6taELVFhZ1iihMZ1Qh4xkBQQ8x
9rpLUDbQR4sxXRn3yIt5+X5DfkZLxYeJV8fHxxubejMyW4tLutDKFQKCHmOs
yitw1pZwV/+ufqpPBQEBQS0Msy7dmb42UfCR6hNBQEBQD8Odv23w3OLZg5xe
BIQpirEXhbZmT/4oRVkJCAhTFX0spvlibgLa6YyAMFXxKcHlvtGRoh6kihEQ
pipGOqp7ugdQqiACAgICAsK3i9HRsYFBtKUEAWEK49Y/41ete0j1WSAgIKiP
+Yt97S8yqT4LBAQESeTmtR85HsXh1oo/2djUe82Ju3Ltw4tXWPgzlVU9f59+
Gw6m4hwREBDkIi6+/qw9HeiZntGMP9PZ9f4fPya4ewr6+oaystuWWfnhzz/w
z7Xe9oyyE0VAQJCPp4GFwOLWNqz5SXhEmeMNDv73X8Le6L1vB/C/Dx2NjIgs
o+wsERAQ5OO3/6aamHl9+jT6w4/xDGaVzGOAzkssH6C0ZQQE/QR4vjtsnl9x
YGfntMk7BuztP93SdXlWCAgIBDE+Pj5/se/CJb62duEKDuvs7HvzBuU0IyDo
IyoqsZVnx+ucBYt9x8bQ9k4EhKkH3wc5RjM9GxrefDfjtiCzlerTQUBAUBlg
SJ+1p8Mf5+wZ1525VJ8OAgKCaujvH55h7B5Dr4S/i4q7phu5N7f0Un1SCAgI
KiAhsQFY/P79EP5wn23opassiWNQdAkBQZ9xw4V77GSU6GFaejN4x3Hx9aJn
Cgo6TpymUXFqCAgIyjEw+GmmuXcUrUL8yf/8mmw007OwqBP+rq17ZXckoqkZ
2dgICHqK5JTGq46xEgbz2Nj4L7+lLFjsa3so3D8g7+NH1BQVAQEBAQEBAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQFBZfw/TEBFnQ==
     "], {{0, 165.6}, {193.2, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{193.2, 165.6},
   PlotRange->{{0, 193.2}, {0, 165.6}}]], "Input",ExpressionUUID->
  "bea7a8bc-c54f-415c-948b-db0abb9b8a49"]
}], "Text",
 CellChangeTimes->{{3.891822866131912*^9, 3.8918228942195444`*^9}, {
  3.891824232297812*^9, 
  3.891824252791385*^9}},ExpressionUUID->"ee50de04-e1dc-4269-a39d-\
551523d39c70"],

Cell[TextData[{
 StyleBox["2.10. ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Eta]", "(", "h", ")"}], "=", " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "15bc5fdb-32bb-4023-bb6f-37efc2b0fa2c"],
 " ",
 Cell[BoxData[
  FormBox[GridBox[{
     {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
     {"4", "2", "1", "5", "0", "3", "7", "6", "9", "8"}
    }], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9a380983-929e-404b-9b25-c5ae232395d1"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Rho]", "(", "h", ")"}], "="}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "682f8116-f9da-4e64-a5b9-16983e145df1"],
 " ",
 Cell[BoxData[
  FormBox[GridBox[{
     {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
     {"1", "2", "0", "4", "5", "6", "3", "9", "7", "8"}
    }], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "15433f64-a6f6-47bb-9d91-3d1d73d55819"]
}], "Text",
 CellChangeTimes->{{3.891824296644415*^9, 3.8918245227528377`*^9}, {
   3.891824654792301*^9, 3.891824697283074*^9}, 
   3.891825199882617*^9},ExpressionUUID->"cf7c7045-4052-41a9-bc94-\
60932b8ae077"],

Cell[TextData[{
 StyleBox["2.11.",
  FontWeight->"Bold"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt2s2OLEcRBtAGNixZ8ALwFGxhh8TKiAewxcVic5FsJMRj+Qmbi0YajW9V
Zdd/RkSeo7Zle2asyPzi6y6P/Lvv/vXNP375eDx+/PWXP33z7X/++MMP3/73
r7/58jd/+/zjP7///Onvf/7870/ff/rhD9/96ss//O0vHo8/ffnj/3/9BAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4uccHvWehAwuQ2mNO76G4
z+wC2IFElhIU4gga6VuDLCQ4OC3Obk2CQixs5QLYgchmw5LgOJaytgNZNJIS
4gjaKduBFKYx/f6nv3x5zX6176hc4WXEdiC+2Qq/v9pf9SrwehmxFsenxYO/
tLgALR789Zhof7X3wjJDi72WiqzCWWix17StS3pvK/OW3odnw+09LOfYV+Te
U9MyW+RGu3vPyyG7P457D07LmgQfP3+c7j0yOy09VL99VX9T21RhRU6q0d+P
vsr9/jnZbVOFFTmXTQlKObX205QuJ7U1OPmmNv0tx/QbFDmXHZEJN7Udj1uy
jmxfWJJNbd8Tl7hj2p2RWFM78o4t8TgOvs3KNLWt8flQDuh4KNJM7fjTl+j7
OiUOUaZ2ygOY9Hs5Kwg5pnbWM5gFuN+J9y/E1M59D7cG9zj92sWX2vH4FPlm
V1y47FK74nnMMlznoqsWXGoXPZLZhytcd8lSS+3St3QrcaJL71ZkqV39rm4x
jrvhSoWV2hXxKfKJ7rlMSaV2zxOa9djntmsUU2q3PaTZkK3uvEAZpXbzm7w9
WenmS5NOave/z1uVti7XJZrU7olPkVfqdVFySa3XM5uFmep4RUJJre97vrV5
1/daxJFa97d9mxPhQmSRWpf4IuxtEEGuQhCpBXmEG3N/4lxC9wE4ItRHwFAr
FKfC02G6zMBu3eMLtcy3iXbkOJOwQ4T4hipyzMOGGoatgsQXc7dPF/aY0eZh
kzjxhd3ws0Q+YMCRWC9afJFX/Yjg54o5FSsFjC/4wu8Q/ziRZ+OlmPGVKXKW
gwQfj7aw8WXZ/4ZER4g/IQ3B48vSgqlEFX6GXwPa4seXqw5v0s2cZU5mpYgv
VykSjfou17R8JUt8KYqcYshZ6Qbmo0TxBe9I8PHaMs7Mu3TxxSxLzKnWSzo2
bzLGF60y0ebZIe/kPNPGF6c4QcY4KPv8g8sbX/cidx/gRAWOMLLs8fWqUqUK
P/OvweAKxHd/oYpV+FliDUZWI747a1Wvws8qazCsMvHdU656/X1T70RDqRTf
pUUu+RH8ruShxlEvvivqVrvCz4prMJSS8a0v3WPiyL8tr8JHG0HV+NrVm5Z3
qc4jVPhZdw0GUTi+2fat6e9H5fv7ZoQzFlY+viMVnha592muUn4NahshviMV
/ljk3ue40AhrUNgg8S3V88h3VjLIGlQ1SHyN5+SP39Z49u41+T0GWYOqRoiv
UeH3U6/5PVjvc1xohDUobIT42hVuvLSYFEaIb1rGNRWe/cGqRliDwkaIb7aM
Lyu89IMljbAGhY0Q31IZ2xVu/GA9I6xBYSPEN/091Y7/KNZiwhokvq1FHqrC
z2HWoKpB4pu2cqnLS9/Z+wTXGmQNqhonvqV6rtF79suNswYljRNf43O2rfzN
PEdag5JGiG/NA3O7woUv580Ia1BY+fhW/vKq3d/C9/NmkGNWVTu+pV9Bv311
qb9rfraYEc5YWOH4jtdwnCKXP2BtVeM7sX0jdLnw0UZQL74rSle+yFXPNYhi
8V1Xt9pFLnmocVSK7+qiFS5yvRMNpUx8t1WsZJcrnWVANeK7uVb1ilzmIGPK
Hl+vQhUrco1TDCt1fH2rVKnIBY4wsrzxBSlRhBmOyz7/4JLGF6TCAYfZJ+/k
PHPGF7Ay2YucdGze5Iovclkiz/ZSxpl5lyi++DWJP+GSdAPzUZb4EhUk0ajv
Eo3KVIr40vUi+8C9x2Gb+PHlqsO7XEVOMSRLIseXqwhTieaPPyENYeNLVIG2
FAeJPBsvxYwvxeavF/84YQdjjYDxBV/4fYIXOeZUrBQqvuCrflDk0wUcifXi
xBd5yc8S9ozR5mGTIPGFXe8rBDxsnEnYIUJ8Abf6atGOHGQM9ukeX6hlvlOo
IkeYgd06xhdqjbuIcwPdB+CIXvHFWeDuIlyFFFLrEl+EvQ2l+4UIIrX74+u+
sTH1vRZZpHZzfPrb0LHIEknttvh8BK/U5ZaEkto98anwJvdfl1xSuyE+Fd7h
5ksTTWpXx6fCu915ddJJ7dL49Peg24oso9Quis9H8IluuEwxpXZFfCp8uquv
VFKpnR6fCl/k0osVVmrnxqfCl7rueuWV2onx6e89ruiy1FI7JT4fwTc7/cIF
l9rx+FS4i3OvXXapHYxPhTs68fLFl9qR+FS4u7MikGBqu+PT3ziOd1mOqe2I
z0dwQAdDEWVqW+NT4bCORCPN1B4TjW9W4eB2ByTQpKb9bXdZhbN4mdQ0bpmm
0+7vbJf1N5elIr9MXLIprK/w7Lu0Cmextb8fE+89Oy1bK7xU5N7nYJUdFX7T
e3BaXpZ0TYt7H4JttlZYkSObTWq2oUtF7jo+eyyVtB23Ioc1m9G0xbMfyiqc
1FJ/v3rfXnoM6zs8X1kKaP0vM/vOzw4vK9x+6xZ6NEvpLLV4mmnH4dlnmmAj
bqHHp8WjaXywKnJSWjyadnxyz2hrixs/Qgov49PidB4Tb/98/W+3Xv4nlVeo
1+74tDiyIy3uvpNeW19aXNLsx/GaHLU442t3iFoc3DTZx/b/A9Mry2tHjrNv
9YQyW9KXum+j177X1ihVOIutFe49L/ttClT6uajwOFbGKv2k9HcQ69+0LUBS
4huBCkMBKgwFqDCUob8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA
df4HJieE2Q==
     "], {{0, 165.6}, {193.2, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{193.2, 165.6},
   PlotRange->{{0, 193.2}, {0, 165.6}}]], "Input",ExpressionUUID->
  "b26671cf-4f47-46f3-a43f-9a9046f99275"],
 "\n",
 StyleBox["2.12.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "0"], "="}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ec7a8989-f994-4c7b-be4c-9cbdcd8289dd"],
 Cell[BoxData[
  FormBox[GridBox[{
     {"1", "1", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
     {"1", "\[Placeholder]", "1", "\[Placeholder]", "\[Placeholder]"},
     {"1", "\[Placeholder]", "\[Placeholder]", "1", "\[Placeholder]"},
     {"1", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "1"},
     {"\[Placeholder]", "1", "\[Placeholder]", "\[Placeholder]", "1"},
     {"\[Placeholder]", "1", "1", "\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", "1", "1", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "1", "1"}
    }], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b94776f2-48ff-4f01-8b3b-6b8d604eb07a"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "1"], "="}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f35371c7-2375-42bc-abd9-de37df071ab7"],
 Cell[BoxData[
  FormBox[GridBox[{
     {"1", "\[Placeholder]", "\[Placeholder]", "1", "1", "\[Placeholder]", 
      "\[Placeholder]", "\[Placeholder]"},
     {"1", "1", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "1", 
      "\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "1", "1", "\[Placeholder]", "\[Placeholder]", 
      "\[Placeholder]", "1", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", "1", "1", "\[Placeholder]", 
      "\[Placeholder]", "\[Placeholder]", "1"}
    }], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fb5fa1c5-33f9-4f0f-b76e-df8f49f0573d"],
 "\n",
 StyleBox["2.13.",
  FontWeight->"Bold"],
 " Link of every vertex is either a single vertex or a pair of vertices. If \
it is a single vertex, then the vertex has a single edged with a neighbour \
vertex. If it is a pair of vertices, then the vertex has two edges with two \
neighbours. So each node is connected with maximum two other vertices, so it \
is a path or a loop."
}], "Text",
 CellChangeTimes->{{3.8918251942026834`*^9, 3.8918252097394834`*^9}, {
  3.8930292370007153`*^9, 
  3.8930297028787727`*^9}},ExpressionUUID->"04904710-0b1a-4b99-a49d-\
d44ee3d1dcfd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.891824396404608*^9, 
  3.8918243968695974`*^9}},ExpressionUUID->"934a6a3a-01c6-422c-971f-\
11cf638d0510"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exterior calculus", "Subtitle",
 CellChangeTimes->{{3.893667555460267*^9, 
  3.893667565080514*^9}},ExpressionUUID->"d4c9bcb2-334e-4e3e-898e-\
bc9854e487df"],

Cell[TextData[{
 StyleBox["1.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{"v", "\[Wedge]", "w"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["e", "1"], "+", 
        RowBox[{"2", 
         SubscriptBox["e", "2"]}]}], ")"}], "\[Wedge]", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["e", "2"], "+", 
        RowBox[{"2", 
         SubscriptBox["e", "3"]}]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["e", "1"], "\[Wedge]", 
       SubscriptBox["e", "2"]}], "+", 
      RowBox[{"2", 
       RowBox[{
        SubscriptBox["e", "1"], "\[Wedge]", 
        SubscriptBox["e", "3"]}]}], "+", 
      RowBox[{"4", 
       RowBox[{
        SubscriptBox["e", "2"], "\[Wedge]", 
        SubscriptBox["e", "3"]}]}]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"w", "\[Wedge]", "v"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["e", "1"]}], "\[Wedge]", 
      SubscriptBox["e", "2"]}], "-", 
     RowBox[{"2", 
      RowBox[{
       SubscriptBox["e", "1"], "\[Wedge]", 
       SubscriptBox["e", "3"]}]}], "-", 
     RowBox[{"4", 
      RowBox[{
       SubscriptBox["e", "2"], "\[Wedge]", 
       SubscriptBox["e", "3"]}]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"v", "\[Wedge]", "v"}], "=", "0"}], TraditionalForm]}],
  FormatType->TraditionalForm,ExpressionUUID->
  "3f6f52bd-900a-4944-aa48-607bfe8d331c"]
}], "Text",
 CellChangeTimes->{{3.893667585741822*^9, 3.893667691109235*^9}, {
  3.8936677247551484`*^9, 
  3.893667769773365*^9}},ExpressionUUID->"3781a3ed-b821-4ea8-b939-\
5a07b8c0328b"],

Cell[TextData[{
 StyleBox["2. ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "0"], "\[Wedge]", 
     SubscriptBox["\[Alpha]", "1"], "\[Wedge]", 
     SubscriptBox["\[Alpha]", "2"]}], "=", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4997f1ed-fc7a-4223-9fb7-23aecb3794ed"],
 " because in 2-dimensional space the maximal dimension of forms is 2."
}], "Text",
 CellChangeTimes->{{3.893667774462368*^9, 
  3.893667879030754*^9}},ExpressionUUID->"42d0bf17-a5bd-45a3-8465-\
ae81bcd40a33"],

Cell[TextData[{
 StyleBox["3.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{"u", "\[Wedge]", "v"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["e", "1"], "+", 
        SubscriptBox["e", "2"], "+", 
        SubscriptBox["e", "3"]}], ")"}], "\[Wedge]", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["e", "1"], "-", 
        SubscriptBox["e", "2"], "+", 
        SubscriptBox["e", "3"]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{
        SubscriptBox["e", "1"], "\[Wedge]", 
        SubscriptBox["e", "2"]}]}], "+", 
      RowBox[{"2", 
       RowBox[{
        SubscriptBox["e", "2"], "\[Wedge]", 
        SubscriptBox["e", "3"]}]}]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"u", "\[Cross]", "v"}], "=", 
    RowBox[{
     RowBox[{"|", 
      RowBox[{GridBox[{
         {
          SubscriptBox["e", "1"]},
         {"1"},
         {"1"}
        }], GridBox[{
         {
          SubscriptBox["e", "2"]},
         {"1"},
         {
          RowBox[{"-", "1"}]}
        }], GridBox[{
         {
          SubscriptBox["e", "3"]},
         {"1"},
         {"1"}
        }]}], "|"}], "=", 
     RowBox[{
      RowBox[{"2", 
       SubscriptBox["e", "1"]}], "-", 
      RowBox[{"2", 
       SubscriptBox["e", "3"]}]}]}]}], TraditionalForm]}],
  FormatType->TraditionalForm,ExpressionUUID->
  "cc55a57e-2127-41f2-b6df-75c2f6910ccc"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "\[Wedge]", "v"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "40d8a1b3-1825-4de8-840b-d55c1796374c"],
 " is a 2-vector, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "\[Cross]", "v"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5f1be288-db04-43e2-9fd5-a1a7dd7556a3"],
 " is a 1-vector."
}], "Text",
 CellChangeTimes->{{3.893667943437335*^9, 3.8936679923113747`*^9}, {
  3.8936680350766506`*^9, 3.893668043612147*^9}, {3.8936681137631197`*^9, 
  3.893668234708083*^9}, {3.8936683954914265`*^9, 
  3.893668462317564*^9}},ExpressionUUID->"d3ce8907-65e7-422d-8db0-\
fd1ea6c56903"],

Cell[TextData[{
 StyleBox["4. ",
  FontWeight->"Bold"],
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"u", "\[Wedge]", "v"}], "+", 
     RowBox[{"v", "\[Wedge]", "w"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"u", "\[Wedge]", "v"}], "-", 
      RowBox[{"w", "\[Wedge]", "v"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"u", "-", "w"}], ")"}], "\[Wedge]", "v"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], 
           SubscriptBox["e", "1"]}], "-", 
          SubscriptBox["e", "3"]}], ")"}], "\[Wedge]", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["e", "1"], "-", 
          SubscriptBox["e", "2"], "+", 
          RowBox[{"2", 
           SubscriptBox["e", "3"]}]}], ")"}]}], "=", "\[IndentingNewLine]", 
       RowBox[{"=", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{
           SubscriptBox["e", "1"], "\[Wedge]", 
           SubscriptBox["e", "2"]}]}], "-", 
         RowBox[{"3", 
          RowBox[{
           SubscriptBox["e", "1"], "\[Wedge]", 
           SubscriptBox["e", "3"]}]}], "-", 
         RowBox[{
          SubscriptBox["e", "2"], "\[Wedge]", 
          SubscriptBox["e", "3"]}]}]}]}]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u", "\[Wedge]", "v"}], ")"}], "\[Wedge]", "w"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{
          SubscriptBox["e", "1"], "\[Wedge]", 
          SubscriptBox["e", "2"]}]}], "+", 
        RowBox[{"3", 
         RowBox[{
          SubscriptBox["e", "1"], "\[Wedge]", 
          SubscriptBox["e", "3"]}]}], "+", 
        RowBox[{
         SubscriptBox["e", "2"], "\[Wedge]", 
         SubscriptBox["e", "3"]}]}], ")"}], "\[Wedge]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", 
         SubscriptBox["e", "1"]}], "+", 
        SubscriptBox["e", "2"]}], ")"}]}], "=", "0"}]}], TraditionalForm]}],
  FormatType->TraditionalForm,ExpressionUUID->
  "888bc2b2-c2da-4dc2-a90d-c5383decb514"]
}], "Text",
 CellChangeTimes->{{3.893668565451586*^9, 3.893668804856459*^9}, {
  3.8936688539457846`*^9, 3.8936689817709312`*^9}, {3.893669877565308*^9, 
  3.8936699007281294`*^9}},ExpressionUUID->"5fe7bc32-875b-4826-8e59-\
404fed2c443b"],

Cell[TextData[{
 StyleBox["5.",
  FontWeight->"Bold"],
 " In ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "00054074-a9e8-4393-ae48-8adc0f7148fc"],
 " \[LongDash] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5bae9ea0-7af5-4783-b015-0c1507b40146"],
 ", in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "56d7422b-738c-42d3-a3d7-1d1b26854095"],
 " \[LongDash] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["e", "2"], "\[Wedge]", 
    SubscriptBox["e", "3"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8db4ba15-0a52-411f-bc5b-59ec3e3e49d2"],
 ". Results are different, because orthonormal spaces has different \
dimensions."
}], "Text",
 CellChangeTimes->{{3.893669920010644*^9, 3.893669975404565*^9}, {
  3.8936700689534216`*^9, 
  3.8936701019840117`*^9}},ExpressionUUID->"3714e5e2-991d-4b5e-b076-\
02f7a1e82901"],

Cell[TextData[{
 StyleBox["6.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Star]", "\[Alpha]"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["e", "2"], "\[Wedge]", 
      SubscriptBox["e", "3"]}], "-", 
     RowBox[{
      SubscriptBox["e", "1"], "\[Wedge]", 
      SubscriptBox["e", "3"]}], "+", 
     RowBox[{
      SubscriptBox["e", "2"], "\[Wedge]", 
      SubscriptBox["e", "3"]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e1b93271-b5e0-4efe-a4cf-0082f93e2fcc"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Star]", "\[Beta]"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["e", "2"], "\[Wedge]", 
      SubscriptBox["e", "3"]}], "+", 
     RowBox[{
      SubscriptBox["e", "1"], "\[Wedge]", 
      SubscriptBox["e", "3"]}], "+", 
     RowBox[{"2", 
      RowBox[{
       SubscriptBox["e", "2"], "\[Wedge]", 
       SubscriptBox["e", "3"]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "060e20ec-7ca9-40ef-bff4-b2c529df02b1"],
 "\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{"*", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "\[Wedge]", "\[Beta]"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{
          SubscriptBox["e", "1"], "\[Wedge]", 
          SubscriptBox["e", "2"]}]}], "+", 
        RowBox[{
         SubscriptBox["e", "1"], "\[Wedge]", 
         SubscriptBox["e", "3"]}], "+", 
        RowBox[{"3", 
         RowBox[{
          SubscriptBox["e", "2"], "\[Wedge]", 
          SubscriptBox["e", "3"]}]}]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{"3", 
       SubscriptBox["e", "1"]}], "-", 
      SubscriptBox["e", "2"], "-", 
      RowBox[{"2", 
       SubscriptBox["e", "3"]}]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\[Alpha]", ")"}], "\[Wedge]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Beta]", ")"}], "=", "0"}]}]}]}], TraditionalForm]}],
  FormatType->TraditionalForm,ExpressionUUID->
  "20db66a2-bb7d-4a76-b403-4ca7b6f70da3"],
 "\nThe difference is because the Hodge star and the wedge doesn\
\[CloseCurlyQuote]t commute."
}], "Text",
 CellChangeTimes->{{3.893670989038631*^9, 3.8936710884736166`*^9}, {
  3.893671224571824*^9, 3.893671319731022*^9}, {3.8936716944744005`*^9, 
  3.8936717392556553`*^9}, {3.8936717706714954`*^9, 3.893671862728118*^9}, {
  3.8936722074778423`*^9, 
  3.893672227909401*^9}},ExpressionUUID->"f059e619-d389-4e30-977a-\
82dda4fd2f4f"],

Cell[TextData[{
 StyleBox["7.",
  FontWeight->"Bold"],
 " Two 90-degree rotation is an inversion.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"*", 
      SubscriptBox["e", "i"]}], "=", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"i", "+", "1"}]], 
      RowBox[{
       SubscriptBox["e", "1"], "\[Wedge]", 
       SubscriptBox["e", "2"], "\[Wedge]", "\[Ellipsis]", "\[Wedge]", 
       SubscriptBox["e", "n"]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"**", 
      SubscriptBox["e", "i"]}], "=", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"i", "+", "1"}]], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"n", "-", "i"}]], 
       SubscriptBox["e", "i"]}], "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"n", "+", "1"}]], 
       SubscriptBox["e", "i"], " "}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7b388cdf-4271-49f2-a072-a9bdff7c4524"],
 "."
}], "Text",
 CellChangeTimes->{{3.893672524979165*^9, 3.8936725491807795`*^9}, 
   3.893672753235553*^9, {3.893672785251959*^9, 3.893672792727785*^9}, {
   3.893672855021471*^9, 3.893672956965189*^9}, {3.8936730335012608`*^9, 
   3.8936730492811704`*^9}, {3.8936731197331133`*^9, 
   3.8936731208585005`*^9}, {3.8936731568262377`*^9, 
   3.8936731966278257`*^9}},ExpressionUUID->"55faad1f-37a1-4822-99ad-\
d32eda0090bd"],

Cell[TextData[{
 StyleBox["8.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"*", "\[Gamma]"}], "=", 
     SubscriptBox["e", "1"]}], ",", 
    RowBox[{
     RowBox[{"\[Beta]", "+", 
      RowBox[{"*", "\[Gamma]"}]}], "=", 
     RowBox[{
      RowBox[{"2", 
       SubscriptBox["e", "1"]}], "-", 
      SubscriptBox["e", "2"]}]}], ",", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Wedge]", 
      RowBox[{"(", 
       RowBox[{"\[Beta]", "+", 
        RowBox[{"*", "\[Gamma]"}]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], 
       RowBox[{
        SubscriptBox["e", "1"], "\[Wedge]", 
        SubscriptBox["e", "3"]}]}], "+", 
      RowBox[{"2", 
       RowBox[{
        SubscriptBox["e", "2"], "\[Wedge]", 
        SubscriptBox["e", "3"]}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "059224c3-b89c-4169-a775-36b2eefd2024"],
 ".\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{"*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]", "\[Wedge]"}], "*", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "\[Wedge]", "\[Beta]"}], ")"}]}], ")"}]}], "=", 
    RowBox[{"*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["e", "2"], "\[Wedge]", 
        SubscriptBox["e", "3"], "\[Wedge]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], 
          RowBox[{
           SubscriptBox["e", "1"], "\[Wedge]", 
           SubscriptBox["e", "3"]}]}], "+", 
         RowBox[{"4", 
          RowBox[{
           SubscriptBox["e", "2"], "\[Wedge]", 
           SubscriptBox["e", "3"]}]}]}], ")"}]}], ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"=", 
    RowBox[{
     RowBox[{"*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["e", "2"], "\[Wedge]", 
        SubscriptBox["e", "3"], "\[Wedge]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", 
           SubscriptBox["e", "2"]}], "+", 
          RowBox[{"4", 
           SubscriptBox["e", "1"]}]}], ")"}]}], ")"}]}], "=", "4"}]}], 
   TraditionalForm]}],
  FormatType->TraditionalForm,ExpressionUUID->
  "eb9c0eb0-c04c-49c2-8791-d69a01788eb0"]
}], "Text",
 CellChangeTimes->{{3.893673231149485*^9, 3.8936732510345774`*^9}, {
  3.89367337240224*^9, 
  3.89367371027719*^9}},ExpressionUUID->"8db8eaba-aa89-4a4c-af77-\
50526d3ee280"],

Cell[TextData[{
 StyleBox["9.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", 
    RowBox[{
     RowBox[{"2", "z", " ", 
      RowBox[{"\[DifferentialD]", "x"}]}], "+", 
     RowBox[{"2", 
      SuperscriptBox["x", "2"], 
      RowBox[{"\[DifferentialD]", "y"}]}], "+", 
     RowBox[{"5", 
      RowBox[{"cos", "(", "y", ")"}], 
      RowBox[{"\[DifferentialD]", "z"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d2a2e7a7-d861-432c-92d1-64c437bd9c67"],
 ". At ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "27112d28-ab85-449d-8c16-125d02a0fe8f"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Alpha]", "p"], "=", 
    RowBox[{
     RowBox[{"6", 
      RowBox[{"\[DifferentialD]", "x"}]}], "+", 
     RowBox[{"3", 
      RowBox[{"\[DifferentialD]", "y"}]}], "+", 
     RowBox[{"5", " ", 
      RowBox[{"cos", "(", "2", ")"}], 
      RowBox[{"\[DifferentialD]", "z"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fbeb5941-cbc2-4bbe-ae37-77f56eb95046"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "p"], "(", "U", ")"}], "=", 
    RowBox[{"24", "+", 
     RowBox[{"5", 
      RowBox[{"cos", "(", "2", ")"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "dad0aaa8-f05a-4439-a99e-eef71f1299ca"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Dash]", 
    RowBox[{"\[Alpha]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "z", " ", 
       RowBox[{"\[DifferentialD]", "x"}]}], "-", 
      RowBox[{"2", 
       SuperscriptBox["x", "2"], 
       RowBox[{"\[DifferentialD]", "y"}]}], "-", 
      RowBox[{"5", 
       RowBox[{"cos", "(", "y", ")"}], 
       RowBox[{"\[DifferentialD]", "z"}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e786faf0-77b2-4ef5-a488-cabf71ad2c90"]
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8938019162454195`*^9, 
  3.893802147384843*^9}},ExpressionUUID->"e2655df3-03b4-46e1-a248-\
01c3dae208d2"],

Cell[TextData[{
 StyleBox["10.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "(", "U", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1a20a530-9a0b-4140-83e7-844cbc9cfb3e"],
 " is a scalar function. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", "(", "U", ")"}], "=", 
     RowBox[{"2", "x"}]}], ",", " ", 
    RowBox[{
     RowBox[{"\[Alpha]", "(", "V", ")"}], "=", 
     RowBox[{
      SuperscriptBox["x", "2"], "y"}]}], ",", " ", 
    RowBox[{
     RowBox[{"\[Beta]", "(", "U", ")"}], "=", 
     RowBox[{"1", "+", "x"}]}], ",", " ", 
    RowBox[{
     RowBox[{"\[Beta]", "(", "V", ")"}], "=", "4"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e6030031-5d8d-429c-8eb5-fac6aa1114d3"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "\[Wedge]", "\[Beta]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"U", ",", "V"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "x"}], " ", 
         RowBox[{
          RowBox[{"\[DifferentialD]", "x"}], "\[Wedge]", 
          RowBox[{"\[DifferentialD]", "y"}]}]}], "+", 
        RowBox[{"x", 
         RowBox[{
          RowBox[{"\[DifferentialD]", "y"}], "\[Wedge]", 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"U", ",", "V"}], ")"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "y"}], "+", 
      RowBox[{"8", "x"}], "-", 
      RowBox[{
       SuperscriptBox["x", "3"], "y"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d11fa9d4-bebc-4f7a-b6e4-8f6a0f344733"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "\[Wedge]", "\[Beta]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"V", ",", "U"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "\[Wedge]", "\[Beta]"}], ")"}]}], 
     RowBox[{"(", 
      RowBox[{"U", ",", "V"}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f9deb4fc-a35e-4d57-a11b-39dfec611c1e"]
}], "Text",
 CellChangeTimes->{{3.893802165425494*^9, 3.8938021680190334`*^9}, {
  3.8938022081039395`*^9, 3.8938024136679964`*^9}, {3.893802464837734*^9, 
  3.8938025360365124`*^9}, {3.8938025700427933`*^9, 3.893802609613049*^9}, {
  3.8938026493695045`*^9, 
  3.893802650822008*^9}},ExpressionUUID->"7dea4943-f2c7-4bda-8b73-\
58eef73ca78b"],

Cell[TextData[{
 StyleBox["11.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[DifferentialD]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["e", "y"], 
           RowBox[{"\[DifferentialD]", "x"}]}], "+", 
          RowBox[{
           RowBox[{"sin", "(", "z", ")"}], 
           RowBox[{"\[DifferentialD]", "z"}]}]}], ")"}]}], ")"}], "\[Wedge]", 
      RowBox[{"\[DifferentialD]", "z"}]}], "=", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["e", "y"], 
           RowBox[{
            RowBox[{"\[DifferentialD]", "x"}], "\[Wedge]", 
            RowBox[{"\[DifferentialD]", "y"}]}]}], ")"}], ")"}], "\[Wedge]", 
        RowBox[{"\[DifferentialD]", "z"}]}], "=", 
       RowBox[{
        RowBox[{
         SuperscriptBox["e", "y"], 
         RowBox[{
          RowBox[{"\[DifferentialD]", "z"}], "\[Wedge]", 
          RowBox[{"\[DifferentialD]", "z"}]}]}], "=", "0"}]}]}]}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3bb5642d-f89d-4841-a0af-6c0256448b6c"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[DifferentialD]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"\[DifferentialD]", "x"}], "\[Wedge]", 
             SuperscriptBox["z", "2"]}], 
            RowBox[{"\[DifferentialD]", "y"}]}], ")"}]}], ")"}], "+", 
        RowBox[{"*", 
         RowBox[{"(", 
          RowBox[{"xyz", 
           RowBox[{
            RowBox[{"\[DifferentialD]", "x"}], "\[Wedge]", 
            RowBox[{"\[DifferentialD]", "z"}], "\[Wedge]", 
            RowBox[{"\[DifferentialD]", "y"}]}]}], ")"}]}]}], ")"}], "=", 
      RowBox[{"\[DifferentialD]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "z", 
             RowBox[{
              RowBox[{"\[DifferentialD]", "x"}], "\[Wedge]", 
              RowBox[{"\[DifferentialD]", "y"}], "\[Wedge]", 
              RowBox[{"\[DifferentialD]", "z"}]}]}], ")"}], "-", "xyz"}], 
          ")"}], "=", 
         RowBox[{
          RowBox[{"\[DifferentialD]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "z"}], "-", "xyz"}], ")"}]}], "=", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "-", "xy"}], ")"}], 
            RowBox[{"\[DifferentialD]", "z"}]}], "-", 
           RowBox[{"yz", 
            RowBox[{"\[DifferentialD]", "x"}]}], "-", 
           RowBox[{"xz", 
            RowBox[{"\[DifferentialD]", "y"}]}]}]}]}]}]}]}]}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "722e51d1-de50-4494-ad33-a977e23ba95c"]
}], "Text",
 CellChangeTimes->{{3.8938026523785954`*^9, 3.893802765031615*^9}, {
  3.8938027964707747`*^9, 3.8938029078959613`*^9}, {3.893803026550825*^9, 
  3.893803033128624*^9}, {3.893803122104306*^9, 3.8938031476566887`*^9}, {
  3.8938031832188663`*^9, 
  3.893803244789914*^9}},ExpressionUUID->"5a6faa27-0188-48de-84f6-\
18b9314832d1"],

Cell[TextData[{
 StyleBox["12.",
  FontWeight->"Bold"],
 " If \[Alpha] is 0-form, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"*", 
    RowBox[{"(", "\[Alpha]", ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "08785fce-b2ca-475b-8ff7-de6db9f56abb"],
 " is a ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "27cc4057-0d47-4521-a6d9-2b27748add48"],
 "-form, so ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"(", "\[Alpha]", ")"}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "06e6a809-8a2e-4085-b0ad-bc345d0b8342"],
 " is 0.\nIf it is ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3a5829f8-71a6-4f2c-8382-78e56dbe6583"],
 "-form, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"*", 
    RowBox[{"(", "\[Alpha]", ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a04ca7de-25fd-4b2e-a9f5-486ed701cfeb"],
 " is a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"n", "-", "k"}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d26eaa0f-e8cc-45d0-944b-fa653cda4f53"],
 "-form, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"(", "\[Alpha]", ")"}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ec70570a-f4e5-40e7-91b0-0c5eb66d22b5"],
 " is a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"n", "-", "k", "+", "1"}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "04aab799-71b7-406d-909a-041f260760a0"],
 "-form, and ",
 Cell[BoxData[
  FormBox["\[Delta]\[Alpha]", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4397e43c-36cb-42d9-bdf3-d02f4db67284"],
 " is a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"k", "-", "1"}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "433eba8b-133b-4633-a31c-c3f052de07de"],
 "-form.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"*", "\[Alpha]"}], "=", 
    RowBox[{
     RowBox[{"*", 
      RowBox[{"(", 
       RowBox[{"\[DifferentialD]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["e", "y"], 
           RowBox[{
            RowBox[{"\[DifferentialD]", "y"}], "\[Wedge]", 
            RowBox[{"\[DifferentialD]", "z"}]}]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "+", "y"}], ")"}], "2"], 
           RowBox[{
            RowBox[{"\[DifferentialD]", "x"}], "\[Wedge]", 
            RowBox[{"\[DifferentialD]", "z"}]}]}]}], ")"}]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{"*", 
       RowBox[{"(", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"x", "+", "y"}], ")"}], 
         RowBox[{
          RowBox[{"\[DifferentialD]", "x"}], "\[Wedge]", 
          RowBox[{"\[DifferentialD]", "y"}], "\[Wedge]", 
          RowBox[{"\[DifferentialD]", "z"}]}]}], ")"}]}], "=", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4656bdbd-4708-4f13-b218-0f8e6412fcf1"],
 "."
}], "Text",
 CellChangeTimes->{{3.893803396539236*^9, 3.893803662595251*^9}, {
  3.8938037247139626`*^9, 
  3.893803760089734*^9}},ExpressionUUID->"94a4879c-782d-4001-b9c0-\
1c93c7a01c6c"],

Cell[TextData[{
 StyleBox["13.",
  FontWeight->"Bold"],
 " \[Delta] of a zero-form is zero, as shown above.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], "\[Phi]"}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["x", "2"]}]], "=", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "eb79dac4-ccd1-4761-a148-900759700706"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], "\[Phi]"}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["y", "2"]}]], "=", "4"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e89a79d0-78cf-4720-bdc3-6df3e7b18411"],
 ", so the Laplacian is 4.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", "=", 
    RowBox[{"*", 
     RowBox[{"(", 
      RowBox[{"\[DifferentialD]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "+", 
               RowBox[{"4", "y"}]}], ")"}], " ", 
             RowBox[{"\[DifferentialD]", "y"}]}], "+", 
            RowBox[{"y", 
             RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], ")"}], "=", 
         RowBox[{
          RowBox[{"*", 
           RowBox[{"(", 
            RowBox[{"\[DifferentialD]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"x", "+", 
                   RowBox[{"4", "y"}]}], ")"}]}], 
                RowBox[{"\[DifferentialD]", "x"}]}], "+", 
               RowBox[{"y", 
                RowBox[{"\[DifferentialD]", "y"}]}]}], ")"}]}], ")"}]}], "=", 
          RowBox[{
           RowBox[{"*", 
            RowBox[{"(", 
             RowBox[{"4", 
              RowBox[{
               RowBox[{"\[DifferentialD]", "x"}], "\[Wedge]", 
               RowBox[{"\[DifferentialD]", "y"}]}]}], ")"}]}], "=", 
           "4"}]}]}]}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1f2f51e6-3115-428b-97b2-149e878a12d0"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]\[Alpha]", "=", 
    RowBox[{"*", 
     RowBox[{"(", 
      RowBox[{"\[DifferentialD]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], 
            RowBox[{
             RowBox[{"\[DifferentialD]", "y"}], "\[Wedge]", 
             RowBox[{"\[DifferentialD]", "z"}]}]}], ")"}], ")"}], "+", 
         RowBox[{"\[DifferentialD]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[DifferentialD]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", 
                 RowBox[{
                  RowBox[{"\[DifferentialD]", "y"}], "\[Wedge]", 
                  RowBox[{"\[DifferentialD]", "z"}]}]}], "-", 
                RowBox[{"z", 
                 RowBox[{
                  RowBox[{"\[DifferentialD]", "x"}], "\[Wedge]", 
                  RowBox[{"\[DifferentialD]", "z"}]}]}], "-", 
                RowBox[{"y", 
                 RowBox[{
                  RowBox[{"\[DifferentialD]", "x"}], "\[Wedge]", 
                  RowBox[{"\[DifferentialD]", "y"}]}]}]}], ")"}]}], ")"}], 
            "\[IndentingNewLine]", "=", 
            RowBox[{
             RowBox[{"*", 
              RowBox[{"(", 
               RowBox[{"\[DifferentialD]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], 
                  RowBox[{"\[DifferentialD]", "x"}]}], ")"}]}], ")"}]}], "+", 
             RowBox[{"\[DifferentialD]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[DifferentialD]", "x"}], "\[Wedge]", 
                   RowBox[{"\[DifferentialD]", "y"}], "\[Wedge]", 
                   RowBox[{"\[DifferentialD]", "z"}]}], ")"}], ")"}], "=", 
                "0"}]}]}]}]}]}]}]}]}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "114f2f11-a284-44d5-aa4a-4b5a57402f2b"],
 "/"
}], "Text",
 CellChangeTimes->{{3.8938038238176274`*^9, 3.8938038498544855`*^9}, {
  3.893803880048782*^9, 
  3.8938044174084435`*^9}},ExpressionUUID->"ac8b0702-6200-4db2-aa69-\
b961da601e45"],

Cell[TextData[{
 StyleBox["14.",
  FontWeight->"Bold"],
 " In single variable case, exterior derivative gives a one-form, and usual \
derivative gives a scalar function. The secondary derivative is equals not to \
\[DifferentialD]\[DifferentialD], but to the Laplacian \[CapitalDelta]."
}], "Text",
 CellChangeTimes->{{3.8938044889940023`*^9, 3.893804592564773*^9}, {
  3.893975656226909*^9, 
  3.8939756571764946`*^9}},ExpressionUUID->"d78de8b6-041e-4d23-b9c5-\
64680ff23cfd"],

Cell[TextData[{
 StyleBox["15.",
  FontWeight->"Bold"],
 " The unit vector is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1", "/", 
       SqrtBox["2"]}], ",", 
      RowBox[{"1", "/", 
       SqrtBox["2"]}]}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1b761692-f076-4f45-ae3f-35cc6b30bbc0"],
 ". ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Alpha]", "(", "u", ")"}], "=", 
    RowBox[{
     RowBox[{
      SqrtBox["2"], "+", 
      FractionBox["x", 
       SqrtBox["2"]]}], "=", 
     RowBox[{
      SqrtBox["2"], "+", 
      FractionBox["l", "2"]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7d9e12fe-93d7-4848-9c99-0a00bafbccda"],
 ". ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["\[Alpha]", "^"], "(", 
     RowBox[{"A", ",", "B"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       SqrtBox["2"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SqrtBox["2"], "+", 
         FractionBox["l", "2"]}], ")"}], 
       RowBox[{"\[DifferentialD]", "l"}]}]}], "=", 
     RowBox[{
      RowBox[{"2", "+", 
       FractionBox["1", "2"]}], "=", "2.5"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8bd14f95-0346-4675-b5ef-f5b79ba29ba7"],
 ". ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["\[Alpha]", "^"], "(", 
     RowBox[{"B", ",", "A"}], ")"}], "=", 
    RowBox[{"-", "2.5"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "72e3919c-487e-4b36-88bf-04b5fb525cb9"]
}], "Text",
 CellChangeTimes->{{3.8939756595123615`*^9, 3.8939757256591663`*^9}, {
  3.893975786161634*^9, 3.8939758950179944`*^9}, {3.8939759402250547`*^9, 
  3.8939760030928583`*^9}, {3.89397610002629*^9, 
  3.8939761693376603`*^9}},ExpressionUUID->"35f92a76-52b3-4ac5-bc4e-\
3eaf288c50a9"],

Cell[TextData[{
 StyleBox["16.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["d", "1"], "\[SmallCircle]", 
        SubscriptBox["d", "0"]}], " ", "f"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"u", ",", "v", ",", "w"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["d", "0"], "f"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"u", ",", "w"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["d", "0"], "f"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"v", ",", "w"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["d", "0"], "f"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"w", ",", "u"}], ")"}]}]}], "=", "\[IndentingNewLine]", 
     RowBox[{"=", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "(", "u", ")"}], "-", 
        RowBox[{"f", "(", "w", ")"}], "+", 
        RowBox[{"f", "(", "v", ")"}], "-", 
        RowBox[{"f", "(", "w", ")"}], "+", 
        RowBox[{"f", "(", "w", ")"}], "-", 
        RowBox[{"f", "(", "u", ")"}]}], "=", "0."}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "69e9d5d7-1fbf-4a52-b86c-4cf9a7e7d2c9"]
}], "Text",
 CellChangeTimes->{{3.894288577176504*^9, 3.894288581129604*^9}, {
  3.894288617523937*^9, 
  3.894288758195097*^9}},ExpressionUUID->"4a78c2ff-fafe-49b7-b524-\
ded252c56b0e"],

Cell[TextData[{
 StyleBox["17.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", " ", "f"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a5b8e743-ee77-4fce-9509-f96cc2a1a04a"],
 " is a discrete 1-form defined on edges. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["f", 
       RowBox[{"A", " ", "D"}]]}], "=", "1"}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["f", 
       RowBox[{"A", " ", "B"}]]}], "=", 
     RowBox[{"-", "3"}]}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["f", 
       RowBox[{"D", " ", "B"}]]}], "=", 
     RowBox[{"-", "4"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1be73447-c8b5-4347-95ab-847ad2482639"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["f", 
       RowBox[{"B", " ", "C"}]]}], "=", "1"}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["f", 
       RowBox[{"C", " ", "D"}]]}], "=", "3"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e4a249f5-552f-4081-ba60-e4acf55aaae1"],
 ". ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"d", "(", 
     RowBox[{"d", " ", "f"}], ")"}], "=", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6ee275f1-e439-419f-8668-932f50b7cef2"],
 "."
}], "Text",
 CellChangeTimes->{{3.8942887774894996`*^9, 3.894288939824747*^9}, {
  3.894289287412528*^9, 
  3.894289287412528*^9}},ExpressionUUID->"6b37868d-4751-41d7-88d2-\
509b2bdeee70"],

Cell[TextData[{
 StyleBox["18.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", 
      SubscriptBox["\[Wedge]", 
       RowBox[{"0", ",", "0"}]], 
      SubscriptBox[
       RowBox[{"h", " "}], "A"]}], "=", 
     RowBox[{"-", "15"}]}], ",", " ", 
    RowBox[{
     RowBox[{"f", 
      SubscriptBox["\[Wedge]", 
       RowBox[{"0", ",", "0"}]], 
      SubscriptBox[
       RowBox[{"h", " "}], "B"]}], "=", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"f", 
      SubscriptBox["\[Wedge]", 
       RowBox[{"0", ",", "0"}]], 
      SubscriptBox[
       RowBox[{"h", " "}], "C"]}], "=", "6"}], ",", " ", 
    RowBox[{
     RowBox[{"f", 
      SubscriptBox["\[Wedge]", 
       RowBox[{"0", ",", "0"}]], 
      SubscriptBox[
       RowBox[{"h", " "}], "D"]}], "=", "18"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a9d00ddc-4e8d-40e7-af5f-299add1fe7d4"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "f"}], ")"}], 
      SubscriptBox["\[Wedge]", 
       RowBox[{"1", ",", "0"}]], 
      SubscriptBox["h", 
       RowBox[{"A", " ", "D"}]]}], "=", "0"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "f"}], ")"}], 
      SubscriptBox["\[Wedge]", 
       RowBox[{"1", ",", "0"}]], 
      SubscriptBox["h", 
       RowBox[{"A", " ", "B"}]]}], "=", "4.5"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "f"}], ")"}], 
      SubscriptBox["\[Wedge]", 
       RowBox[{"1", ",", "0"}]], 
      SubscriptBox["h", 
       RowBox[{"D", " ", "B"}]]}], "=", 
     RowBox[{"-", "6"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "f"}], ")"}], 
      SubscriptBox["\[Wedge]", 
       RowBox[{"1", ",", "0"}]], 
      SubscriptBox["h", 
       RowBox[{"B", " ", "C"}]]}], "=", "1"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "f"}], ")"}], 
      SubscriptBox["\[Wedge]", 
       RowBox[{"1", ",", "0"}]], 
      SubscriptBox["h", 
       RowBox[{"C", " ", "D"}]]}], "=", "7.5"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "869b214b-568f-4a00-8c71-174ee63e9e56"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[
      RowBox[{"d", "(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", " ", "f"}], ")"}], 
        SubscriptBox["\[Wedge]", 
         RowBox[{"1", ",", "0"}]], "h"}], ")"}], 
      RowBox[{"A", " ", "D", " ", "B"}]], "=", "10.5"}], ",", " ", 
    RowBox[{
     SubscriptBox[
      RowBox[{"d", "(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", " ", "f"}], ")"}], 
        SubscriptBox["\[Wedge]", 
         RowBox[{"1", ",", "0"}]], "h"}], ")"}], 
      RowBox[{"B", " ", "C", " ", "D"}]], "=", "2.5"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f148f62e-be0e-4522-a9a3-9b15adcf7e0c"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"d", "(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"d", " ", "f"}], ")"}], 
          SubscriptBox["\[Wedge]", 
           RowBox[{"1", ",", "0"}]], "h"}], ")"}], 
        SubscriptBox["\[Wedge]", 
         RowBox[{"2", ",", "0"}]], "h"}], ")"}], 
      RowBox[{"A", " ", "D", " ", "B"}]], "=", "0"}], ",", " ", 
    RowBox[{
     SubscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"d", "(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"d", " ", "f"}], ")"}], 
          SubscriptBox["\[Wedge]", 
           RowBox[{"1", ",", "0"}]], "h"}], ")"}], 
        SubscriptBox["\[Wedge]", 
         RowBox[{"2", ",", "0"}]], "h"}], ")"}], 
      RowBox[{" ", 
       RowBox[{"B", " ", "C", " ", "D"}]}]], "=", "4.17"}]}], 
   TraditionalForm]],ExpressionUUID->"36aa6b3c-f1bb-453d-891e-ffca96d7d323"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["h", 
       RowBox[{"A", " ", "D"}]]}], "=", "6"}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["h", 
       RowBox[{"A", " ", "B"}]]}], "=", "3"}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["h", 
       RowBox[{"D", " ", "B"}]]}], "=", 
     RowBox[{"-", "3"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ab1174be-1a29-4ee1-af66-8deb8d8582a4"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["h", 
       RowBox[{"B", " ", "C"}]]}], "=", "2"}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["h", 
       RowBox[{"C", " ", "D"}]]}], "=", "1"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "69b3764c-f1aa-4d0f-adbc-1623d7192735"],
 "\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "f"}], ")"}], 
     SubscriptBox["\[Wedge]", 
      RowBox[{"1", ",", "1"}]], 
     SubscriptBox[
      RowBox[{"(", 
       RowBox[{"d", " ", "h"}], ")"}], 
      RowBox[{"A", " ", "B", " ", "D"}]]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "6"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "9"}], "-", "24", "-", "3", "-", "12", "+", "3", "+", 
        "24"}], ")"}]}], "=", 
     RowBox[{"-", "3.5"}]}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "f"}], ")"}], 
     SubscriptBox["\[Wedge]", 
      RowBox[{"1", ",", "1"}]], 
     SubscriptBox[
      RowBox[{"(", 
       RowBox[{"d", " ", "h"}], ")"}], 
      RowBox[{"B", " ", "C", " ", "D"}]]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "6"], 
      RowBox[{"(", 
       RowBox[{"1", "-", "9", "-", "3", "-", "6", "+", "4", "+", "3"}], 
       ")"}]}], "=", 
     RowBox[{"-", "1.67"}]}]}], TraditionalForm]}],
  FormatType->TraditionalForm,ExpressionUUID->
  "b8d75dd5-925d-4a19-8303-9b77245c69e0"]
}], "Text",
 CellChangeTimes->{{3.89428898894952*^9, 3.894289062698783*^9}, {
  3.894289155346752*^9, 3.894289339091419*^9}, {3.894289451237728*^9, 
  3.8942896347090025`*^9}, {3.894289686963825*^9, 3.894289691506052*^9}, {
  3.8942898198420544`*^9, 3.8942899092695236`*^9}, {3.8942899749273357`*^9, 
  3.8942899803910894`*^9}, {3.894290022765161*^9, 3.8942900238307967`*^9}, {
  3.8942900723650017`*^9, 3.8942900739173093`*^9}, {3.894290121270046*^9, 
  3.8942903545562596`*^9}},ExpressionUUID->"71ba6b14-a120-48a8-a68f-\
1c3399231f63"],

Cell[TextData[{
 StyleBox["19.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["g", "A"], "=", "2"}], ",", " ", 
    RowBox[{
     SubscriptBox["g", "B"], "=", "3"}], ",", " ", 
    RowBox[{
     SubscriptBox["g", "C"], "=", 
     RowBox[{
      SubscriptBox["g", "D"], "=", "0"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3de3374a-3d56-4368-a804-4554171afcbc"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["g", 
       RowBox[{"A", " ", "D"}]]}], "=", 
     RowBox[{"-", "2"}]}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["g", 
       RowBox[{"A", " ", "B"}]]}], "=", "1"}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["g", 
       RowBox[{"D", " ", "B"}]]}], "=", "3"}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox[
       RowBox[{"g", " "}], 
       RowBox[{"B", " ", "C"}]]}], "=", 
     RowBox[{"-", "3"}]}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["g", 
       RowBox[{"C", " ", "D"}]]}], "=", " ", "0", " "}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "af366e68-6f20-4844-9b62-e44742fc590d"],
 "\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["g", 
       RowBox[{"A", " ", "D"}]]}], "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "1"], 
        RowBox[{"6", 
         SuperscriptBox["y", "3"], 
         RowBox[{"\[DifferentialD]", "y"}]}]}]}], "=", 
      RowBox[{"-", "2"}]}]}], ",", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["g", 
       RowBox[{"A", " ", "B"}]]}], "=", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "1"], 
       RowBox[{"\[DifferentialD]", "x"}]}], "=", "1"}]}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["g", 
       RowBox[{"C", " ", "D"}]]}], "=", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "1"], "0"}], "=", "0"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox["g", 
       RowBox[{"D", " ", "B"}]]}], "=", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", 
        SqrtBox["2"]], 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"9", 
           SuperscriptBox["l", "2"]}], 
          RowBox[{"2", 
           SqrtBox["2"]}]], ")"}], 
        RowBox[{"\[DifferentialD]", "l"}]}]}], "=", "3"}]}], ",", " ", 
    RowBox[{
     RowBox[{"d", " ", 
      SubscriptBox[
       RowBox[{"g", " "}], 
       RowBox[{"B", " ", "C"}]]}], "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "1"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "y"}], "+", "2"}], ")"}], 
         RowBox[{"\[DifferentialD]", "y"}]}]}]}], "=", 
      RowBox[{"-", "3"}]}]}]}], TraditionalForm]}],
  FormatType->TraditionalForm,ExpressionUUID->
  "4a10451e-cd50-4e42-b103-0b3cfee631b0"],
 "\nAnswers are the same, because discretization and differential commute."
}], "Text",
 CellChangeTimes->{{3.8943228974308414`*^9, 3.894323112560916*^9}, {
  3.8943231439689755`*^9, 3.894323300407889*^9}, {3.8943233735750914`*^9, 
  3.894323430735468*^9}, {3.8943235207523065`*^9, 
  3.8943236867272367`*^9}},ExpressionUUID->"9cc1be4c-1f63-4b02-8556-\
7056894d7253"],

Cell[TextData[{
 StyleBox["20.\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "0"], "=", " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1ebdaa1e-d3a6-48a7-8189-5b9a172b771a"],
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{"-", "1"}], "\[Placeholder]", "\[Placeholder]", "1"},
     {
      RowBox[{"-", "1"}], "1", "\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "1", "\[Placeholder]", 
      RowBox[{"-", "1"}]},
     {"\[Placeholder]", 
      RowBox[{"-", "1"}], "1", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", 
      RowBox[{"-", "1"}], "1"}
    }], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9b09b7a5-16db-4784-bf2e-37c428d7a620"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "1"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3d71af69-92db-4504-a743-5fa135c2dba4"],
 "=",
 Cell[BoxData[
  FormBox[GridBox[{
     {"1", 
      RowBox[{"-", "1"}], "1", "\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", "1", "1", "1"}
    }], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "004eaf19-6c50-4e41-8b9d-ead827eaaa29"]
}], "Text",
 CellChangeTimes->{{3.894323736534757*^9, 3.8943237369182634`*^9}, {
  3.894323767950065*^9, 
  3.8943239460234756`*^9}},ExpressionUUID->"6112bfd8-3549-4e79-8315-\
90748105c7b1"],

Cell[TextData[{
 StyleBox["21. ",
  FontWeight->"Bold"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztvQlcU1m271/V3ffdfl19+97/e59+9737+nVBRkJIIMzzPM+zIoiIDCqD
ooIiiCIiKgiKOCAzyCTIPA8hajnPU6moVdXWbFmWlkOhDPXfJ6cqnYIQkpCT
nYT9/ayqj0Byzj5nr/U7e5+zz1qakWv8Y3733nvvrf8j+J//8o1269YtTw34
D/BDUOL6VbGJ0VFuiRuiY6PXmUb+HvzS7P333tsD/sP+/TMCgUAgEAgEAoFA
IBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBQCAQCAQCgUAgEAgEAoFA/IaJN89fjE3AbgUCgUD8ljdXcr20bLMuvIXd
EIQsvL1etSl2WWhAQJCf/28tICL/HOzWIRDz4O2dIl8G+UNGbPML2E1ByMzL
ztUsMtlz5+CVq1cuXz5/ZqTnREWSu9eua7AbhkDIzPiDo4vtQ5f7USlee++M
w24NQlaeH4+gUS0yzo7981djw5vXVHwJr0kIxLyY+KxmufWyY6MfbbOgGKzt
H5v7GwilZPz2XleKdkT9M6HfTX5z6cIomq0jVJPJL0/E2oYeHR2f+Lw0iEoP
LPl8EnaTELLxuiuRRXHKvoLECKEWTD7pWuPgV3gHc+ix/kRdmnn6WTR4Uk3G
7xb4kBkxTejOIUIdmHw2uMneM+/KG/5P47dz3ei0iIZnc3wLoZy86ojTIzvu
voaGTgg14MWZLfamYfv6uCM8vvVs96aTnXOvo/viqgi4uLjSP6TqcozMjE0s
TEwtjA30OOFVj9EKNoTq8fpSjru+/eLwZcuX/Wp+VjoarMTON7CbhpCBFyei
tOn2mWe+fSrg2fPXSJsQqsdPN/Z5GS8tfyjsvROjB/zIlICDD5FLqx5vL++0
pbCi0Xo1hKozfv9QkGnAoXvTblG8ao9jksxTRtB9cZVj8smxZTSK6240LUeo
NuMPykINPfdemyFCb6/k2JMZS6qfoEUFqsYYL9VcUyvmOBo6IVSZiUdVYfq2
G0d+nPmnSWzJE81q23n02EfFGL9X4EnXNN9yGg17EarK2KWyjZGeFiyWbUD8
pvTqK0K+/OJcWebG1YHmbF0dE6+INQX9X8NrJkIKJr/lFq1b7mXM4ujq2/lG
JyUXcr9FY18EQrWZmJj4xz/+AbsVCAQC8Ru+e/IkdHHIo4cPYTcEgUBIAY/H
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
/x8xZ7c8
     "], {{0, 187.79999999999998`}, {236.39999999999998`, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{236.39999999999998`, 187.79999999999998`},
   PlotRange->{{0, 236.39999999999998`}, {0, 187.79999999999998`}}]], "Input",
  ExpressionUUID->"0310dbd1-429d-42c4-bace-b0e7f596bf52"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["*", "0"], 
    SubscriptBox["\[Alpha]", "0"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d36e9143-ec1c-4be8-ac18-163b90d3e3c6"],
 " is a 2-form, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["*", "1"], 
    SubscriptBox["\[Alpha]", "1"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4faaa472-4b8c-430c-bedb-26f21fb7f385"],
 " is a 1-form, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["*", "2"], 
    SubscriptBox["\[Alpha]", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2562d925-5685-4be9-9ec0-0982368bb54e"],
 " is a 0-form,",
 StyleBox["\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "0"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "0"], "(", "O", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["l", "*"], "1"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "0"], "(", "O", ")"}]}], "=", 
     FractionBox[
      RowBox[{"21", 
       SqrtBox["3"]}], "4"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0858b9fe-7d5f-4f52-9ea8-00542b566504"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "1"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "(", "AO", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "1"], "(", "AO", ")"}]}], "=", "1"}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bbb741b4-f645-4da2-95a7-25e4bee6ecc2"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "1"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "(", "OF", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "1"], "(", "OF", ")"}]}], "=", 
     RowBox[{"-", "1"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "be32ff30-88d2-4fc6-8ed3-e2f18bfdfbd9"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "1"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "(", "EO", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "1"], "(", "EO", ")"}]}], "=", 
     RowBox[{"-", "1.5"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ec134e51-cd24-491e-81f2-e7d22185106b"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "1"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "(", "OD", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "1"], "(", "OD", ")"}]}], "=", "0.5"}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "57cfe581-69e2-4853-afab-bef1f4c60c15"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "1"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "(", "CO", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "1"], "(", "CO", ")"}]}], "=", "1.5"}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1d8e78c7-63d9-45bc-904a-9c2f19b8f59c"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "1"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "(", "OB", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "1"], "(", "OB", ")"}]}], "=", 
     RowBox[{"-", "2.5"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "41bf0257-a7b4-43f5-a8e0-ac83b6fffe98"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "2"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], "(", "AOF", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", 
        SqrtBox["3"]]}], 
      RowBox[{
       SubscriptBox["\[Alpha]", "2"], "(", "AFO", ")"}]}], "=", 
     FractionBox["8", 
      SqrtBox["3"]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7734cf88-4647-4f34-993b-6bf243fc9994"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "2"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], "(", "FOE", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["4", 
       SqrtBox["3"]], 
      RowBox[{
       SubscriptBox["\[Alpha]", "2"], "(", "FOE", ")"}]}], "=", 
     FractionBox[
      RowBox[{"-", "4"}], 
      SqrtBox["3"]]}]}], TraditionalForm]],ExpressionUUID->
  "b3dc0494-7322-461e-b2d2-c3bc03884003"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "2"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], "(", "EOD", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["4", 
       SqrtBox["3"]], 
      RowBox[{
       SubscriptBox["\[Alpha]", "2"], "(", "EOD", ")"}]}], "=", "0"}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "41dd257e-9b10-4ead-944f-b02576a5b404"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "2"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], "(", "DOC", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", 
        SqrtBox["3"]]}], 
      RowBox[{
       SubscriptBox["\[Alpha]", "2"], "(", "DCO", ")"}]}], "=", 
     FractionBox[
      RowBox[{"-", "4"}], 
      SqrtBox["3"]]}]}], TraditionalForm]],ExpressionUUID->
  "a707f010-d5b8-4c45-8973-26f0b12cfb82"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "2"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], "(", "COB", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", 
        SqrtBox["3"]]}], 
      RowBox[{
       SubscriptBox["\[Alpha]", "2"], "(", "CBO", ")"}]}], "=", 
     FractionBox[
      RowBox[{"-", "8"}], 
      SqrtBox["3"]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "89dbb94b-3f3b-403f-84d0-af2d31adda26"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["*", "2"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], "(", "BOA", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["4", 
       SqrtBox["3"]], 
      RowBox[{
       SubscriptBox["\[Alpha]", "2"], "(", "BOA", ")"}]}], "=", 
     FractionBox["12", 
      SqrtBox["3"]]}]}], TraditionalForm]],ExpressionUUID->
  "9d23c197-2493-47f3-8127-6cf8ad16dca8"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["*", "1"], "="}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2827718e-90e5-4aae-bb57-ebc8f827d350"],
 Cell[BoxData[
  FormBox[GridBox[{
     {
      FractionBox["1", "2"], "\[Placeholder]", "\[Placeholder]", 
      "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", 
      FractionBox["1", "2"], "\[Placeholder]", "\[Placeholder]", 
      "\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", 
      FractionBox["1", "2"], "\[Placeholder]", "\[Placeholder]", 
      "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
      FractionBox["1", "2"], "\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
      FractionBox["1", "2"], "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
      "\[Placeholder]", 
      FractionBox["1", "2"]}
    }], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6c3c5cdf-fbd8-440e-8498-bccd8c612615"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["*", "2"], "="}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a3d77050-9589-481b-ae29-a853771d5cbd"],
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{"-", 
       FractionBox["4", 
        SqrtBox["3"]]}], "\[Placeholder]", "\[Placeholder]", "\[Placeholder]",
       "\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", 
      FractionBox["4", 
       SqrtBox["3"]], "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
      "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", 
      FractionBox["4", 
       SqrtBox["3"]], "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
      RowBox[{"-", 
       FractionBox["4", 
        SqrtBox["3"]]}], "\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
      FractionBox["4", 
       SqrtBox["3"]], "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
      "\[Placeholder]", 
      FractionBox["4", 
       SqrtBox["3"]]}
    }], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b6f1df39-67e9-47e7-a5c5-0036f291cb32"]
}], "Text",
 CellChangeTimes->{{3.894493372525173*^9, 3.8944933825975127`*^9}, {
  3.8944934323880005`*^9, 3.894493453550618*^9}, {3.894493672081509*^9, 
  3.8944937515917625`*^9}, {3.894493822155794*^9, 3.894494323472942*^9}, {
  3.894494361426008*^9, 3.894494525885575*^9}, {3.894494574175844*^9, 
  3.894494621570838*^9}},ExpressionUUID->"02d30a41-8ec6-421a-9c75-\
2d8d7ea208d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Curves & Surfaces", "Subtitle",
 CellChangeTimes->{{3.895875362988789*^9, 
  3.8958753694915543`*^9}},ExpressionUUID->"0d15b2a8-5fbf-4b8c-972a-\
d4e4c3e88572"],

Cell[TextData[{
 StyleBox["1.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]", "(", "s", ")"}], "=", 
     RowBox[{"(", 
      RowBox[{"s", ",", 
       SuperscriptBox["s", "2"], ",", 
       SuperscriptBox["s", "3"]}], ")"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      FractionBox["\[DifferentialD]", 
       RowBox[{"\[DifferentialD]", "s"}]], "\[Gamma]"}], "=", 
     RowBox[{"(", 
      RowBox[{"1", ",", 
       RowBox[{"2", "s"}], ",", 
       RowBox[{"3", 
        SuperscriptBox["s", "2"]}]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"T", "(", "s", ")"}], "=", 
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"4", 
          SuperscriptBox["s", "2"]}], "+", 
         RowBox[{"9", 
          SuperscriptBox["s", "4"]}]}]]], 
      RowBox[{"(", 
       RowBox[{"1", ",", 
        RowBox[{"2", "s"}], ",", 
        RowBox[{"3", 
         SuperscriptBox["s", "2"]}]}], ")"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d892775e-2ded-402f-8930-75a068b6f63a"]
}], "Text",
 CellChangeTimes->{{3.895875378890933*^9, 3.895875418604954*^9}, {
  3.8958754543498464`*^9, 
  3.8958755089725924`*^9}},ExpressionUUID->"943b1a37-4452-4c21-8083-\
6f00fbe4617a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "=", GridBox[{
    {
     RowBox[{"D", "[", 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", 
           SuperscriptBox["s", "2"]}], "+", 
          RowBox[{"9", 
           SuperscriptBox["s", "3"]}]}]]], ",", "s"}], "]"}]},
    {
     RowBox[{"D", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "s"}], 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", 
           SuperscriptBox["s", "2"]}], "+", 
          RowBox[{"9", 
           SuperscriptBox["s", "3"]}]}]]], ",", "s"}], "]"}]},
    {
     RowBox[{"D", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"3", 
         SuperscriptBox["s", "2"]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", 
           SuperscriptBox["s", "2"]}], "+", 
          RowBox[{"9", 
           SuperscriptBox["s", "3"]}]}]]], ",", "s"}], "]"}]}
   }]}]], "Input",
 CellChangeTimes->{{3.8958756047941275`*^9, 3.8958756438927145`*^9}, {
  3.8958756993500986`*^9, 3.8958757058680506`*^9}, {3.8958757511622267`*^9, 
  3.8958758110517244`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"92085d17-7e12-473b-abbf-d46356f86fa3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"8", " ", "s"}], "+", 
       RowBox[{"27", " ", 
        SuperscriptBox["s", "2"]}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["s", "2"]}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["s", "3"]}]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", "s"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["s", "2"]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["s", "2"]}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["s", "3"]}]}], ")"}], 
        RowBox[{"3", "/", "2"}]]]}], "+", 
     FractionBox["2", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["s", "3"]}]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["s", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", "s"}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["s", "2"]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["s", "2"]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox["s", "3"]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]}]]}], "+", 
     FractionBox[
      RowBox[{"6", " ", "s"}], 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["s", "3"]}]}]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.895875636429332*^9, 3.8958757062678394`*^9, {3.8958757703399982`*^9, 
   3.8958758117046795`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"6de6ceb1-6baa-4e01-bf5d-605b44b00632"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", "=", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{"9", 
        SuperscriptBox["s", "4"]}]}]]], ",", 
    FractionBox[
     RowBox[{"2", "s"}], 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{"9", 
        SuperscriptBox["s", "4"]}]}]]], ",", 
    FractionBox[
     RowBox[{"3", 
      SuperscriptBox["s", "2"]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{"9", 
        SuperscriptBox["s", "4"]}]}]]]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.895875845320634*^9, 3.8958758858223205`*^9}, {
  3.8958759998411117`*^9, 3.895876018924918*^9}, {3.8966958159105153`*^9, 
  3.896695816746338*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"0f10bd11-5aac-419f-8e18-8c421a2ede1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["s", "4"]}]}]]], ",", 
   FractionBox[
    RowBox[{"2", " ", "s"}], 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["s", "4"]}]}]]], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["s", "2"]}], 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["s", "4"]}]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.8958758876566496`*^9, 3.895876020063957*^9, 
  3.8966958176876326`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"dd7cb072-6b3c-48f5-a2b4-e8633d4444f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"t", ",", "s"}], "]"}], "/", 
    RowBox[{"Norm", "[", 
     RowBox[{"D", "[", 
      RowBox[{"t", ",", "s"}], "]"}], "]"}]}], ",", 
   RowBox[{"s", ">", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.895875898592329*^9, 3.8958759043774643`*^9}, {
  3.8966958472466574`*^9, 3.8966958785791407`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f27ca086-6621-447b-a080-905a3ca40fc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"s", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["s", "2"]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["s", "2"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["s", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"9", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["s", "2"], "+", 
            SuperscriptBox["s", "4"]}], ")"}]}]}], ")"}]}]]]}], ",", 
   FractionBox[
    RowBox[{"1", "-", 
     RowBox[{"9", " ", 
      SuperscriptBox["s", "4"]}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["s", "4"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["s", "2"], "+", 
           SuperscriptBox["s", "4"]}], ")"}]}]}], ")"}]}]]], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"s", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["s", "3"]}]}], ")"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["s", "4"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["s", "2"], "+", 
           SuperscriptBox["s", "4"]}], ")"}]}]}], ")"}]}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.896695819954299*^9, 3.896695879921577*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"64e874b8-f36f-4e78-aaa3-3f6bc59f5d3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{"t", ",", 
      RowBox[{"D", "[", 
       RowBox[{"t", ",", "s"}], "]"}]}], "]"}], "/", 
    RowBox[{"Norm", "[", 
     RowBox[{"Cross", "[", 
      RowBox[{"t", ",", 
       RowBox[{"D", "[", 
        RowBox[{"t", ",", "s"}], "]"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"s", ">", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8958759143243403`*^9, 3.8958759506934366`*^9}, {
  3.896695927544408*^9, 3.8966959441154685`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"f7fb01c3-e9b2-4de1-bb65-f57c488ba707"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["s", "2"]}], 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"9", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["s", "2"], "+", 
         SuperscriptBox["s", "4"]}], ")"}]}]}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"3", " ", "s"}], 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"9", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["s", "2"], "+", 
          SuperscriptBox["s", "4"]}], ")"}]}]}]]]}], ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"9", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["s", "2"], "+", 
         SuperscriptBox["s", "4"]}], ")"}]}]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.8958759195550222`*^9, 3.8958759512753773`*^9, 
  3.895876029841753*^9, 3.896695944680299*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"07f597b7-3165-4df8-8953-097ee0894a38"]
}, Open  ]],

Cell[TextData[StyleBox["2.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8966959976995163`*^9, 3.8966960425001926`*^9}, {
  3.8966960742853494`*^9, 3.896696077333195*^9}, {3.8966961132382994`*^9, 
  3.896696334787369*^9}, {3.8966963719007387`*^9, 3.8966963736664286`*^9}, {
  3.8966966133898263`*^9, 
  3.8966966536671305`*^9}},ExpressionUUID->"ab4fd19e-d8ef-4918-8427-\
706afbeada9d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Norm", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["u", "2"], "+", 
       SuperscriptBox["v", "2"], "+", "1"}]], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "u"}], ",", 
       RowBox[{"2", "v"}], ",", 
       RowBox[{
        SuperscriptBox["u", "2"], "+", 
        SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", ">", "0"}], ",", 
     RowBox[{"v", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["u", "2"], "+", 
      SuperscriptBox["v", "2"], "+", "1"}]], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "u"}], ",", 
      RowBox[{"2", "v"}], ",", 
      RowBox[{
       SuperscriptBox["u", "2"], "+", 
       SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8966966842815113`*^9, 3.8966966997882843`*^9}, {
  3.896696750609789*^9, 3.896696799587023*^9}, {3.8966974628032618`*^9, 
  3.8966975106131945`*^9}},
 CellTags->"Plot3D_templates",
 CellLabel->"In[26]:=",ExpressionUUID->"f74e4cc1-395a-4daf-9332-2b8ac1ae2cd3"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.8966967012136745`*^9, {3.8966967535246563`*^9, 3.896696769611127*^9}, 
   3.8966968000687385`*^9, {3.8966974729798284`*^9, 3.896697514830968*^9}},
 CellTags->"Plot3D_templates",
 CellLabel->"Out[26]=",ExpressionUUID->"dac6a657-20a0-46fa-af48-f0543a834093"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyFfHd4V1WzNdKkdykiIEWa9N5kKBqQTgDpIh3pvUov0kFQCEhvCS1IJxCY
JPSeAAkkEEjvCUhHRb7AnnX8Mvfu5/rPeTjvfvdv9pzZM2tm1qRkv1GuA9On
S5duXqZ06TKkPodP+WFQly7RjKdXjX+ude4SSL3X+OxsmTuK/TIeK1hxcCzf
+H5gv73VA6jSkyaVitWJ4LvxPXa8mBHPPrPKTi2f8QpN+HZnTIvRj7jFFv/4
xnMS+f6GDB0zvPKlC+l+/O7TEsEcO2tq7uftknncxjquvRcepd6t663+5ZcA
jpy7zffMmRQ+8PZOq9wFdtBXa05cu1/EjxMzN9/VZP9jfvdFq/FnD8yjdPLf
9nfv/3vMHWcfubGw0twzsp70etmf9P4iD2l5RH7S8st5SZ9X9ENaP6JH0vrE
OugV6x+vOF0ufd0YxnPpmiHbN3e+RIV+KtO6UO8obv/398uOjorjOu1W/dAn
+RRVDX7TvciZcL54/mXmshsTuFb1vzIMG7qJmg9xOTbH7QF//eGZxNOH/vR8
6eWdPPGiR+t5pe5wzS+nj7lQM4VD/O9eaBzpxVVGd3HtFHSOXcrP+vunpo85
Y53kjS0f+DL0/E+BLL9u3vyY1+avyr+uPov1pNfL/qT3F3lIyyPyk5Zfzkv6
vKIX0voRfZLWJ74T7BTfC/tCr9j/2qkYdt0Sw3jCfnq127uicXwkPyu5puby
yDguPW7KpJG+x7hjm6LDulcP4xozK/dO+CeBF/9Rzz2l5EWe/y5k4ag3QTyI
8w67ejyJ8684XuLjH/35j/anhh+MusgbSidcDA1N5s9L/3tuxJbbjp5ffF2p
a7VvUnh4wdvdTvnewXrS62V/0vuLPKTlEflJyy/nJH1e0Q9p/Yg+SesT9wT3
HvcF3xV2iu8LOaBXyDOqdNFb60vEOM+rs+KrfxV6hSu9nDV4boUIXrnxu0fd
68bxSNHPs4xebX99HSzPeD4eExn/cUwID+/3aNXlslflmcgRLQMG+n38yNFz
pluZ/jrxSyL/PLxShYwUhvWk18v+pPcXeUjLI3KTll/OS/q8oh/S+hF9ktYn
/BT8KPwV7hXuPe4X7AB2CnuA3NAr5P/sq7Vz3t8fPPe/KL7WY0Mobx7aYFf9
2Af86ubeRsP2R3PLwM977fw1gl3HpLwc3+cGv71Tw2vtxRi+EDe/as5y0Y6e
I3t9UaF0pVhee84t3D1vDNaTXi/7k95f5CAtj8hPWn45L+nzin5I60f0SVqf
iBOIS4gX8Gvwo/BvuIe497iPsBvYKewH54RecV6/lIc7339vPC/lLR0zPWMs
T/Ccn+nIWn95hnHB2vM2vcyX4Og52z/f1w+ODeNh+TcGTf4yEetJr5d9Se8v
8pCWR+QnLb+cl/R5RT+k9SP6JK1PxGnEefgfxBXEJcQX+EH4UfhD3Fvce9xf
2BnsFPYGvUCv0E/MjLND38uH53ercyyaPj3Z0XPx9NNfzEsM4N2jFv7Z8UQK
1pFeL/uT3l/kIS2PyE9afjkv6fOKfkjrR/RJWp/ASTgH8BLiOt4jviMO4T3i
Efwm3sN/4p47+8h9h13iPewTesR76DPd//rfE6wnvV72d95jf5HHeQ95RH7n
PeSX8zrvcV7Rz3/7iH5En8576FPZM1nsmSz2TBZ7Jos9k8WeyWLPZLFnstgz
WeyZLPZMFnsmiz2TxZ7JYs+OPpV/Jot/Jot/Jot/Jot/Jot/Jot/Jot/Jot/
Jot/Jot/Jot/Jot/Jot/Jot/dvSp8AZZ8AZZ8AZZ8AZZ8AZZ8AZZ8AZZ8AZZ
8AZZ8AZZ8AZZ8AZZ8AZZ8AZZ8IajT4WfyYKfyYKfyYKfyYKfyYKfyYKfyYKf
yYKfyYKfyYKfyYKfyYKfyYKfyYKfHX2qfJAs+SBZ8kGy5INkyQfJkg+SJR8k
Sz5IlnyQLPkgWfJBsuSDZMkHyZIPkiUfdPSp6htkqW+Qpb5BlvoGWeobZKlv
kKW+QZb6BlnqG2Spb5ClvkGW+gZZ6htkqW+Qpb5Bqr6Eeh1Z6nVkqdeRpV5H
lnodWep1ZKnXkaVeR5Z6HVnqdWSp15GlXkeWeh1Z6nVan6T1OaBiuYG5/aMZ
z793/Hz0SsYAapa5zKHKvWL4ebt76dqfjeI65RZV29HiNtaTZT3p9bnONy/x
Xs94jix5oWJcqt9vsH7ru5iBvvzd4LEzQwqH8O/u7nl2RyU5/8b/jvfyb9Lr
Q9Ze2Pr+u+CZ83CudrN7PMbvkf5dWUd6vexL+nervu5R9tCdAHn6cvDdgKKj
h6RoOQnrYQ+3zxRq3be6HwfmGF0icN9jLSfhd2V/0vsrOckiJ1nkJOyj9E/Q
g5KTIKf6Lnp/0vur7+KsV/p3fnfREbc5r78I4Ou5os8+PxFMG+s+6RaT8T+9
NZ/ddOiY+iHkfTPx0eFqyVhPer2yW7LYLVns1lmPdbBfrIcdYz/1nvR7dS6G
nPg3/nfLeRnnhR3ge0LPSg/OPvgeej30pX8Xv4ffx+/CXvEe9gD70O/xnfQ+
6ryk5HTsCHIq+ckiv7OP+i7O91L+x3k/5U618D2/RjOemS55+I74ynlPlvdY
T5b1znseEJRY5F40t644tHS/PNG8Z8FGvtr+Dsm/nf9dvWd5T3iPf+P/Z1nP
lvX6PVv2If27fsV71Ns7MIa9xvh7uT+J5hK9Srs+2XCZTrxYUbvjqQhu9ZQ3
+L6J4+79V2x8XfgazayWvLJUdBQPr9stf5vwWKbVW9e7rPCh3hEtCw06FcZV
hzb9YvT5BL6xzHVo44RzVNtn35kityL4TIdOLTxvxvO4T8tu/r2aJ/V5lrHM
xTEP+PsPzySuFTzuzLkx3tSwfaYja0qE8e2foy6Ebk/kzlcK7glZM5Nj686p
0nd4ED/cvD8uKDqZ41d0mO4S8AfRiRbtfnIL5lKvOuZZ3iSZfYIy/FQt00Ee
n+f0U9+Pb/KYD8/HfNZjcq8TH2+micX+WV33RgBvn9asVMEFKfx9ppUJ0yK9
eUTO1eln+jAP/vB8zLtHzd7dzWcmDV8/v366dG7euh93r+6E+q1a+vGxPjv2
9uj6mCePr12xUzM/3nf7XuTevb97675SX7M/6f0DzD6k9xlp5Cct/1gjP0H+
fiJ/jNEPhYl+IkU/Xxn9UBnRzxXRTy+jf9L6b2D0T9D/r6J/+b6kv28t831J
f1+xH2ot9tM5rf3QSLGf+mI/o/td/2k7RVH+37YuL18mlqeMujnO83gA+Rr7
JG2fv81dXK3x73HcYVabul8VjOLwbcGP4jMzzfmh6sWfysdy6/FzDlbOFcOT
PVuP+e3FVtrrlmdyiezRvOlVvibHcsTxiz0bg3sf28NhW/6e8FGVCC46eXCf
9/USv7Ojc+Qc7csTKnRwWZg/lI+/rJmvwMFE9q+dvsm9fFd58OLiDx50u8Pv
uq6b2zBvcqqcS2qO7x/AzSOH9oh4fY63f316Z+CLZO7w9GSNxZG3eUj59k13
XdrsrftfDc160usHmP0J+0+V/ccZechL5AkSeUR+Kibynxf595jzEs77r5x3
ttEPaf2IPgn6vC/6rLe2b4vm5xK4XTe/SU+nhnMGz90dJy7bRa4vso5PGhLP
L6bPfliyVyS7Nez3o1d+T2Yau7p761hufyDPjlptornP9vPhYz45z6O/LPxt
vTZR3GNz0cmLasTyzjOvY8KrBXA/9763D/YM47Lz03tTchxf2lwqsk/ju3zj
6bWW27Pe5c3f1+xUvnMCd+yaJ93ysg+4ePa1xTbevcjF4hq/XU6JPHnI4x4T
vn/EhzxGr9haaJu37n99YtaTXn/F7E/Y31X2/8HIQ+VEnmsizygjP/UU+d1F
fjkvdZDz9pfzdjT6Iehnt+hH9EntRZ8v9ht9lin4+Obok0k8aO7eDd3LPGDf
34odGL1tPc9xW/a8yPREbuXZ7cagoY+4cvPdk+r87sclp2R9PS1V/09nZPap
Ozyc62V426xHu4BUcYYV/rdjDOfdO6v+0ZKRPO/k7rpvWgRzwcRbCaNKRHCj
6g3O1jkWxWfp4MrATqn68Z5e1Gt/MG/7KXj3pvQxXGNZvkNje0by3SULL3h4
XuEjVc7cCH4Yw2evvsrh2juaT3y77vkmlx3euv913awnvT6f2Z+2y/61ZP9P
jDzUWOS5IPI0NvJTPpF/gcj/uTkv4bz15byzjX4I+qku+hF90hDR523RZ5OX
IWMPdkj1+2siqtW+dpv3Fjj4dWLFo5xSe8iPwdWTueHYfLN7NQ7iyD1//LPw
yFXOdDL5ZtsvE3nFqHqrSt29x09vfeH/5kkQ7zrSzP3ex3G8tlCGiZ4T73Op
hsd8D+YO4yldOrY7uy2Sp3T81eVOYih718nw5nCvKE43r1vB9K/vc8kKA/1D
X6bKOcnvUMYnsXyi0byJERWuc9MWXs3r7QnjxyXuTD7fKYFbxk7t0LbaLm/d
/zpg1lMzWf+nrP977of9CfvXkP0nGnlIy7PDyE9uIn8ZkV/OSyvlvC/kvI+N
fqiR6Cde9ENGnwR9HhB97qxa4q1Xar5ys3eBLX9OOce/ra86uv7eM9y7f4Ny
ya4p/MmAXe02fHqRN3h9Elg61J/b9n8eXah7Evd7XmRRrsTL3OX0N16Hj4Vw
97H5irlWi+dF9b8fOufyNe78IOLQjh8iOO+5+fOC9kbxscFPLvvMvMn7l8yJ
/qVELD+qsPpk8fnu3rqfFbmrXHKByBv0dO71Il12BXDNO71HVryQzIX9w4b7
Lw2lbq51G/tE+PO8GYMHby2SyLnM/oT9PWX/rkYe0vK0MfLTAJG/m8gv56VC
ct7Nct4dRj8E/awT/RRpGFVo9vH/+la3fh5d5/RbHx47MTbo/+8jZXz5yb75
qedbeuheZ7ez/+UT9Z8XS5qd/QH/Uefy+HXr4p33H+f4dkDNmpG8bu62z+Zn
+6+ufKZ7pfK5PouTf3t4p0vz3xP2Ptkh6NXsmw7OP7F+d/MnGR6zz7PhD4sV
f+i8H9OiXttGjZJ4rdnfee8j+x8w8jjvs4g8S4z8zvtGIv8Yc17nfWY5r+jn
v3xE9KPsjSz2RhZ7I4u9kcXeyGJvZLE3stgbWeyNLPZGFnsji72Rxd4I9qb8
IVn8IVn8IVn8IVn8IVn8IVn8IVn8IVn8IVn8IVn8IVn8IVn8IVn8IVn8IcEf
qvhOlvhOlvhOlvhOlvhOlvhOlvhOlvhOlvhOlvhOlvhOlvhOlvhOlvhOlvhO
iO8Kr5IFr5IFr5IFr5IFr5IFr5IFr5IFr5IFr5IFr5IFr5IFr5IFr5IFr5IF
rxLwqsq/yJJ/kSX/Ikv+RZb8iyz5F1nyL7LkX2TJv8iSf5El/yJL/kWW/Iss
+RdZ8i9C/qXqM4T8V9VhCHUYVW8h5OOqrkKoq6j6CaF+ouokhDqJqnuQpe7h
9JtUfcNZr+oYhDqGqlcQ6hWqLkGoS6j6g3NeVWcg1BlUPcHR5xhTf2CpPxDq
D6oORqiDqXoXoR6i6lqEuoqqXxHqV6pORajzqHoUWepRTr9J1Zec9aqO5Oyv
6kWEepGqCznyq/qPc15V5yHUeQa+6BX3vl+PZ7aqfWIbhF6h9a8rLhnfNYrj
B6T/+z1vYmixYT4xc87S+ehAlxUZIzjbq8tLyjdN4EEjlrZp0MeLOn7rVW5/
m4d8tfqEy1tKJbHfsxl/la+9l/y7j/+z46q77J87wtv7TDIfjwvYt73FKnLr
8jLgVG5/njmrjvv5Nyk85JMGCU8mjeJ6ixc/iirvw9+5FDme7cxjdt9ws9Tc
sfN4r6rX/SJ2GzRh0uSMr3zpq1wBt1qMfswHy/Wr12o0c1OvFx6ZawfQ7SvH
Khc/mcJHa9QtPaLDYe5TPffKab3v0YC1PbMVXJPMZ3e0/Kl5hRXczshPWv4X
dT/9zGdGOHm8+Nqt6IwEXux5if792IdKunu8adUsktZ/fcTzqV8ce3ZrF1Tk
28vUcUuRjcs6x/HBaePm7uwZxX8tbFJuwwUfmnTv/Lo1a2IYz61JDboWKe5J
vpVGFCpeM4r7b2zdtWBAHC+Q8z6sNu3f16XCucCjTsP8kxO4ZO+QyauqHuLz
L9afvPUwhLNOmJ1U8UoS3+9w+kqJTWfY737HL+cOu8Xrcn55Mb5ZCg9NOX3q
015n+cdzS9udWO/H/qv+vbaywWNe3rN48NnAc46/fSn1rmHib3Of/aL33M3n
aGdo0TrHa6RwxZ1tG+SacYvrPbuWpeHB2xQ8vOaye4uSefibvzl40XVuf3P0
iqen79PYsOybsw1O4nE72mTL/eIshxr5qaDIX1Hkr7xlyaZ1OyKpUKF7V7s2
jed1Yg+vT1X6dvL4aJp1dFPKipmxvMdl25SdX5yixSVvlHy7N4b2LSzepxBH
c8DQ8yFTel6i9L5l8mSfncDha7YEzQsO5xafzgvf1GMv3Tqfb1bp+3G856MM
pz8rEcXfnbzW9q9m27hDp9/WnB8f4zyPip3EZ6vSs8lXkTwx3qPDJO84jkvp
3CpjwmVuUKvO6sqjHvKorM3KetxM4NaTCrSeWj6A57RP9326DIHcucXxS/nm
JbHP1jFN0+e4wzfLHCmYodN5blIz56nNh5O5f+Ym5XK2CXTww8dS71og+MHF
48zDy1MvUjeX+RfK7Evk4c/y9yqfmvfvXHlwaeVeQXRt8nK39/y788Glsx4f
Hcw3Tl+I9O/2iIJb+p/uViL13D/5lJu79jbHGfkJ8ieI/BvrudxuExVNW1Zf
OLmkTGp+8nVC1Zx1T3Dlji4FvzkZS5c30fpzk6L5VD7vZw0a/0yD9rTM7hMe
R/eXuhe+fj2Su++suMFljjfFVyvU68XMJJ76XblM9wuEcuG2RWvubrGKnxcr
FBX9bwJnPFj2SqVjYdzo37ELmz5nXtB7wsBXO+I4y/i/TyWkj+QfQnpmGOB1
ncOqtfr6PU8Az0KTPEO7dAnk+pmjPctlDed2E1uWWroglr+oW7PCzPsh7FE/
T6kxx+5yLv+kmdlT8eCXxdcMOx/8kF32r2naq9YlvkV+vzS9lsD5l9V8dWJI
mIOHo6TetUbw8G9DQtxufneFFpfNkdx7XizvGvbywOb9qX5t6uXmR7MG06rr
HpUeUSwvCVr7bmj+CB7yd1TKmlT8FDC4bM3sU2I4+O8HVabVC029jx/kJshf
ROR/ntCyaKlicTQ7Y9CZ8L8iuXOm9sm5Ol/hhxV7/fLvs3jK+dfiwKOLIjhw
4Ee7WgYe4Ycdsiw/lDmRshdZ5laqSDin+/zmJx43ttLTwweze5dJ4f7Ni2WZ
nHCHC60Z/y79usP87naZuiv9k/hdi2W+5w7d4339Czfdv/9yat4UfHLHygSe
1LZ2i+V3H/C+ihNTcqcP5CJfnY671CCWZ0U8z/+ej9l+n8fsMokP2P3g/Hzv
4yOeT9Ze7DT3WThz/e1zarcJ4WsL8/mt3R3Frxt2mTvMLYr9vwxbXyTTVV7a
cnbH2OoxnGPQN8drZovhFpLfZZd61xDJ74o9rFnwVcQ1ypDn3KNri8K50qhH
x1LOx3P+eyuvB469T7nvtGrbZGc4d/Y7UnxfdAzfXn5926nPIilkyG9f+LUK
56tVWldq9SqCCxn5CfK7ivx3jd1TgLkHjv3P7Py2W/cXidT4Qsm7lVqFchO3
Tr8t/Ow8f5Ztyrjhz5JoQb3zJ3dXvs9dhrtdqN5/Kw+olTfP6GaP2dVz6PKu
ry5w3oDKt8pdP82NGrr/nKVoCveesLdEln3XOHHI9JmFWvpz8KC1ua//k8jf
e64LWrM2gLN27RbYe0Uwf7u6/85+B+N4UZ6zyzpXDORJ7mV8z/dL1WfPB5/P
KRTFefOE1SoXdo+HfvpD5cy/Rjv1h5Kq3lWy4Ccbkrxu0K1D3w3Y43Obnw8Z
dzV4XDIfLlZ+wcSvQunpnNt9/CJScfCpKW7JUxN4Ydun33/TI4o2/VgqV1/X
QK7osf5OLpfU72LkIcgzWeR5VCv+afgfiXSt78uUzKvu8JScrSeN2HCPg4wf
p0bGr/MY8ectJmeisVNTaHpAo4/T777FA571GLnb4xg3cznql/XYY174+7RR
q4/+ylue3Rqc9VUqkJnreSj2YAp39jq6700/d840cs+WoSEB3H5ZlowjjyTx
jPmLeiR5Hub2lXfP+SvkPufLtHfce/7b4nFnPfqWPs3lXyztm/g2gte36TTw
PU72nuIW82PMWY6pOLRxrxOxqt6F5xNeeHus16iZN6m43+Ll+99tZbfd4VnD
/k3h0Tmz1H1U4CG1rlRh2cxqB7llxWb/nqmQxF2mvGmR7m0U/dJ00O+r/jnO
Yyvld/nodSznNfLQUpHnS5Eng3f1iZvXJVG4y+3AS119uOHKVV1qzL/PFf3q
9X05I4X+ePB3vhIjfDn+dsULv7gGsOAPCjN4hH0kvjQSXHJfcMpJef+l2Yf3
mn0oTvaR3+UQ87tUX34Xeptk5CTorZs5F/9kzkVj5Fywt6Kq3hV6b9Oe9zgT
z48y/RM/N3cqPvpid88jV0Pp9N8r22VZfJm2bPnC5ce1iexmvgsdNN+FYuW7
QG9TRB7oTb47jTPfnTrLd29s7ITI2AllETtpauyKBhm7om1iVy2NHfI0Y4f0
g9jhXcEf9QWPjBS7DTN2zpeNnRPsHPd0nrkXhHuxxNwjXmfuEeEeoX6VRepX
w8W/efXe/bvviOs0MiqPV/jPj2iLV/9zc+8ncJ0Vw2IvpOJwPF2aVOv6nhd7
2vgBymn8AA0TP4B7CnmmiDziZ6in8TOUXfyM+CXqYfwSPRG/1N/4MWpr/Bh9
In6smPF7PM/4PYLfm2X8JDcyfpIai58EngC+gF/9VOLIDOOHCX44yPhtvmv8
NsFvFzZ+nnMYP0/w8+VNXOCPTFygyhIXTqaN17RO4vUlE3dI4g7lkbhzysQp
umriFP0lcWqXiWeE5zOJa4gjkL+TyP/GxE2aYOImHZC4+dGdD3GWJM7SMYmz
f5q4TD+YuExFJS4/MnGcs5k4TojjoSbuc3YT98lf4v4LgxN4lsEJBJwAPAF8
AVwxzOAQ9jc4hB4IDkkxuIVXGtxCSwW3bDE4hxcZnEMegnOOCP7MLPWrRYI/
vzI4igIMjqICgqN2GNxFOQzuouqCu+oZnEZtDU6jCoLTIDeeRUX++QYH0scG
B9JAwYGCG0lwI7UW3JhgcCZNMTiTGgjOHGxwKYcYXErApVUMjuVLBsfSX4Jj
Nxncy5sN7qWegnsTBOePNziZUgQn3xI8AXwB+99rcDgLDqcrgsM7GNzOXQ1u
p1GC24eq+tVoyacumbyAJC+gwZIXzDJ5BEkeQRclj6hn8g6SvIM6SN4heQpB
/mciv+QzhCfizm2TB5HkQTRZ8iDJm0jyJqovedMSk2fxXpNnEfKsNyYv45km
LyPkZVVMHscFTR5HUySPe5Q2b6Wqkve5mjyRx5g8kZAnAn8AjwCHFDJ5KEse
SpUlD/WUOsBbqV+tlzpAP5Pn0k2T59JKyXN9TF5M601eTBMkL/Y1eTRlMXk0
RUkejbwV8tcU+f1Mnk4DTJ5OlyRPn2jyecJzruT1rqYOQIdMHYBeSx3g2Y4B
te/OieKyXo3eXssUS6FvwtzzFw+gUqaewOtMPYFQT3hp6g/sbuoPhPoD6i1X
TL2CUK/ob+obLPUNarHT1De+NvUQvmXqIeQl9ZBQwSuCUxx8MkLqVzukftVp
9vMP9asapj5DXUx9huJED7+Zeg7NMPUcii9o6jk3Tf2HpP7j2EkHqbdcE/mP
ivxSX6Lspr5E3aW+JPUoknoUDZB6lNInQ5/ynsqp91LncupeWaTeVd/Eb8az
mcRxL4PDOUnh8HMGD/B4gwd4s+ABhR8Y+KGywfl8TeH8UwZ38SWDu3iz4K6J
BsdyLYVjFQ5h4JB4g+ecZzrBdQoHOnnHrwY/c4pvWvys8AwDzyjcyBbcyMCN
g7O5btnVPXX/TJPzFUzw5a6vEoLaHk7R5yKcS+mBoAf/jFcSb4a5e2uetpKf
IL/KFxohX1D6Ieinl5GTtJwqvyBLfuHIr85L2EfZD8F+lL0R7E2d1+F7K/sh
2I/KKx2cr+yTYJ/qvI6cKg8lSx7qyF94z9i1eb64wdPf3Zy9JSiYeqYfyCVb
JXHMiNfjmj/d5a354TnNetLrVf2ZUH9W95RwT9W9dvyn4iU6fQHVL3D4ikp+
hjyfmb4/dxWeyWzp+6tzOTzwJMMf4D+Fr1Jd+APqvM7+Fwwfw+F1jBY+xiXD
33Deg7+h5CHIo36X8LvgX6Ifhb4Jzg99QA/gEaJPiP4geITo06I/C94b+uTo
j4NXBJ4C+AngzYD3Ab4HzgkeDfgz4D3o9ejT6/3Rp9fyoK+s5UffTp8XfSat
N/Cn0cdD/w58a/Sd0G8CXxP9VfQNwS9Efxt9bfDhwC8ArwD8NvA7wOsAHwt8
GfBkoE/wj8A7Ap9GrwdfRO+P/r2WB/1mLT/6o/q86Hda9EZab+Aloy+K/iB4
zOjjoZ8Fviz61ehTg88KvgB4AuAjgq8Bngb4guDLgCcDfhv4R+AdQc/gc4HH
BX6SXg/+jd4f/AktD/gNWn70p/V50U+16I203sAXR58Z/WXwy9EXRT8RfGv0
/9H3Bz8Y/AvwLsBnBf8FvBfwL8E/Au8I/DzwucCbgp7BjwMvDvwqvR58Jr0/
+DdaHvBFtPzgN+jzop9t0RtpvWHOAX179OsxF4E+M/rL4K+DTwEeBfjW4LOA
xwJ+MPhE4BGBPwo+F3hT4EeCHwdeHPQMviF4huC36fXgY+n9wWfS8oB/o+UH
X0SfF/wGi95I6w3zFeBBgP+AeQz07dFPB18f/BTwUsAvBz8IvCDwrcHPAi8L
/F3w48CLA25A3Ea8hp4R/xH3Edf1evDh9P7gh2l5wDfS8oMfo88LPodFb6T1
hrkX8ErAD0E/HrwS8EkwPwN+BHgOmM8BPwK8CMxXgB8Eng/mMdCvBi8IcwLg
bYF/hbkC9F3B1wLfHXw68OLAj0f/EDw68LzBcwS/ETxv5HngNwL/AZcBj+G7
A98B1wG36fXgU1p+l/TvgudnORfpc4GvZtEbab2Bd2X5LqS/C/hDFjshi52Q
xU5I2wnsEHwl7A97A7/G2UfsCjwyyA/7AY8PeoCdgEcJfYLHDx4r+Kvgs+r3
+C56H+hf/y70rOWEPi3npf9xXvGH4G31U/4QPCPtD8Gnm6r8IfiM4DFiPgR8
0lrKH4LPCx4v/Jh+Dx6q3gd+TP8u/JiWE37Mcl7S58V8Hfhr4K1hHg98K/Cs
MMcFXiH4hJg7Aq8TfE7MyYBXe0HFZfCadVwGr9xTxWXw9H1UXNbrEZf1/uD1
annAQ9Xygzepzwuen0VvpPUGnAk+4K8KZ4K/BrxULC3OdPiZmOMCTxb8WMwd
gacMfjLmZMATL6NwJnj6Gmdi7iGLwpl6PXjnen/wpLU84PVq+YulxZnOeYEz
LXojrTfkTeBXWvIm0nkTeK/gu3ZImzc5fGPkTeB9g++9Mm3e5PDtMVeDuYdu
Km/CHAnmRzAXodevTJs3Ofsjb9LydEibNznyI2/S50XeZNEbab2NTFsHcHiq
rdPWARxeJeoA4BHrOgB43LtVHQA8evDnMceFOQbMLxRKWwdw5kegZ8zlYB6n
UNo6gLMecxF6f9QBtDyoA2j5UQfQ5x2Ztg6g9UZab6hfgf+LOoyqUzm86/Zp
61QO731I2jqVM3eAOhXmPw6oOhXmb9b973UqClR1Kr0edSq9/5C0dSpHnvZp
61SO/KpO5ZwXdSqtH9Q9UQdFfQ88VPBSwUcFbxI8SvAnwfMD7w98P/DSwFMD
Pw08KvCqwKcKEb4L+C/oK4HPAX4HeB3gK4C/AN4C+uvot6PPjn4w+sPoC6N/
iX4m+pjot6FfhLoxeKLgjYIvCl4jeI7gN4KHB14e+HjgjYFHBv5YQ+Gp3FW8
WfAwwMsAHwO8AfAIwB9Anxt9b/S70ZdFnxb9WfQR0VdEPxG8TPA0wc8EjxC8
QvAJewvvDTw48N/AYwCvAXwG9N3Rh0f/HX1i9I3RB0RfE31O9DfB/yssPJS2
wt8Avw28HvDu0BdHnx/9ffRx0ZdGPxp9U/RR0T8Fbw88PvD30LdGHxv9a/RZ
0XdFvxV9VvRd0W9Fvgw+O3jsL1WeCz72xyqfBX84SuWt4LuClwmeJviZ4B2i
X4Q+Efhh+n0WlW+ijwm+Dvg74O2AXwK+ySL1d03BjwAvAv179PPRx0cfGn1p
+A30odGXRj8aPHXw1sFXB68aPGvwq8EDBi8YfGDwVsFjBX8VvEz0x9AXAw8M
/Vj0YcFbAo8J/CXwbMC7Ad8GvBDwRMAPAY8BvAbwGdB3Rx8e/XfwxcEfB28c
/GbwncFzBh8X/FzwtcA3Rd8P/T7wrsDDAv8KPCHwhsAXAq8FPBfwW8DDAC8D
fAzwBsAjAH8APGzwssHHBm8YPGLw0MCLBU8WvD7wlsBjAn8JPBvwbsC3AS8E
PBHwQ8BjAK8Bfgz+CrwzV+WvwPubrPwVeD3PlL8CDwX8E/AkwJsAX+Kq8HrB
8wXvETwV8FbAVwGvAjwL8CvAqwDPAvwK8Cp03NQ8CvRtgUN0nxH8CfTDYVcX
hTeA/j/6/jWE9wC+APrs4E+gH477CD6BXi/7k94fvAfwCNDfR59eywmegV6f
lmfwHz8ZfXotZ0mLvy1u8c/p0vz33/7gYWgeb3Hb/sJjAK8B8qPfr/0b/v4C
5uMxFw9eiOa7QkL8HQLUOcELAU8E/BDM2+v9wasAzwLfEfwD7Zfw9yAwrz9P
1dvx9w/wdw8wz6/Xl0tr5w6vAH1zjavLpcWTznr0+8EvQN8f/BLwRMC7AA9D
vwdPQu8D/gH4CPrvwoE/ov8unH4PfobeB/KDv6DlB39Ey6/fQ369zzyZH8A8
AeYIMGeIuUPMG3aUuQLMGWC+YI/w5sGjB38ec4mYU8R8IubrMG+HObvpmE+Q
eQXMKYB/Dz4+ePhXhF8Ovjn8LeYGNZ7E/B7m+TDHh3ktzJ9h7myZzCGA7w+e
P3j/+j145MDDiC/gPYPHjXiEOUzMZWIeE/OEmC/EXCHm3zAPhzm49jKvhfkt
zG2dlPkNzHNgjmOazCdgXgFzCuDfg4+PeA1+OfjmiO/gQ4MfDV40+Lu39HyQ
zJdi3hRzppiTxNwk5iUx14c5P8z3YQ4Nc2mYR8PcFOaoMD8FHjx48cBX4G2D
xw3+NnjG4B2Db4w5WMzFYh4W85yY78RcJ+YPMY+IOUTMy2F+DnNzmO/CvBfm
vMDXB38fvH3wy8E3B88cfGjwo8GLBn8XfF7weDGvi/ldzO1inkfHqQCZ4yWZ
690j+RTmUTGfivz6W8EPOo5gvkXHI8wDYz4Yc8GYa8WcK/K+1TJHhLkizBNh
TgZzM5iXwRwI5kIwDwK/gflj+A3MzQIHVlR+A3OfmPdcJH4DczmYx8F8jn4/
X/wGcOkU5TeAYzE3gflnzEMjT8ccL+Z6Mc+LuVPMoWL+FHOSmJtE3QBzVpi7
wrzVWJkjwlwR5ol6yZwM5mYwLzNe5jow54H5DswhYC4B8wiY38Y8N+okmEPG
XDLqKpibxRwt5mcx54m5T8x7kswlYk4R84kHZX4M82SYI8N8FOalMCeF+R/M
A2EOCPMqmF/B3ArmKzBvgTkLzANgPgBzAZivxrw16maYB8Z8MOpsmF/FPCvq
cpi3xPwl6niYJ8R8IeYKIyTPx/wc5hcwD4b5MMyFYd4J80+Ye8J8DuZ1MKeD
eRLMl2CuBPMPmIfAHAT4+uDvg7cPnjd4teDTZlF8ANRJilrwPPi+mmcOXrLm
b4O/q38X/G9df9B8WvBmA1b0qJ13UxSXeNv4zJmccXzij5j7bbP5keup4W3/
WRrBTTIPHP6+/9Zs6/3YN0sP0ZAPfeVHfHJvk1KjLiU6ffn+47Y/r1AlmDdk
LtBywQ/JfHXXea5SZTcv7LYiZ+HZAZwYcrJQwtYUblWzzuS5eU/o+QKnnhNk
qQ8vMPtQsuzTQfb5wfwu6d81ffBH5C1yVhI5O5pzkT7XLaMH+lz0cEz04Dlz
lkv41Ciuuy7dqfGr45jSfdNxxmo3Xhjq1cvLPZxbXyuYfc20BA6Idh/tNu0k
3546Le51lQd868MziRtun/nb/fYXnHkWXe91SRrQ7bXLOR7Qb+288UNTeMOI
N6UjigY4cQvrMc/ob/Ynvf/PRh5qI/I8EHn2G/kJ8rcX+TGXgr87sUrmU4qb
8zt2AXuYe7551nqzIzny2K/ZF/SN43mvi/j4Zr3G/mnnpDhU8FVYjmltZmcK
4oL+6zaHL0jk5g+yZcpc8B4X6XLy3TDfC9wzwePdhTFJXH1J3uA/Mt3n2WZ/
wv4LZP/2aeeYHHuoZ85DB+T79JVzkfmujv3i+5YcFlejfLNwDloe1jwsfazD
z3Tdf/7N/L73uOOHZxxXzzZ0SI6zYezeYX/wHy0v8/YPz3huNHRZpX6/RHCE
kc/RB+QUO6BFYhfQ/yljfzRU7g3s8Ke51es8dgvhDaV2Djn8NJJ914YnPqwe
zftb9Ih6ve8q89Hme0/6RvHw9t+3fdo9FvZEgWJfTeW7/27s3rl/sP8kc09o
kdw/3BfwqicVqT11ddXfvfXfJ2zWaOHnric2eeu/T3hl4ze9yjfb6q3/PuGc
Ab9/U7Pmdm/99wndt+ZpPz/bTm/wBsFvu/Lpiw1r1uzy1vz2TOv7FJm61d0b
9QHwGzxkH/13COfK7+q/Q3hV5NR/hxDnQt8TceWhmstGP2+y6Ad9PdxPMveV
cE9hx3mNXRPseYfYzWZjR9RY7AffdZv5zjRCvu/2idH1f/AM5d8/PK9Ty315
0/v2SuQzZj3tkPWjsd7sT1tk/yayv8hD+USe2iJPfyM/Qf7NIj/0cFf8LvRQ
WO5tqLnH9I3cX1e5J+3NvaEacl82ih1PNnZNZ8We15v3hPfn5L3cN+oo+9SW
fcRfEH63hfwu5gDhF8eJP0wRO/9Z4sN3Yue45yXMvSfYrYf8nYudMhf8VOaC
p8t9hLyQ84DcR3wH6D/Q7E+fy/5fyf7IN/XcNO5vgPhv3N+Ncn/7ShwLlftb
SvwVfgf23En8VXvRH/TvIf5qm9hFY+Wv4F+XKH+FuBGl/BXiJ/xVeFp/7tjD
p2n9OdUUe4N/lvhJY5V/RhyGf0YchJ3CPiUeO/H5kMQj+C89JwIco+MX7r+e
g8B90PEX+EDHEcRR4ALgAfhHzf+HX9DxDvaNewZ9AlcBZwFfAWcAdwBvIF4i
HiEuwy9rnjz8EfwT7AT3GfcbdoX7o+Mm8JaOO8AlwEHAJ8AHwAvACdgX8Rn7
I35o/jn8Jvwo/Cf8C/wQ/A/uOe497jvuFe5ZI3V/db0I+BV4FjgW+Az4DrgO
uAc4CPgHOAO4A3gDOAC4AHiglsoLmkteAD8FvwV/Bb8AP1FD+VXcY9gbcLbu
q+I+4F7qeAccB3sGTgJuaqTiHXAN8EyoJa/ZZOIg7TJxkL9VcRD+GH4Y/g7+
r7GKg/BPNVUcxLngZxqpuhP0gHwD+UcH9d3rqb83gnuBvETfC+B33AvgG83n
RLzXcQd2ruMU8hztt5EPwM8/UH4DcQE4FrhK8x6BM4A7gDcQvxHPEccRF3HP
EB/hV7X/h19FvoI8BbgfeQC+C/wd4hvkB/7TfMJ8af2wg4vgh3E/gDcQv/Xf
f4C+8LuIp8gbEaeQPyK/Qr6FPAt5C+Ik8pdFafNK53sFps0rHfyAuKZ5fYhr
Op7CXoGngKMC0uaVzv6wG8gDnIC4DvkR3wf9H3UG5Je6zgBcAHtAvgQ8UknV
GZD34H4hz0Heg3v60FJHmpwWPzj8vbtp/26ksx74EngTOBO4DTguVNUftPyw
e31eVX9wcA70OEj9XQL4R+QNyBeQR+m5ErzXfdh41S+GH0a8QfxB3EH+pvun
yFvgv+G3Iad+D7nxv0N+7K/nobC/Pi/Oo/NHyIf9ICfkwH6Q5/8BmoD6TQ==

    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
       None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
84K/rfSJ4tGkaG02H/spqc/9OViPf6TvGJyb6V2pXleN8UfAJYJzYmnREdHa
ezT8YXBtQnWJ94NrVMo77grWaMpDFbueKd7hncGa7iLN7dy6fTv9/Wh3Zc4r
StPuyawjD6Tdm1kfV1ZczZ2vVlKczJ3floH/yqybFU9WFRp1f2y7M+vdA2j/
zKxlFZcejY5N5eRLMuvO8vIluXOeCvoOufOlsvDfmbXmwbRp7vz28eBc+QZO
eyw4970ePpEx7Tkuhz8IruEpz+qIrQPHUriiYmzuHP6J4Jxdua3yhdeic8YN
2G/FvhI+DHu53HU3xeJDo9egYlyt6DUi3/h36pqDYlyV6Dqk6k4No2OE4kjV
6BqOYtwh0XVLrf1G0TFFsfil6JxohOIn922U2uccHR1f5HOOjdYMirmHcbRO
HCvrR69B+c87omuDiq0Note1fO/t0fXD1am1n+b/YM037lUjtd9rHh2/lPtc
ForcCl4SrJ/PoW2jOAGfIb+S2XcoPleOjtGKV/sFx6zPsV8enHdILz0QXSOV
H24THX9VBxiQ+71LI9WO9jOqMb4VralUBxiZO7dXrGkbHa8VC+6EVxQ+8xi4
TeL8bP/gHE2xrF10PNXcnhtde9Ecmx9d89E8XBhd8zkVrsi90tQ+vFO0ppVO
C9G1zSXYezLm8tRx58boOrC0aIyuhUpbptF1KtUPtYa1fqVVSkXX0pVf7Bdd
b1cecWB0LV25Q7no+vmFnHsK95pfrMGLo2s1neDOHGsS5yZZdP1Wcf/K6Bq1
co2y0TV2+fzj4BMTx+4bouvPiiMdo3MxxY4T4a6JfcLs6HqXYscJ0Tma1v6c
6BqX1uZi+NpiXS+IrploLS+Kro/1yJy7Ke9WflSBo2HiGD0lOveU9i4RvZch
jZRH73HIn0yLrmvJn0yHL0icN5WP3lPQur4oumYl/Tw1un4i/3ZudO1FmueK
6BqC/HepYD/8Gu/018JX78OYXpnnzkGZ46ZqIjcFayNp+P/JZ6eO49JJfyRe
I1orioti+bpl0drm90IfyIeXYcyOxOuodPD5Gn8jPDq1VnxAay61Hzua+w+P
Xkc7FSdTz+ddtFtS12r2ROe3umYz2mHRz7WQ63RNPd9k71K8f41fyFwaoPUq
TcuRcuzhb38nfkbVC/Ym/j3SGk2KtVO5GKtY+WNw7JTP/wl+El5fvLcTMtc5
/1DsTZ3rlSvu8e/15RczP4s0b71ofaUaxSJ+28DUz96V46fEdZLF2Mem3hP7
udAD+l6tM78H5Rk1o3WR/NsvqWvgVYJrzVlwvWNX8d5k09/KJP4mu4vvorqK
voeeXXHtxSJm6T3p+b/S3C5Y70FaQvmt0gbNlQODr6+4nQd/94eC60SqETXS
Wo72n4ovy6PrZqp5PgavTqztfy/mTFN9u+j8XblJVWnwxPWd+cUc1jdqXDy7
NG3r6BxHv616oXX0e6sVv79a0ddz1Cjej96Drq17lA/WD09Ha4ytxbUUL6oX
z6znlQa5L1p7fwffHFwXUu5VMjr/Ug1K62dB8ftr6sTinrq39gDKF/dVzlWz
YD1jVoz7OnGucGt0LvCgYlHqmF42eL7qeynXWBpdq5RuuSS6fq6c6Cr4HrhJ
sF+vmFgDad7qvppXms/6pvK3JXLX61XfvjR6PSourMq8d6L4qXqm3skzwb75
1sT1zL9S71+ojnpLdB6kGv7N0RpY9Q3VQbQuVJ+/Kfpc1e2vjtYzqrdfA1+X
uN5+WfTzSrNcEK3xFmDvnbk+qbqm1rTWuPZLtPYVh9cX/kdaXfVl1XqVX+xI
XdOWL9xQ+DT5Pa3LFcXaVJ1Xa1FrUHnYkug5rLru3tR7K8oH/0m9B6SYeEDu
fQvV1g6K3gvW3ND81/o/T7Ej9/eTjtcetnz+xtT+U7/zteC4qr0D5XbXRes0
7WsfHJ37q6atGrTqG6p7r4muV6gevjq6XqE6+SvR9QrdXzpQv0H7sM9Gazzt
1T4fXfdQbfmF6FqK9obejq6xqC69J/W+1Q5+20r4E82HYN10TOI689roGpFq
4Cuj6y3al68I10istdZn3nfXHnr16HqjvmGL4juq1jojuk6leuxMeEbivZ7z
4QsT7xmdF63n+2auL8mHKcfT3pK0jfbQj2BMo8R74odH1xX1/qWTtWZGB2tM
6QHtK10brau1514numaierf2ruTPVRtQTUNxa3Hmerjqz/1p38y8F6iaYfvo
PVnt7XaLrjeqftgqOrfSPm+/6NxKNZCm0Xm3fKPqyZqTqhP3iK5nSltWKvyJ
9lLHRdcVVR8+iqMLnGIfD09PXG9pFp0LS0t/mnkPtUHm+rlqJtov7suYwYn/
78FE+MzEuXnn6NqmctgWRWzSHnTv6Jqh9n8HROd92rc9MnoOaE95UHQOqP1u
7X+rNqu97O7R9VjVLXtxnJG4bq76rHy76geq22v+KybWjdbS8qX7RNdpFeNq
ROtD7TuPia67SiNoT0c6QXsO0ir6RtonkF7vU3yv2bm1hfZMS0f7QNV7O3AM
gr8vdMWuwrfMyK1L9N6m5c6NpZeUqyq+/ZY6n9X73FzoE83hTtzzwNQ5rPS/
4rbmp/a7R0XXr5Q7NMidS6iWfkD0/0VR7X3/6P9z0jNz3V7+R3vK+0bvH2m+
Vc59j/8DNpxGPw==
            "]], Polygon3DBox[CompressedData["
1:eJxNmmXYHEWYRXtqaoDg7hbc3T24J7hDkOCQBHdCcHd3d3d3d3d3d7c9h9v7
7P5o6DPV32Smu+p97701fTcbvPqOpWma8/lP5f8zdJtmJs4HdppmCXgH+HsG
ToH3gmeEX4c3hfvBE8ITc/0AeA54Ivh5xleD54THhZ+DV4FngceBn4VXhmeG
F+N8z17TvM97/Ap/C2/DNVtzvjGvTcz5C7y2OtfPxWurcP45x1OMfQZPwfhU
nK/L+Pzwqox9wfEcr30BT8L4i/AajM8N/8jrT3B8yvlIfkfG3/czcL4ur00N
vwZvCC8MjwiPzPVLwFPCf3N+N+MzwePCf8F3wTPA48BzcP1bfgd4eXh6zv/k
fCqOMeF/uP4eXpsFHg/+Hb4DngYeC/4TvhOeDh4brrzfQ/BC8CTwgvC78FB4
NXgBeCH+Zgg8AJ4TfpvxbeEV4NnhuRjfGl4O7sEPM74IPCk8CvwYvBQ8NTwq
/Di8NDwN3Ad+BO4H94Xngt+Bt4NXhEeGH4WX9DvCY8FPwyvCM8Jjw8/AK8Ez
wWPCT8ErwDPAU8GvwhvAC8F94Vfg9eEF4Snhl+H14AXgJTgfxPf5mON3+Hv+
/yjHJ5yP4Jzk+g+4Zi/O1+O1Dnw/PA88ITwT/Aa8Gbwk3MD3wXPBE4BjwE/C
y8PTw/3hAbz/IfBWXg4/yPgC8MRwgR+A54MnggfAH8KHdjKHP3CecvzF+f4c
Qxn/ifHTGd8XXpbzrZn/X3LNv03m4xy9zB+f32qM/8zxCuPfwoszPnsvz9P5
tRg8G7xV+3z3h3d2fnMMh5fx+TO+A+Orwic4n+F74YvgY+ER4bvg8+Hj4T7w
PfCF8DHwgc5J+Dz4CLjH+C3wWfBx8Ejw3fAF8OFwhW+Gz4RPh0eFH4avhJeC
54S3h1fx+8NzwzvC/eHl4Xl7mc+rtfPd+b1p+7xm4l48UjL/V4dXhpfg+hd5
7Wt4c67vBx/I+CB4OXgeeHC7PhaGZ4a3gJeG54dnhDdp692i8KzwlvCy7fqa
qZd6aL1bBJ4FHgQvA88HzwBvDC8OzwNPD28ELwafCh/JZ3sQvhw+DR6F8Yfg
K+DD4C58E3wGfCt8Jdd/CD8OnwePwfjT8A3wufDo8FPw9fCSNc/7Svg4+BzG
T4SfhK+Dr4EvhN+E74Pvhcfn77+Cn4cvhc9k/EX4duuvn5XjA+c6r93D+I3w
l5w/x2t3cf4T5z9y3Mn5ZYyPxfu9BN9hH4HHhJ+Bb4SvhceB34Lvh6+Dx4Xf
hh9o5+s/fIer4OPh3eDf4fPgg+Fd4d/gc+GD4N3hP+Dz4UPgQ+G9+Rw3wqfD
e8N/Mn4RfAS8M/wLfHYn62EX+Ff4HPhAeB/4L/hi+Ej4gK5FkvsGn8jpMPhf
xq+GT4APhAvj18Enw8PhDnwtfBK8L/w3118CHwWvxPnijL/AZ/wKfprxr5yr
HO/Bg+AlGT+I67eEt4KXgg9u6828/P0AjjHgneC5Oe/PMTo8FL6lff8D4M3h
Ffj73eHveP8er81qra2pjZsyviKv/8AxIryZ861dP8PhLeCb2v75iz3Ffsb5
Hoy/2vbTG9v++zM8GB7Cv/cjfBp/vw88C+fDevk37LGDGf+B105lfG94cnhy
xpdr6+tKzieOPu3n/5fze7l+dnh8+5m1leufdw7CG9tPOH+J4xv4Nf7/DsfP
TT7v0ly/D9d/zmt/W//gfeEv4H/g29p6+iu8n/WU8/16qdG/wfs5n+D34KOt
F4yvyTEOn+cA6wXn65Tcj+/gM7h+NK5/hPGr4CPhEeBb4bPhhdQeHGPDw5ro
lSl66S8ztP1N/bJC2y8ngydjfFl4uraf2H/2bPuZ/WhBxvdo9cra8MLwPvBG
TfSH/X69tn+ubv1kfG94wyZ6YLpe9JL9dFV4AXh3eB14FXh+eDd47Sb6bxn4
MHg7+Ob2eewKrwVvyPhi8P7wQHhdeBF4X3hjeH14UXg/eBN4NnhaeJ1O9Nro
8ETwHP+v/07cSz+2X88KTwOvDc/XRH+qT9WX6sHZ+TwH9DKHPm+iP9Wj/Vo9
Mgs8NeNrwfPC08JTwqvCs8PTw33h/p3oV/XvVL3oWfVrn1b/qc/UY+qFCRif
DR6piT6csBd9p34bH54EXrwTvag+nrQX/di3ibZduhc9oT74pq0FHbh0ogfV
i9ZgdfltXD8e13/Ea0/AD/HiopxXjo+azOtPSuam8/u7Vt+61l3/K9asF3Wv
etdasH8vusmasFI39+9peE37aUktGKWT9fZyyVoftRP9YS06kOuP7aQmvVuy
lsbk/Jcma+Ugxs/qZM2s0eq1MztZA+qh3zjG6mS9WY+GdfLZrBertuvraHg0
P3839eRxXlujSS+2J9vLFyxZe65B19oxJffKe3YnfFWJ9piiZm2qQdQmE9Zo
FzWKvXjyGm1iT7Y3Tge/0KRH2rumqelV9jB717Twg016mL1v6pp/zx5o75sK
vqlJD7R3963phfZwe/eUNb3cHj42fHk3n+/sknpoLR+5k/lsfbMWey++b1L7
h/M3x3TSA6xzH5bUFuudWlvNrVcYr0SbqlFHdj6UeC89mNp//BIv55pyLc1c
4tX0bJPBE5RoXTXvKPAIJV5ETzKqc79EW6ux+8C1xFvoMUaDR2q9jp5nBNdO
6530UD1rfSfeSQ9Vnb+daHHXmGurW6LV1ex6t1lKvJkeTS85XeuV9Ey27b87
8RJ6Cr3ltK6VmnruPHV+6jNfL+md+k19xFslvVU/sUk3/e7Zkv64VNsfPoKP
gRfRW8BvlOh5tdsENVpXDXez69l50omeV1uqMdW2C5R4GWu+tX7qEq9szbJW
TVLidfW8U8OTlnhXPaxebLISb6RH0ktNU+Idf29rxV+deCs9ll5knBKtMj6v
ndJEs9ib7FF+l/3b9/9UjdzEI3u/v1aDNPFIfp5P2vuvB38JntQaDk/efv6P
2/ljTX4Tnrl9v1lLvPA33XgZPc1H9t9ueok9Ra/6bTdeUs+qF/+hm15nz9NL
/QRv08RT6e1+hNdv4vE+VqvA28OHd3J/P+um99kD9arfwSs18azev8+78Zp6
TOfTl/asJp5fLThGjXZTE6olR6/RhmpKtd2YNdpAjacX26HGe+nJ1Jp9arSl
mlOtOhrHoU00q9pz5BotqwZV245So3XPbefvF91kD3riT9Qq8A7wEdZI+Dd4
R/hI+DOffzda7KhOtPOoNdpYDe36/qob76SHMjv4vhvvpId6D16ofd6LlGjx
sWu0rppcLzMIXrSJp9HrbFnjbfQ8aoktanq5mkJvtG2Nt9IjWa+3rvFWeijX
w1Y1XknPZe9XA6h1xizprf/1WMtFiTeduMZb6lH1rpPBFzfxsHrVSWu8rJ7V
WmpNfbmTmqw2H69Gq6vR9X56QHvJoiXeefsar6eH1vttV+Pt9IBqlc1rtIea
Ra2wSY12UDOoJTaGZ2uiKdQCa9dkPWoCC924Nd5AT6GXGKfGW+gp1BoDa7SH
mkNvPVFNP9NjqxU3qtHKaka1oRpRLTNFiTbarIbVSGodNY/3f7YS7bF+jRZR
g6hN1oOnaKJR1Frr1txvNZfafMOa56FGN8sx0zHrGLckG1Gjqc3GLsmG1Ehq
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
ySfdQ3ftusdj1uwaVnuoQV61F5bkhy+29cjfTJhnvtKNH3XP3f0w92S8195z
947cQxrRclySJ77UjV/V35o/vtDqI3/DYf74fKuP/A2Hedqz3fhZM3+1hRrD
3nRdSf97xr/vJLM3f3yu1VP+ZsPs2wzc2rtlSW+1x74G317S++yB9rZrS3qr
PdbeeH2J9lUDq20uKdGaas6X4VtKtKia9BX41hJtocZQi15aoiXUFGrVy0q0
jxrIXnteiZZR06iV/M2Pvd6eb6++oUTLqmnttdeUaBs1jtrgihLtowa6D76g
RMuoadSKl5doSTWl2u6Akqy6f7se1i25PyPV+Ce1se93Rk29VFP5/c+Eb27i
AXz/c2rqq5rJz396Tf1Vk6l91EBqnXPaenlqjRZSI6m1D63xAmputayaVq06
rL0/p9XUdzWi9+/smvqsJvP+nlVTj9Vw1uuTa/qHmtG9231r6rt7uD7fC2rq
tRpHbaxG9vMc2/aH42vqmxrZfnR0jfZV4+tdDoEPa+Jh7F9H1WhhNbL18Yga
ra4HsP+cVNPf1Lz2jxPgS5poWPvZkfCpTTS1z+fwGi2v5tcLHVjTL/RE1u9d
a+q7e4L2m91q6r97ju7l7VVT793Tc69vz5r67p6fe5F71PQT9yTtR8Nqshkz
GrWpGlUtenWJNxvO+J5NPJrz7dyafqimdq9s/5p+556Ze4171/Q79xz9rcc+
NXvX/ubDvfP9avqPe+j26+Nq5qMexPl9fs180bPZP3eqyecHt3plmfb+7tT2
711q+pN7ou6l7g5v0GRP1b1Q65f9zD1R9cTONftTQ1q9d0NNLf2+1XtLt/d/
aEk/Ul8Og7do++nQmvzF38S4d+GetHvV77br6c9u9iv0xuqTY2vm8+1tPx8M
r9zkNzbu93zYzX6Jv7mznl9fs96/bPvN1TXrXc1tb7HHjN7E41l/LqmpR3pe
85oRaj6Pv2Gy/11RUx/0FNanS2vqkZ5Zr6Y+fqiJZ7OeXlhTj/Rs1r+LauqR
HsN+rH62Fz1W0s+vqpkvegD7uZ7mjSYeQL2yY81vodxfcP/qI8ZnbfKbQ/vT
dTX1VU9ivbu4pn7pcdQGV9Z4ITWC9frymnqmJ1I7mb9822oo9duJNfpQD2l/
vramP+hxnM9mDtab7UvyrFqTN53arjczCL3/Dm3e47+xR5OMx2zSzTCzHjNK
++01Nf3iP4/E+Qfd7G/5mzr11ZCafM7feJk3dWuyjVP+t/51U1/2KqkvZiTW
kz1L+u1lNf1Cz2/e+343+0v+hu9/AMvaKR0=
            "]], Polygon3DBox[CompressedData["
1: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
sW6w/WwTe5n9yI6zvWwD28W+Y0fY/wBdv884
            "]], 
           Polygon3DBox[{{1203, 861, 860, 1202, 715, 716}, {1068, 1067, 712, 
            370, 371, 713}, {1087, 1156, 625, 425, 424, 740}, {866, 1020, 601,
             723, 1207, 865}}]},
          Annotation[#, "Charting`Private`Tag$23322#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{291, 508, 1210, 292, 522, 320, 1308, 537, 335, 1313, 552, 
        350, 1320, 567, 365, 1330, 582, 380, 1339, 595, 1253, 393, 608, 1265, 
        406, 1351, 621, 419, 1353, 634, 434, 1358, 649, 449, 1365, 664, 464, 
        1374, 679, 479, 1385, 694, 494}], 
       Line3DBox[{293, 509, 1211, 294, 523, 1222, 321, 538, 336, 1314, 553, 
        351, 1321, 568, 366, 1331, 583, 381, 1340, 596, 1254, 394, 609, 1266, 
        407, 622, 1275, 420, 635, 435, 1359, 650, 450, 1366, 665, 465, 1375, 
        680, 480, 1386, 695, 495}], 
       Line3DBox[{295, 510, 1212, 296, 524, 1223, 322, 539, 1233, 337, 554, 
        352, 1322, 569, 367, 1332, 584, 382, 1341, 597, 1255, 395, 610, 1267, 
        408, 623, 1276, 421, 636, 1283, 436, 651, 451, 1367, 666, 466, 1376, 
        681, 481, 1387, 696, 496}], 
       Line3DBox[{297, 511, 1213, 298, 525, 1224, 323, 540, 1234, 338, 555, 
        1241, 353, 570, 368, 1333, 585, 383, 1342, 598, 1256, 396, 611, 1268, 
        409, 624, 1277, 422, 637, 1284, 437, 652, 1291, 452, 667, 467, 1377, 
        682, 482, 1388, 697, 497}], 
       Line3DBox[{299, 512, 1214, 300, 526, 1225, 324, 541, 1235, 339, 556, 
        1242, 354, 571, 1247, 369, 710, 711, 753, 1407, 715, 716, 1257, 757, 
        725, 726, 1269, 759, 735, 1403, 736, 423, 638, 1285, 438, 653, 1292, 
        453, 668, 1297, 468, 683, 483, 1389, 698, 498}], 
       Line3DBox[{301, 513, 1215, 303, 527, 1226, 325, 542, 1236, 340, 557, 
        1243, 355, 572, 1248, 370, 712, 1399, 752, 714, 755, 718, 724, 720, 
        1258, 758, 728, 734, 1402, 730, 760, 738, 744, 1406, 740, 424, 639, 
        1286, 439, 654, 1293, 454, 669, 1298, 469, 684, 1301, 484, 1390, 699, 
        499}], Line3DBox[{305, 515, 1216, 306, 1306, 529, 327, 1310, 544, 342,
         1316, 559, 357, 1324, 574, 372, 717, 1409, 756, 587, 385, 1343, 722, 
        731, 600, 1410, 398, 732, 741, 613, 411, 742, 746, 1405, 626, 426, 
        1355, 641, 441, 1361, 656, 456, 1369, 671, 471, 1379, 686, 486, 1392, 
        701, 501}], 
       Line3DBox[{307, 516, 1217, 308, 530, 1227, 328, 1311, 545, 343, 1317, 
        560, 358, 1325, 575, 373, 1334, 721, 588, 386, 1344, 723, 601, 1411, 
        399, 733, 614, 1412, 412, 743, 627, 427, 1356, 642, 442, 1362, 657, 
        457, 1370, 672, 472, 1380, 687, 487, 1393, 702, 502}], 
       Line3DBox[{309, 517, 1218, 310, 531, 1228, 329, 546, 344, 1318, 561, 
        359, 1326, 576, 374, 1335, 589, 387, 1345, 602, 1259, 400, 615, 1270, 
        413, 628, 1278, 428, 643, 443, 1363, 658, 458, 1371, 673, 473, 1381, 
        688, 488, 1394, 703, 503}], 
       Line3DBox[{311, 518, 1219, 312, 532, 1229, 330, 547, 1237, 345, 562, 
        360, 1327, 577, 375, 1336, 590, 388, 1346, 603, 1260, 401, 616, 1271, 
        414, 629, 1279, 429, 644, 1287, 444, 659, 459, 1372, 674, 474, 1382, 
        689, 489, 1395, 704, 504}], 
       Line3DBox[{313, 519, 1220, 314, 533, 1230, 331, 548, 1238, 346, 563, 
        1244, 361, 1328, 578, 376, 1337, 591, 389, 1347, 604, 1261, 402, 617, 
        1272, 415, 630, 1280, 430, 645, 1288, 445, 660, 1294, 460, 675, 475, 
        1383, 690, 490, 1396, 705, 505}], 
       Line3DBox[{315, 520, 1221, 316, 534, 1231, 332, 549, 1239, 347, 564, 
        1245, 362, 579, 1249, 377, 592, 390, 1348, 605, 1262, 403, 618, 1273, 
        416, 631, 1281, 431, 646, 1289, 446, 661, 1295, 461, 676, 1299, 476, 
        691, 491, 1397, 706, 506}], 
       Line3DBox[{317, 708, 1398, 709, 318, 535, 1232, 333, 550, 1240, 348, 
        565, 1246, 363, 580, 1250, 378, 593, 1251, 391, 606, 1263, 1264, 404, 
        619, 1274, 417, 632, 1282, 432, 647, 1290, 447, 662, 1296, 462, 677, 
        1300, 477, 692, 1302, 492, 748, 749, 750}], 
       Line3DBox[{493, 693, 747, 1384, 478, 678, 1373, 463, 663, 1364, 448, 
        648, 1357, 433, 633, 1352, 418, 620, 1350, 405, 607, 1349, 392, 1252, 
        594, 1338, 379, 581, 1329, 364, 566, 1319, 349, 551, 1312, 334, 536, 
        1307, 319, 521, 1304, 290, 507, 707, 751}], 
       Line3DBox[{500, 700, 1391, 485, 685, 1378, 470, 670, 1368, 455, 655, 
        1360, 440, 640, 1354, 425, 625, 1404, 745, 739, 410, 612, 1401, 737, 
        729, 397, 599, 727, 1400, 719, 384, 586, 754, 1408, 713, 371, 573, 
        1323, 356, 558, 1315, 341, 543, 1309, 326, 528, 1305, 304, 514, 1303, 
        302}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{762, 1063, 507, 761, 1210, 975, 763, 1211, 976, 764, 1212, 
        977, 765, 1213, 978, 766, 1214, 979, 767, 1215, 1109, 1303, 768, 1216,
         980, 769, 1217, 981, 770, 1218, 982, 771, 1219, 983, 772, 1220, 984, 
        773, 1221, 985, 774, 1398, 1064, 986, 1065}], 
       Line3DBox[{776, 1110, 1304, 775, 522, 777, 1222, 987, 778, 1223, 988, 
        779, 1224, 989, 780, 1225, 990, 781, 1226, 1111, 1305, 782, 1112, 
        1306, 783, 1227, 991, 784, 1228, 992, 785, 1229, 993, 786, 1230, 994, 
        787, 1231, 995, 788, 1232, 996, 789}], 
       Line3DBox[{791, 1113, 1307, 790, 1114, 1308, 792, 538, 793, 1233, 997, 
        794, 1234, 998, 795, 1235, 999, 796, 1236, 1115, 1309, 797, 1116, 
        1310, 798, 1117, 1311, 799, 546, 800, 1237, 1000, 801, 1238, 1001, 
        802, 1239, 1002, 803, 1240, 1003, 804}], 
       Line3DBox[{806, 1118, 1312, 805, 1119, 1313, 807, 1120, 1314, 808, 554,
         809, 1241, 1004, 810, 1242, 1005, 811, 1243, 1121, 1315, 812, 1122, 
        1316, 813, 1123, 1317, 814, 1124, 1318, 815, 562, 816, 1244, 1006, 
        817, 1245, 1007, 818, 1246, 1008, 819}], 
       Line3DBox[{821, 1125, 1319, 820, 1126, 1320, 822, 1127, 1321, 823, 
        1128, 1322, 824, 570, 825, 1247, 1009, 826, 1248, 1129, 1323, 827, 
        1130, 1324, 828, 1131, 1325, 829, 1132, 1326, 830, 1133, 1327, 831, 
        1134, 1328, 832, 1249, 1010, 833, 1250, 1011, 834}], 
       Line3DBox[{836, 1135, 1329, 835, 1136, 1330, 837, 1137, 1331, 838, 
        1138, 1332, 839, 1139, 1333, 840, 710, 1066, 841, 1399, 1067, 1068, 
        1408, 842, 1070, 1071, 1409, 843, 1073, 1334, 1205, 844, 1140, 1335, 
        845, 1141, 1336, 846, 1142, 1337, 847, 592, 848, 1251, 1012, 849}], 
       Line3DBox[{853, 1252, 1013, 851, 1253, 1014, 855, 1254, 1015, 857, 
        1255, 1016, 859, 1256, 1017, 861, 1203, 1257, 1101, 1018, 1078, 1204, 
        1258, 1102, 599, 1079, 1075, 1103, 1410, 1019, 1081, 1077, 1104, 1411,
         1020, 866, 1259, 1021, 868, 1260, 1022, 870, 1261, 1023, 872, 1262, 
        1024, 874, 1264, 1026, 876}], 
       Line3DBox[{875, 1025, 1263, 873, 1348, 1151, 871, 1347, 1150, 869, 
        1346, 1149, 867, 1345, 1148, 865, 1207, 1344, 1100, 1076, 864, 1206, 
        1343, 1099, 1074, 863, 1400, 1072, 1098, 718, 862, 1069, 1097, 1407, 
        1202, 860, 1342, 1147, 858, 1341, 1146, 856, 1340, 1145, 854, 1339, 
        1144, 850, 1338, 1143, 852}], 
       Line3DBox[{878, 1152, 1349, 877, 1265, 1027, 879, 1266, 1028, 880, 
        1267, 1029, 881, 1268, 1030, 882, 1208, 1269, 1105, 1031, 1084, 1402, 
        1080, 1106, 1153, 1401, 1086, 1082, 1107, 613, 1088, 1083, 1108, 1412,
         1032, 883, 1270, 1033, 884, 1271, 1034, 885, 1272, 1035, 886, 1273, 
        1036, 887, 1274, 1037, 888}], 
       Line3DBox[{890, 1154, 1350, 889, 1155, 1351, 891, 1275, 1038, 892, 
        1276, 1039, 893, 1277, 1040, 894, 1403, 1085, 1041, 1091, 1406, 1087, 
        1156, 1404, 1092, 1089, 1157, 1405, 1093, 1090, 627, 895, 1278, 1042, 
        896, 1279, 1043, 897, 1280, 1044, 898, 1281, 1045, 899, 1282, 1046, 
        900}], Line3DBox[{902, 1158, 1352, 901, 1159, 1353, 903, 635, 904, 
        1283, 1047, 905, 1284, 1048, 906, 1285, 1049, 907, 1286, 1160, 1354, 
        908, 1161, 1355, 909, 1162, 1356, 910, 643, 911, 1287, 1050, 912, 
        1288, 1051, 913, 1289, 1052, 914, 1290, 1053, 915}], 
       Line3DBox[{917, 1163, 1357, 916, 1164, 1358, 918, 1165, 1359, 919, 651,
         920, 1291, 1054, 921, 1292, 1055, 922, 1293, 1166, 1360, 923, 1167, 
        1361, 924, 1168, 1362, 925, 1169, 1363, 926, 659, 927, 1294, 1056, 
        928, 1295, 1057, 929, 1296, 1058, 930}], 
       Line3DBox[{932, 1170, 1364, 931, 1171, 1365, 933, 1172, 1366, 934, 
        1173, 1367, 935, 667, 936, 1297, 1059, 937, 1298, 1174, 1368, 938, 
        1175, 1369, 939, 1176, 1370, 940, 1177, 1371, 941, 1178, 1372, 942, 
        675, 943, 1299, 1060, 944, 1300, 1061, 945}], 
       Line3DBox[{947, 1179, 1373, 946, 1180, 1374, 948, 1181, 1375, 949, 
        1182, 1376, 950, 1183, 1377, 951, 683, 952, 1301, 1184, 1378, 953, 
        1185, 1379, 954, 1186, 1380, 955, 1187, 1381, 956, 1188, 1382, 957, 
        1189, 1383, 958, 691, 959, 1302, 1062, 960}], 
       Line3DBox[{974, 1096, 748, 973, 1397, 1201, 972, 1396, 1200, 971, 1395,
         1199, 970, 1394, 1198, 969, 1393, 1197, 968, 1392, 1196, 967, 1391, 
        1390, 1195, 966, 1389, 1194, 965, 1388, 1193, 964, 1387, 1192, 963, 
        1386, 1191, 962, 1385, 1190, 961, 1209, 1384, 1094, 1095}]}}},
    VertexNormals->CompressedData["
1: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
p0/bo66Icwg1xPsPp28+j/c/MEiUeupVwcbky9fh+PuOK9/G8XNeVLzg9rBz
w0Qz0Z4fF/RnoD37c/Z7cftZeWKZBdpv0DRmC9rvE9qewefLjl9V2YTz/eHn
GIPzVWm3Rf8w67zRm9A/L2v6e6J/IldGoD+ZlcHbJPSn2cGjlsncn6STSDeR
XqK8Tnme8jvlIcpLlI8oblIcpfhJ7zm99/S+07qkdUrrk/xIfiV/Cv39b20C
Xbt67N53wrSPU1Mu22LldBfv/yRv3Ib317p5L+TjszOL7g3C8aV/y+Th+HWn
bypye9jBjvLRaM+rQz9L0R71Gw86uP1M+dmCkWi/qL20PNr/Z8dzQz5fFnv2
gDjOtzQ+cQ3OtyPA7jr3DwtVL/odx/0TKNQ7Ev3j/j92sfkrc326u/PjzZUm
53Z3O2qS7iQdSvqTdBLpJtJLlNcpz1N+pzxEeYnyEcVNiqMUP+k9p/ee3nda
l7ROaX2SH8mv5M/22GpbvI+uoneSHPD+p3MHDcT1XF3+aTCOb39ltSeOf+xn
WRyu588mOiPQHssXQVPRnhy3LR64njdHBUWi/fcGNOuj/e73pP+uZw/loUdw
vqoTJkbjfNelw9/1vGnI+O3oH1+niuvoH2nnJvQne7qq5TP6c3GBoAbXM+l4
0vWk50l3kg4l/Uk6iXQT6SXK65TnKb9THqK8RPmI4ibFUYqf9J7Te0/vO61L
Wqe0PsmP5Ffyp8Gs9Cgcl66PgpYU4/g/JWQXYnw+ercsAu35mOCqh/Z0jbBf
g/F55ceV+mh/lktEMdo/sm71QYzPS1R8XHC+wz2298P59uq4cRjjs5ld1Rr0
j1ZsTj76J+O1TDLG5/aNl93++jNirhzGZ6qLqE6i+oh0POl60vOkO0mHkv4k
nUS6ifQS5XXK85TfKQ9RXqJ8RHGT4ijFT3rP6b2n953WJa1TWp/kR/Ir+bPw
bN05tIOuA2wTbNEec0kr1EtsVZ87Zmj/gfc7NqD9MtXDjVFvRCbK/p3vhyNn
buJ85896Gol6Q+jCuyT0T8Kq4RdRb9wb/kcS9UawmYkh+rOk5Igh+pPqTKo7
qd6kuojqJKqPSMeTric9T7qTdCjpT9JJpJtIL1FepzxP+Z3yEOUlykcUNymO
Uvyk95zee3rfaV3SOqX1SX4kv5I/p9g/zEW76aq4Y48G2r+z/0oV1M8jkmVd
cb4i63bo43w9yvv2Rf3s+d3AGP3z7dss3QPcPyEXtdCfrHRXn3r0p2qtgzr6
k+p2quOpfqc6k+pOqjepLqI6ieoj0vGk60nPk+4kHUr6k3QS6SbSS5TXKc9T
fqc8RHmJ8hHFTYqjFD/pPaf3nt53Wpe0Tml9kh/Jr+TPnTmNWPeyf66/j/+N
txM6Qi9hPbh+9BNd9E+5a0Qg+sfnjm0g1oP+B/vNQH9uUl+4Af1J+yC0L0L7
IVS3Ux1P9TvVmVR3Ur1JdRHVSVQfkY4nXU96nnQn6VDSn6STSDeRXqK8Tnme
8jvlIcpLlI8oblIcpfhJ7zm99/S+07qkdUrrk/xIfiV/yi/rkEO/0NXgc8N7
9E9EHhuK+xuGp/8EoT8lDdbt+evPnn0l2mei/SXaB6F9EdoPobqd6niq36nO
pLqT6k2qi6hOovqIdDzpetLzpDtJh5L+JJ1Euon0EuV1yvOU3ykPUV6ifERx
k+IoxU96z+m9p/ed1iWtU1qf5EfyK/nTICTEFP1I118PQ6rQn1nX5u4emFMD
dL2lcj0ko08uG+05NHK6cS1sGTug75oUAaxrGDwqYNk7Vhusupffx+uYgSZ4
/4HgiCi8v0/fJ9H8flZdodW5mt9v2f/DNLxfYtzK0ehnulYcCFSs53H/VMw5
Qe2uJEgdmnH444iPIDriz9AHguZ//qZ/p8/zly2fXrcriYlNjzHHf1/+22Yw
ft745dU5fC50VT8pvNbeqA06wvVl0Z8zpl4Zhd9r49g8Db9X9PCznL/PJavv
3/vfWW1ZhfevP+R8kY/LksZVVeH3GgurD8Tx55ZsG/4kPxdcMvPEn+QngeJW
kXGHzVqB7CC7yB5/jWiz0IFrEyR2j5hvMjsZvBYOGF8Q2gb0ffT99L3V3bIq
fHym2e7ZD8fvV/x0FI6vpPM9G++j616LWB283/2c1QW0c+Djewr4vXcE8QPw
ewseZEijnSurs5fwcdib6X9kcByaP/mD/GCVo/vXzrrY2h3cTnZukcdYtJPm
T/4gP9i+dZ2Ddv4Sub4Yx78fEjICxyc7yC6yZ2TcjYn4fXSVvq08Fb/Xbtek
Uz/lcmHJd8esrzFFbP+3extr+zSDppf6uVcdaxO+Zzw9bTHvIxM97lIcOasF
UlMXXeb3s7mmtm/x/pU+i/Txflp/tB5pHSouDnmI69Z0lFc/vm7Zpit18rgO
h1yR2In30XXB6OxEvL+p5K0w3jf0ybLHuH6PRoTOw/tp3dN7QOufxqXvofFf
um23wXnZeJc853ZCw+Xvm9FO+pv+nT63No5zxvkKCwmZ8PlCfXd3Jc6X1hmt
O1pv/dtPu6AfzEULY3G8dJXrm3Acet70/Om5k3/J3+Rn+j76fvpeWq+0fmnd
0vqg9ULrhJ4TPTd6XmQf2Ut20vqm9U7rnNYTrS9aV/S86fnTc6f4QvGG4gw9
P3qe9BxPLdxQFXK9BugqlGrx7KDGO+byRq+G/80MihNL8HMJnV4p+Dn9Tf9O
n+/dnViOf9NVOsc9Cz+Pe2/ZPPJDDdjfHTF5h1QNPNmSH/FmTT5bWjBBnv/N
XF3T6/Hfx7ROi8XPFWcMGoP3Fa3IbuefszM2rqn4eZjwpBb8+5PJqHH4/9UO
qHmDn9O49D00Pv3/NB6NQ99H30/fS+PS99D4yl0VXTnba+HIgAePk7/VwIqD
xbMyvdPZgNixYQkRVRDVPdVkslADTMv9qt4pm8l+fJuq/PmjAKxPybzrbKiD
mltzncSuJzL9cM8Ak7AKiErzddfKbAQ97dG2KX1esvMx79wepFTB7Pe9fr0t
aoAtIdZvj5wNY16Lb9RpG5TAgskhCxYea4b0PIlNvTPiWUrhGfW3AytAYLZU
SvZRE1w/XhrxfsdJaItvaR1s8B4sv+o9EW5oAe9r8X1WakUwB4tJTnPOFMGF
3x0HNi5rAVvV4jfFV8Kh8caEBxptWdB6Mt6rUKwN5vvGXAwx8WOiyUdMb7Jc
qFynFtR1oRXK7x1fMXBfPEy8fbJ5XjSDLS3bC64n8rh8K+1V3VgH9ne7xi7n
n/M4ISGVv/tLUtO1S3dqJYPV/OXNopvaYIZhd1MXj+/8/epC3eXfs/+0sGff
6YVSvNb8aMbk3vTJx/FPjF88rZ6Pryr6pZGPw7Y5vGvCcc4Net+I41TEvkrl
9rMF4797oP1zR88NQPu7hzjt5/azUQ9mB6L9OtIygPa/bl7/jfuHzbQdEIH+
CRWZKYn+CRQ5c537h6Vfqt+L/onwM32E/lmn+lnA/c+yna3U0f/BA8+sRf9b
p4Roc/+zo1f3i6P/H9c4Kr/j/pfXeOPDny+bqynvhc93a7zaAXy+YrX9vPnz
ZTY7n37C52v/vVnvKH++u+d+fcDXD/NdtWoXrp/Jo/fPwPUzfsSgeXz9sIyT
DzNx/YzzHnIP10/tzx+OrhoCJifVUFAqVwcNBjPOLI3h8WPkrF6522tZ9sw7
Ibg+QalgGa5P8eTaEG/PevhiUXB1pYwA3l60udv3RwLb2d2ve+rYOtg5HlwH
jayFndlbVm0tv8v2uYx5lvJbAGfKHk5YOqqe16NP5MrdQ0A9ImSDs0wVLH7z
UXGcSCMsTtuzsGpNEghWS7W4fyuBGe5OvRfEN8G2t6LK+0sy4NXn4Su7l+VD
3XShroQRLbBJVU0tfUkujC583f/E51T4Kjcs+s6vFnji+zJ3Z9Y74IumH9Y7
lT37jqk9+42KOwVy/H42u1QnCu9/1v9+Nt4/18vWiI/PjF9q/MHxp9VMUcLx
xVucO7k9TD18gxDas9o/bjzakx0pY8TtZ0/kE6ai/YVSo2ah/bOLJGP4fJnY
3vrxON/aaxYjcL5GayzQP2zx4Jcu6J+P0oFb0T83dj4O4/5kJ064XUJ/Bnin
16A/w2/KfJ6a2AilnWvmONtXwvtNO71M1gQx5/bjMSO2NcDlAYtFzppVg0nj
ehWvnWFwV+PHmOIFdaCvLvP7hHEN6G/ceOXWuJfgU2s+MXWeAPRNH2iUL66D
gcElOxWn5cLtY2MtjXUroNh3W0zQn3pofX3z0tBphaDyZf02iR/v4bCrxcWD
2xrBOFTyzun+JXD7Qrv07Nw0GLN6fbTP0iZIMwvZ7aFTju/dcKzffXv2cff3
7N8WqQ/cyO9nHzy9n+L9caVHt+P9nTO0bfj4LK5jqjOO/7Pl8VUcv7zjpA23
hx1csjgK7RGVtrVHe0QkP8ly+9n4aynqaP+lJfd2oP32Bz3G8vkyubRnHTjf
6rqcizjfVeMD47l/2FU9X2H0z4nfg8M9uX/CxMu+cX+y6OMPp6M/V51rWbmD
+1Njp+WJKc+aQePq90DR2SWw+diM1F47b8FeV19RU8sm8F5kuEvxbDlMcDGc
uDUpGbqfV99L3NQAz9uFW+edroR9e6Lmy2zPBZPdawafh1rQa+hSSZpTDSln
JhTrrCmCE0M1nS5IVsENS3/xYa8FIOlrMeLjmgqoz9II3exdBPNHDFA3k6qF
80vu1E1ZXw079/d3bAvOgLEH68651NaC3IOGjw68HuPRcOR/O//av3p2Jr+f
LVbXc8L7O3//fI/3O8U7v+Tjs2iPi/Nw/DrZkVU4/vs4dpXbw6ozKkXQntId
JgPRnhWK+0dy+9mIHFcltD9jg3sm2u/gAIF8vuxO85AWnK/n4HOqON8YuXdi
3D+s+erXHeif2UaLpdE/L6rUTnF/spcS933Rn7s/e5cKc38qRqb8XLO6FXR/
36vY9f4dpI1sC5E6EAXe3WcNr09rgV2Bies/rn8PeVXqi2ua34CP4dnzv8Y0
QeTsJ6lzv36AYUfYUjOpQphju2vYgu91cKg5XvzkjWLI8N585+zoCmgQzng6
2r0aFBrmLns9oAy6tpi6em/nOvKYyj2BoBhyNd/63BKrgGF16Xavm+tA1nKt
zEm5t7B+yeTapIgKGLjxdcjKNY3cz3aD/9v51yPnU9b8fhaZd1uA939PPBuI
9688VZvCx2d7ph+9jeNvFnl/HMfPtVudxO1hCmOcFqE9urXHHNGeXaUm47j9
rMKsuTfa/6pi/1W03+naVTc+X/b66al4nG/rcyaP89V2KzLm/mHstoku+ie/
bftg9E9l/j70JzuRkVyJ/pyblxKL/jRyO3l6EM9n3v62N3c4pUJqlqTki58J
cDo28HXtylYIWHPrsbhSGtyY7TxKWygXut5Pviy7qhms0l2r+0hkwNoJ4Nm7
8iPci83uej2uAYIr0xuqP2XCFf/BvZcdrYKJIw9dybrFdYhaSdPg4Gz40lvq
4sFpdeg33/92nnUuRyD6tDSLOThPCrUOyYX7/uPLa1+2gP2ncae9HUuZaeWN
KZr1OSBuNa6+1+gmuLDZ+xYfn8nXvajB8VPPJtni+P0vXRNNH9fA5At2VKM9
ddUpP7S5PaFtee7cfqb5tE8J2t/94ecptN/kUMsbPl/mPG39A5zvwBcr+uJ8
3ReWoX9YJ+vyQv9krsz9Gc/9E37OzHVcdBscPHcv+neuTsI0oVER6ZOTILHV
siP9SSvUzogZZBWxJKG52Ftj2aA8eHTSWkwtphmk5c7IFezVTkjVFRvfa34J
DPBeUudyoQF0ht22j03WTtiSyzycllfDodYm6+wOASzQun3dS29tQprQ4O/P
p9bje93R3b3m/5xPPVpT9yXUJpt9bzBc82T+2oTUi2pa2n3a4Ev6rFHfhpWx
R/fuq5t80E+IfWHRYqbJ6x2ZDls+Ppt7ysQdxz85T6UVx18zNbOR28PStq2z
RXtWqg65ivYYj2oU5/Yzyez8iWj/2K8S0mh/lNikTj5fJrThsgTOd6HkFgWc
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
B4kbJL6NeDfi3IjfIp6LOC7ik4hXIk6J+BvicYjDIV6E+BHiRohvIN6BOAc6
j6fzeTqXp/NjOk+mc2Q676TzTzr3JF6f+H3i9onvJ96fOH/irf/hr3u4a+KD
iRcmTph4VuJbiWsl/pJ4TOIwiRckfpC4QeLhiI8jLo54L+K/iPsinon4JuKa
iL8hHoc4HOJFiB8hboT4BuIdiHOg83g6n6dzeTo/pvNkOkemPgfqe6B+B+qL
oD4J6o8gfp14duLYibcm/pq4a+KDiRcmTph4VuJbiWsl/pJ4TOIwiS8k3pA4
Q+LniKcjjo74MOLFiBMjnon4JuKaiL8hHoc4HOJFiB8hboT4BuIdiHOg83g6
n6dzeeoPoX4R6hOhfhLqL6G+EuoHoP4A6gsgfp14duLYibcm/pq4a+KDiRcm
Tph0A+kI0g+U7yn/U96nvE55nvI78XbE3xF3R3wY8WLEiRHPRHwTcU3E3xCP
QxwO8SLEjxA3QnwD8Q7EOVD/DPXTUB8NncfT+Tz10VB/DvXrUJ/O/+vP+Z9+
HerToX4M6s+gvgzqx6D+DOrLoL4C6jOg/gLqK6A+A+ovID6eeHni5ImPJ16e
zg2J8ybum3hv4ryJ+6bzL9J/pAdJB5KeI31Huo50G+k40m/EUxJfSVwl8ZTE
V9K+NHGBxAkSH0hcIO2zEh9IfBvxbsS5Ed9GvBtxbsRpEbdFvBbtc9G+F/Fa
xBsRf0TcEe3XEH9E3BFxM8TRED/z//Yd/mcfgvgZ6r+ifizqw6J+Lerfor4t
6tuhPh7q36E+E+o7oX4T6ougPgnqjyCOn7h+4vmJZyW+lbhW4i+JxyQOk3hB
4geJGyS+jXg34tyIxyI+i7gs4oeIJyKOiPrNqP+M+s6oP4361ahPjfqXqJ+J
+pio34b6b6jvhvpDqF+E+kSon4H6G6ivgbhe4nyJ7yUOlbhU4lGJmySOkvhJ
4vyI+yPej7g04tSITyOOirgq4qmov4767ajPjvrxqD+P+vKoj4v6uqifi/qO
qA+J+o+oT4b6Zqhfhvo6qM+D+juob4H6GKh/gbh84vSJzyfunDh04s+JkyZu
mnhp4nqJ8yW+lzhU4lKJRyVukjhK4ieJ8yPuj3g/4tKIUyM+jfoSqU+R+hOp
j5H6GqmfkfriqE+O+uOoj4v6uqifi/qOqA+J+o+oT4b6ZqhfhvpAqC+E+kGo
z4H6HqjfgTh+4vqJ5yfunDh04s+JkyZumnhp4nqJ8yW+lzhU4lKJRyVukjhK
4ieJ8yPuj3g/6uek/k7q66T+T+oH/acPtKfPkPoOqd+Q+uKoT47646iPi/q6
qJ+L+o6oD4n6j6ivhvpsqL+G+kaoj4T6R6gvgvokqD+COH7i+onnJ+6cOHTi
z4mTJm6aeGniev/hfHv4XuJQiUslHpW4SeIoiZ+kPljqi6V+WOqbpT5a6p+l
vk3q46T+TeozpL5D6jekvjjqk6P+OOrjor4u6ueiPiXqW6J+JerDob4c6seh
PhPqO6F+E+qLoD4J6o8gjp+4fuL5iTsnDp34c+KkiZsmXpq4XuJ8ie8lDpW4
VOJRqX+Y+ompj5j6Xan/lfpeqT+T+jWpT5P6Cam/kPoKqf+N+uGoD476u6jf
i/q8qH+J+pmoj4n6c6hfh/p0qJ+E+kuor4T6H6gfgvogiNcnfp+4feLLiTcn
zpx4aOKjiYumfU/aB6X9z5RpGX8+GQlg56CvtY821kNEyqSFiy4lMtspuiLi
BZVQbvFyTz+nRhi87Hz+FtMQJmHjrxbdqxRCr8zst9SxGUrWLvHePu469FkT
NiYpKx/mF8jkOsq3wvsvWvnHfkfC7b7KZ9Mfv4JZ8kdikavSbnrW749Ewj+8
C3G5xL2s0jj0MScjj70SbX8pbd0KD/UKOqduj4bdL7WOztAuZttHBBpMbG2G
YSef9Rl8zQ9GfMlrtxhfyS4sUs4zF26C3oNMpi184c9qlwvvjc+pZm6eW5oW
lNbDkWVJQ9o64tmSqETfhwk1bKZvw/obwbWwbumxySnXXjM6b6PzNzp38/yw
UdZspADmr3z2CcrqQXLxwzOBcwKgkLlV3bhfAVd1s+wMezdBVfObkBtHE+G2
sZm2osMHUL8+/Nz4gmYoUljcNmlYBvic1PC8JJ8JJ/a0jRgxthXGQ/Cl0H05
sK2HU1nTw60Qr7LWf3Z4uHUpO+V2I/ZlaxOkqupnt4elwh7nTYOeelSxzFWf
RS1aG0BWUPJLoywSxG8pdM88VcPc1z+1uxtdB2GlFgLdUld2ddrurvc2daz9
TIm00NEaUJxlq6bWO56lj57WsT++npXNkvuWqVUNlaGPBHuD05nS08G2el+q
ILbife8X9+rhpCClb9fuLEi6tjHT/E4JuC6dL7X1aiMsDHX5uGlVAbS6vnPw
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
Rk7fGuLJ57+gOrreohj6Lj5lzuMt6w6tuMDjLVjHPvuB8XbpF9+BPD7DHK8V
m3h8BvtB/S0wPusqPmQ8noPeyaBUHs/B7Jv3jD88no/cvE6Cx38wuBxoxuM/
aMeaVmP832VVtOqMexyIPSyUSTvTAFbdGavsRavhRK9ho2IKE1jt7ewJY20b
YE+9+/GWz1XAUo9JeTsVMNVrUcY8v4CJi+5DzC9+Cjf6T4+qYLNs5mzg+QgW
iK/0wnz0ZcLPwTx/wRrZxYY8f0G52KgpmL9s3D0x38EQxaxUnu/g6YWZXzHf
Sb2Nms7zI8gJvl7l+RFq2KYKzI+nL9pp83wK4V4ZH3g+hRtX3uzEfDrad+vl
ZatT4MPxgEE3BAL4/mTUkvDEOqh7J6mVaBzL2hcFGLsL10CM4IfMhtY60LJr
8+D5mv16136W52vo3iJZj/m62lengud39riyMYrndzjiW34J8/sYmaEHuR5g
tW3FhVwPgFpS2kTUA109/O7Af/UHbUvTk+W6Aix+SvXjugKG5Gya7Mx1xVTD
46+5DoGp3n1GcR0CS3ykbqIOcXwn/JTrFtCwHK7NdQsMtw+chbrFdcjbiVzn
gLDBhTdc50CK3dFtqHP2vb42hesi2BnnsI3rImiTdQ9DXZQ0sciY6ys2fqWn
KddXMFDpZAHqqwXB0upcjzF/dahp0y4C1/ZDv9u5Hvu0QHcs129sdt6M81y/
gdVrkSDUb8WvSjZyvQeHM+DHKcagWkn1YDDXe60rXVEfQoTUtsdcH4LTo/Xn
UR+eE0q25XoSFmX1fcL1JEz0WPob9aSdd4MR159QPfWANNefENN0xA31p26I
/ECuVyG8ybw316twIeZ+y1+9ejy4ieth9vHQcz+uh+FN+5CBqIdD0r+/5PqZ
ZaaKAdfPEKTsuRz1c/XgtDdcb7N7c/u+PlCYBpXSY6VRb4t3NXlyfc4mFb6a
zPU5zJqsV4/6nPYFqH+X+nYFPf081N9zrKev58gejTxeT4Hizy3iDodz2aZh
/a2xnqJ+EOpPndpTX3cL/U//z8SefiDqA3J93jIT9cCK+OXBmI/uDZ0/CvNR
+o6gfbyOg6S33x15HceCDST7Ded1nMiIzFu87gOxJctVed3HPp6fdgrrPsnY
B6+YcSw0fX24m69ntmasijSu54TLqyv5+mcLXgSP5uufPfXqUMX1v6Fo5DNe
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
plkyf9GotNJinJWke8GG3fffbaoWrw==
     "]], {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{356.6570012944852, 294.33932786720413`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-0.9999999999999897, 0.9999999999999897}, {-0.9999999999999897,
    0.9999999999999897}, {-1., 0.3333332063491912}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.6222404085478873, 3.129840714352306, -1.125572732768889},
  ViewVertical->{
   0.13756343125521803`, -0.9068299897401003, -0.3984164555954744}]], "Output",
 CellChangeTimes->{
  3.8966967012136745`*^9, {3.8966967535246563`*^9, 3.896696769611127*^9}, 
   3.8966968000687385`*^9, {3.8966974729798284`*^9, 3.8966975149641676`*^9}},
 CellTags->"Plot3D_templates",
 CellLabel->"Out[27]=",ExpressionUUID->"5df03f68-be2b-453b-96b6-4de9c0538e23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox["v", "2"], "+", "1"}]], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "u"}], ",", 
         RowBox[{"2", "v"}], ",", 
         RowBox[{
          SuperscriptBox["u", "2"], "+", 
          SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "u"}], "]"}], 
    "]"}], "\[Wedge]", "du"}], "+", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox["v", "2"], "+", "1"}]], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "u"}], ",", 
         RowBox[{"2", "v"}], ",", 
         RowBox[{
          SuperscriptBox["u", "2"], "+", 
          SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "v"}], "]"}], 
    "]"}], "\[Wedge]", "dv"}]}]], "Input",
 CellChangeTimes->{{3.896696375784733*^9, 3.896696436914733*^9}, {
  3.8966965537504587`*^9, 3.896696572157058*^9}, {3.896696875605982*^9, 
  3.8966969043951893`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"ef54d0a4-b476-47d9-9624-24a0309f63c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", "u", " ", "v"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["u", "2"], "+", 
          SuperscriptBox["v", "2"]}], ")"}], "2"]]}], ",", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "-", 
         SuperscriptBox["v", "2"]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox["v", "2"]}], ")"}], "2"]], ",", 
     FractionBox[
      RowBox[{"4", " ", "v"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox["v", "2"]}], ")"}], "2"]]}], "}"}], "\[Wedge]", 
   "dv"}], "+", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["u", "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["v", "2"]}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox["v", "2"]}], ")"}], "2"]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", "u", " ", "v"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["u", "2"], "+", 
          SuperscriptBox["v", "2"]}], ")"}], "2"]]}], ",", 
     FractionBox[
      RowBox[{"4", " ", "u"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox["v", "2"]}], ")"}], "2"]]}], "}"}], "\[Wedge]", 
   "du"}]}]], "Output",
 CellChangeTimes->{
  3.8966964375844436`*^9, {3.8966965599325714`*^9, 3.896696572832467*^9}, {
   3.8966968778532057`*^9, 3.8966969053638062`*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"694785b2-06c8-46f8-8015-abb5774d6aa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Normalize", "[", 
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox["v", "2"], "+", "1"}]], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2", "u"}], ",", 
           RowBox[{"2", "v"}], ",", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "u"}], 
       "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox["v", "2"], "+", "1"}]], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2", "u"}], ",", 
           RowBox[{"2", "v"}], ",", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "v"}], 
       "]"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", ">", "0"}], ",", 
     RowBox[{"v", ">", "0"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8966975672688446`*^9, 3.896697638700506*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"25dd5610-cf68-4bed-ba52-dd987a584b1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "u"}], 
     RowBox[{"1", "+", 
      SuperscriptBox["u", "2"], "+", 
      SuperscriptBox["v", "2"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "v"}], 
     RowBox[{"1", "+", 
      SuperscriptBox["u", "2"], "+", 
      SuperscriptBox["v", "2"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["u", "2"], "+", 
      SuperscriptBox["v", "2"]}], 
     RowBox[{"1", "+", 
      SuperscriptBox["u", "2"], "+", 
      SuperscriptBox["v", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8966975830453987`*^9, {3.8966976147280807`*^9, 3.896697639310382*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"9c76bc78-d040-4c91-bbec-f3b1b9d1f61b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", GridBox[{
    {
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox["v", "2"], "+", "1"}]], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "u"}], ",", 
            RowBox[{"2", "v"}], ",", 
            RowBox[{
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "u"}], 
        "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox["v", "2"], "+", "1"}]], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "u"}], ",", 
            RowBox[{"2", "v"}], ",", 
            RowBox[{
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "u"}], 
        "]"}]}], "]"}], 
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox["v", "2"], "+", "1"}]], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "u"}], ",", 
            RowBox[{"2", "v"}], ",", 
            RowBox[{
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "v"}], 
        "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox["v", "2"], "+", "1"}]], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "u"}], ",", 
            RowBox[{"2", "v"}], ",", 
            RowBox[{
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "u"}], 
        "]"}]}], "]"}]},
    {
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox["v", "2"], "+", "1"}]], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "u"}], ",", 
            RowBox[{"2", "v"}], ",", 
            RowBox[{
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "u"}], 
        "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox["v", "2"], "+", "1"}]], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "u"}], ",", 
            RowBox[{"2", "v"}], ",", 
            RowBox[{
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "v"}], 
        "]"}]}], "]"}], 
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox["v", "2"], "+", "1"}]], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "u"}], ",", 
            RowBox[{"2", "v"}], ",", 
            RowBox[{
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "v"}], 
        "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox["v", "2"], "+", "1"}]], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "u"}], ",", 
            RowBox[{"2", "v"}], ",", 
            RowBox[{
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"], "-", "1"}]}], "}"}]}], ",", "v"}], 
        "]"}]}], "]"}]}
   }], "]"}]], "Input",
 CellChangeTimes->{{3.8966982863474836`*^9, 3.8966983452382193`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"55c98839-d69f-46b4-a1a6-f9ff1064d66b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["4", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox["v", "2"]}], ")"}], "2"]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["4", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox["v", "2"]}], ")"}], "2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8966983482008605`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"4f14a5b5-e606-405b-b6ca-07d55cc5e956"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "u"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox["v", "2"]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "v"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox["v", "2"]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox["v", "2"]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox["v", "2"]}]]}]}], "}"}], ",", "u"}], "]"}], 
    "\[Wedge]", 
    RowBox[{"\[DifferentialD]", "u"}]}], "+", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "u"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox["v", "2"]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "v"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox["v", "2"]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox["v", "2"]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox["v", "2"]}]]}]}], "}"}], ",", "v"}], "]"}], 
    "\[Wedge]", 
    RowBox[{"\[DifferentialD]", "v"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8966985186954327`*^9, 3.8966985224905653`*^9}, 
   3.8966985539820604`*^9, {3.896698857514597*^9, 3.896698912554682*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"f6103666-3208-4168-bf8a-e267b477af24"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", "u", " ", "v"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox["v", "2"]}], ")"}], "2"]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["u", "2"], "-", 
          SuperscriptBox["v", "2"]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["u", "2"], "+", 
          SuperscriptBox["v", "2"]}], ")"}], "2"]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", "v"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["u", "2"], "+", 
          SuperscriptBox["v", "2"]}], ")"}], "2"]]}]}], "}"}], "\[Wedge]", 
   RowBox[{"\[DifferentialD]", "v"}]}], "+", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["u", "2"], "-", 
         SuperscriptBox["v", "2"]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox["v", "2"]}], ")"}], "2"]], ",", 
     FractionBox[
      RowBox[{"4", " ", "u", " ", "v"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox["v", "2"]}], ")"}], "2"]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", "u"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["u", "2"], "+", 
          SuperscriptBox["v", "2"]}], ")"}], "2"]]}]}], "}"}], "\[Wedge]", 
   RowBox[{"\[DifferentialD]", "u"}]}]}]], "Output",
 CellChangeTimes->{3.896698523195866*^9, 3.8966989131775885`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"edcc82cb-d79b-44db-bd08-6a60d61ba951"]
}, Open  ]],

Cell[TextData[StyleBox["3.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8966994430954423`*^9, 
  3.896699445210836*^9}},ExpressionUUID->"835debd8-61d7-44b5-9cab-\
b21931cc35d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"torus", "[", 
   RowBox[{"\[Phi]_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"R", "+", 
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"R", "+", 
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{"r", " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8966995392871513`*^9, 3.8966996139386396`*^9}, {
  3.896699705389141*^9, 3.8966997092689095`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"4a245ba6-760c-40dc-b985-2b8575781e62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"torus", "[", 
     RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", "->", "2"}], ",", 
      RowBox[{"r", "->", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8966994874681463`*^9, 3.896699557423537*^9}, {
  3.896699620534927*^9, 3.896699677178651*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"ed231080-abd5-494c-b878-f58f1dc49335"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
+qI4r42Ec86C4nxfLc53xnmxeTzAOEeYxw+MsyPiDcKFcA7D/FGYTzgvgvwg
yCecc0CfFdCH5O2E/uegP+G8xzzeYJxPAJ92wIdwlvEknJsg3osT8R7jHFZA
xIe9RHzIOD9FPKmIeJJxvoL4c6iIPxnn3ohX64p4lXEOQnwbLeJbxjkgRcTD
d0U8zDifRfxM9hPOfilm8TbjHAj5UZBPOPeAPrWgD+fd0H8Q9KfnPIa9TWEv
+w3g0wP4EM4ynoTzCOQvHiJ/YZzbI99xE/kO4zwY+VFekR8xznmRTw0U+RT7
jYLIv5qK/Itxno98rZrI1xjnycjvmov8jnHuhXyQ7CScJ2K+AfMJ53mSfMI5
P/RpAn0I51zQvy/0J5wHwN48sJee3xb4TAA+hLOMJ+GcHfl4FZGP8znYBfm7
k8jf+RwcjHy/j8j3+RxcjfrANFEf+HsOop4QJOoJjPN+1B9yl0yvPzDOdVGv
KJI7vV7BOD9GfYPsIZxrY34hzCecSb495BPOS6HPR+hDOK+E/hOhP+E8EPb2
hr2Ecyfg0xL4kF4ynoQz1Zfuxybq9SUfuV7X9UF3O3//Cz5yva7yzj16/cpH
rtedf5avc97rp33kel0uj9d6fcxHrtetquit19N85Hrd9bjTev3NR67Xkd5y
ve4a5sv1upWQL9frckAfuV53BvrL9bqKsFeu13UGPnK9jvAkfWeNuO4aWiez
oXzaWavk6qHKlH5L2m/W/GCLIy+nuJy1MfTfXL1/ytPPikfDddO0814JL7Iy
27idVoY7LUtuHX0ileff9Dn2Uc8z3Vvub3hK80+0XsNLqWrNZraGpiV3LK0V
f96R5IzteH+4V7KV4UaVRScudg9WXpa3iNL5Oil6YkBTV0vDu0Pf17QxJvNz
cx17GLZtRibD7Dztu83vdtaR5l8+8dpjZ+0/ytGzYfk2z36viPg1Rik78PZt
7f8o/34LmtCx+ElHGj870mfi73G/lLdbR7y72sFPuVlm6hJdjr934N1n/yQp
RV1cW3ptOeRI47mjHacssUhQGsY+217D5YXiEFvtqu6/HJcMq+c1N0HJ4+/4
p1HvfY40XmVZ5vlvfscoysw1CcNqP1GcNobsXq/h03b1xbJ5Z0UrtuUPDUns
EMFyYnuMSj7jGquE9XUP8wr0cqT5spymYly9feTToV7ekYrrqrVrTk8OYfmy
HJov699YPPd/5NB82S6afwa4vQFuRoGPKttF8/2AZxHgSfPPY70Omq+XWhLr
ddd8vdTR4Mk18CRArLv6D/gwE3ygcQN42we89Rb8UYeAh43BQxqfCf6XA//3
Cz6rE8BDf/CQ5oeFf048+DizocOLLp9cXS860nyZ/7S/wrBfbmO/0Py7K8IC
LMpZGXa1i32txa1cB9h0qNImi0OJSvvFP0a3m2hjoP31aXRTRa8v/OvrV2uS
di7R/rL8nu9Rw0lpShnLl0NOt/7F+2hq4ZYjXndKUJqGrI1OzW5toH0U2jTk
2S3rJOW7l0WXvQkJvF+mjLP96LwtQZmTQ3Evq8TwvihWemQOvZ7yPuuh1Vr8
zvUEl5idTnr9pdHLalFavM/1hMCKif18I4OU/Z71rsxdF8c8n7AuJe2W9t+R
HuQnJwyoOOD3tPfK9ioB/v+6RzGfe0N+Q8gn/ynPJ95Ohv6zoT/xTdaH+BkM
HBLMcVDTEgWepYAn8erf2dN8z4+0MEyKWj82Qq8rw9/exjruwDqSv50M/BsD
f+KPvI7EE1r3dlh34snFpcXK63WQic/vuuvnJ/Hk+eZKGv8O+gRHCj4ST9b+
Yxy5zjdR6VLUeEY/V4knhX1+l5seGqsEpCU//rHK0kA86b5girYfDvg4lhH7
g9bnVWROK/XOV+XnoasXr79KYZ5YX1xya51PqGJRqOnH1Zt+ME9yfzuxbG/R
z0oRj8rL9TiCeHJ1XoWwa0s+Kg/PXC5+RIs7iCejPxfT/MtGn/dLhb8hntwZ
1aO+qv170o948jWsh+bX1vp06CX8HPHkCuQ/gHziiTyfeJIJ+v8pKPQnnsj6
EE9eAIcEcxzUgsDTD3gST3YMLNlOr2e1mJ0yT4+DiCfnsY4TsI5cpwX+TYA/
8UReR+LJM6x7ENadeHKiwrFs/v7ePp1FXYd50jTW3s/yUKI6ybJ+MVN/cm1p
Ky0OOOgzOU3EBcSTrhUra/50n8/J48K/0jrcel5/i1+nBHVB77fepv4ku+/R
CbpejwcL/008+ZHcRPP723y+HhLnAPFkZXVrLe7Z7BN5XsRBxJPI0TW1OGm9
zwxRD2OevN/tOvxVZJAae3LFTFN/MvZcP03ftT70POJJgSwNiqRMe6+OrHBy
rKk/iYD86ZBPPJHnE0++Q/8v0J94IutDPMkCHB6Y46B2Bp7HgSfxpHDdzFrc
tt/HUtTnmCfHsI4dsY7EEyPwnwv8iSfyOhJPHLDuE7HuxJPZ59MG6fF37fKJ
zUz9yQH/FrO0c8p4JuzL3FEmcd1wm8En9fqU9dteQ039ycEslarPCI1VZ8we
6G7qT+YX/2ZwdLU01uobu6y1Sfw29m2T88Y7X9Wj3jU6mvqTG1YL8m/wCVUt
igxaY+pPfHIuOKPX4yKe11dM/Ukz9663b2h5i38n32OHTfzJ0F6X3mlxiDpw
b9W5CSbxlXv/hRH6OpNc4klwm+Bmvb0jVZfyUx6dMomjFMh/DfnEE3k+8eQ6
9P9TWOhPPJH1IZ6MBA6HzHFQDwDPacCT4xzls6ueRw3vN6axqT+ZiXWsiXUk
nswB/tWAP/FEXkfiyX6s+ymsO/GkTvW3rfR8OKfT2TsrTOKTBzs912rxkvHB
54+tf5nkCxfqRZ7S82QlvGWBiSbxyYFN4QsbTUpTy3pvnHvKJD5Z1qroDi1O
M/ZfevFZkkl+sXZPcdfb1klqSq/dm/eYxCd9Nx/p1mFbgpr1SEPXMibxydjO
T6bodYFak3uvOGcSn9wPu/hVrz86Xy9b3DQ+uWYZvlmLh9XZixb0r2YSz9dJ
qL9Fx5X+mXgS2yH1ghaHq2WN/WsONonn70J+e8gnnsjziSd9oH9m6E88kfUh
nqwGDknmOKh7gWdp4Ek8WdE6rZ5e12h8dOrUcJP4pBbWMQfWkXiyGPj3Af7E
E3kdiSf3se73se7Ek0k1Ij7q9akgl38Xlj8c8j88uSnmq8SThcnBtnrd6svY
r9OPm+SJn364LtPifGOlNvcmnjfJB4knPYWeKvHkSLfJT7U8Qh0e4zR6vUne
d2Po1Z1anqIW9tudfMkkv/sz4pmtXqdTB+x6PWWHL/Nkg7K5lF7Xa+4+sMjh
Ds/+hydTxbowL+Z1rpZVz7+JBzJPioh153+/HvINkC/zhOazP4H+haC/zBPS
h3jiDRwGm+OgBgHPCsCTeHJ//bteep2xqbGyXc+Tn5gnbljHj1hHmSfdgT/x
RF5HmSdGrLvMkzdCPtfHvOF/Tgr/8z88CRHyVZknZYRdKvFkAfxedeH3/ocn
/QQ+qsyTPAJnVebJFcETVeZJQ7GOXGdzhZ/vJ/z8//CE1pV48hnnSE9xjvwP
TxpAPvFEni/zJDf0J57I+sg86W2OA/OkFPCUedJA8ESVeRKAdSSezAP+lYG/
zBNaR+IJrftxrDvxpC78VXbhr5gnBvN4xkg8uQh/5SD8FfPkkLmfZJ7cRRw1
X8RRRuLJevjb38LfMk/6w2/bCL/NPBmHc6e6OHeYJ//iXGgnzgXmSSDixhgR
NzJP6uHcoXUinhRBXDpCxKXMEzrX2kA+8USeTzzpB/2toT/nxZI+9Hx34PDT
HAeVzvESwJN4shLnTgNx7jBPamMds2EdiSeUR8wB/sQTeR2JJwrW3Q3rTjyZ
h/inloh/uK+RVP30Z5O8mHkyEvFPJhH/cH/kCOKu6SLuMhJP8hiDl5nkxcwT
N8RvR0T8xjwxmseBzJObiGPDRRzLPGmFONNPxJnMkw73+ls0/puHMk82II6l
9SOeZG3hFmGS5zJPWkL+K8gnnsjziScq9E+D/vQcWR/iCcXzB81xUA+Zx7FG
4ok94thhIo7l/sscrGMNrCPxJBfwR17MPJHXkXjyC+uOvJh5Em5XMbtJXsw8
WYx6SydRb2Ge7B397I9JPsU8uXF5VHeTvJh54oo6TzNR52GeNLa+PNEkL2ae
zG3q38okL2aeBHqPG2eSFzNPXlt3sTPJi5knL1HXOijqWswTr5BRR03yYuaJ
C+pme0TdjHnyCvKRFzNP5PnEkznQH3kx80TWh3hSHzg8MMdBvQY8kRczT7yO
DGxtkhf/7YdiHZEX/+07A39H4E88kdeReLII694R6048OYj6zFRRn2GeBKJ+
6y/qtxyfzEN9poeozzBPsqMu9E7UhZgnY1BPjhL1ZI5PfFBfShX1JeZJwgVR
p7IRdTbmSSbU2UqIOhvzZB/qYM9FHYx50hT1+fyiPs88OYk6G+FOPLmCvsBk
0RdgnuyF/GeQTzyR5xNP4qG/NfQnnsj6EE+uAYckcxxUO+D5BniSvmtQZ2st
6mzMkwNYxylYR+LJSOAfCfyJJ/I6Ek8+Yt39sO7Ekxuo954W9V6OT2agj9BW
9BGYJ29R730v6r0cn3xHnbmOqDNzfNIM/Yt5on/BPHmHerXV7vR6NfNkLOre
60Xdm3mSH3X7aFG3Z550RF29tairM0/s0SfqIfpEzJPhqNsTXsSTiuhPTRD9
KeZJB8h3gnziiTyfeDIG+q+D/sQTWR/iiT9wsDDHQY0HnrWAJ/HkFur2i0Xd
nuOT61jHE1hH4okj8J8N/MlueR2JJ9Ox7m2w7sST0Ns2l/X7uC5vm1apZJLv
hKN/5L7CX+8f+RBPfNA/Oi36R8wT6n+9Ff0v5gn1VXdWKqCdk+d9iCcX0F97
I/przBPqn1aaeVnvl/mQnNPo6/0RfT3mD/VPC1/a7Nax+Emus244HBGs32Ou
9aZzv+km+RH1T4eXTtD7fT4kp/PDYtb6fWjfw9nLHjfJm6jPmNz7uN5n9CG+
lTu6zjf9vgNw5Pwa/c3ah1uFewV6+RDfOkH+C8jn/FqaT3w7BXvTYC/xTdaH
+57A87U5ntzfHAZ7Sc5IrFcA1ot4SP3N/OZ4qlPanamr3+dOvu82ubdJnkX9
zQpYL5LzGbzqDV4Rb6m/6QE+EG9lXnFfEjxcAx5yvITxjuhvEj8j8NwG4rlc
5/Hx6fGj7UQbg3/uZdOttHOV5s+AXR+FXXyf+WeuBQv1+nX7yjWr+mvnNvE2
dkrpR/p992s1c973PxjI95zHdOrtpd+PPzB9/IjO+nsJuKexGTzMJXjI9Zyu
4MMewQeu5+ytf9ZFr9fHvdkdqeU9XPerCL6R3nyPsXShBno/YGUfnyQtr+K6
XxfI94J84ps8n/i2CXrmhJ5030PWh+vDsHcf7KV7IFHA5wLwoXsg04Dze+BM
/AnDetXDehFPvgP/tsCfeHID6+iHdSQ+VK73PG7kiVQlqU6ps/p5SDg9hF+d
in4ore+Ks1GZ9LpzvnqVpjpq5y2tb8C+xPX6PfviLdI6RlT5wet7x7WmvX4v
f3HB0O59rsXx+lr2n5BNr5t/u9qgQT4tXqD12hkfNlqvv3fdGrS2txZ30LrI
44R/UZyD79C/Jvxl+YT/LeizCPoQ/r7QvzD0J/yXwt48sJfwrCThRnh+eDXl
y4/qoYrV+TX79HOD8PREPNMKfUPCs+mc3yt+Pf2svLW/eVw/lwjP9qPqlDv2
LlpptbhxnH4Pi/AcNWZ18MsTEUrwj8vu+r0twrPmw95KVZcXSnLWJt76uUp4
1h58r+PA2k+UyjVmvNDPZ8JTHuf7JIg/C6PPS3jK8gnPEdDnI/QhPJ2gf3Po
T3g2gb3+sJfwfA/cLIEb4bkmro13knbutlp0fJYpnkXRX8uE/hrhOcp9Uv5k
7VxPmz59uSmeN99u6pT3+h6fmuIePeMZcMWmxZQ7O3xqiXv3jOerRodnV9fi
knG/Ni4xxXNBse/2Q7X4Jnb0oh2meMrjhOcK9EMj0A8lPGX5hOdr6FMd+hCe
KvSvBv0JT1fYmwx7Cc/VwK0lcCM8V221yabHu+1muTY33e+5kL+PQB+K8Gxj
lZBVj6e/257Kbrrfs1w5kVm/F2hTrewlU37apI4c+upEhGr0elbTlJ/9QyJj
9Hplzfj6C/Ka7PeY3pZV9bwi2+/gxF4m+10eJzxvmNdbGE9ZPuGZCfrcgD6E
pxX0t4L+hGcr2BsPewnPlRJuhOeP5vlb6nnmrMe76lqanI+rUDdrin4N4fnN
q+5DPY8tN61p2muT83HA19AG+n3WzGMOzQ038Z9en89t1e+/bhky84SLif90
Kj9wu56Hvx5WLdjX5LzrVrnFPj2fz37+lEOyybkmj3N8jjpnTfTXCE9ZPuHp
CX02Qx/C0wX6Z4L+hOcX2Fsa9hKe34HbTODG/Pwi6jtds7jO2mK46kB4/ot6
tYK+BuH5HvWjKS6DWvdfc9mB8Fzu/y1Cv4e9YXTIWV+TeKOsX9oT/d7214su
ZTuYxBuuy0T969eFC18+zPd2IDxvoo7WvmnClXEF9jkQnvI44ZmG/oIP+lCE
pyyf8CwFfSKgD+G5FPqvgf6E5xvYOxH2Mj+BWxfgRnj+BM7TBc6qjGcj1P8J
zyjz9VJlPJcLfVQZz89Cf1Xmp6/gD+eb3cHDLIKHnFfK4zKel9GvkflJ8mU8
g6CPjOci6C/zswTsJTxpX08DbnwewQ+0FX6A64qrzfuzjGc7+JME4U+4fjgI
+8VG7BfGc4/5/mI8B8C/VRf+jfGMhZ/MLPwk4ymPE57UT6+GvgbhKcsnPMn/
bIQ+hGc/6G8J/QlPJ9gbB3v5PAJubYAb4ellfr4znnlwHrminkx4zjQ/3xnP
7PDn1sKf8/sjWeH/VeH/Gc9P5ucv4+mBczxGnOOMpzxOeBpxHoWh/k94yvIJ
T1vocx368Hs/0N8S+hOe083Pd8Zzl/n5zniqiKMyiTiK8dyDuiviJcazNOKx
dyIeYzz/PXqps0m8xHiWmxPQ0iReYjwLIj5MEfEh45kVcWZVEWcynvI44fkR
dXLES4ynLJ/wLAN9EC8xnvegP+IlxrME7A2AvYSnah63M56FEedb1E2P8xlP
d8TzbVGfZH4iXygq8gXGsw7i4TYiHmY8eyJ+DhPxM+OZ2E/kLz9F/sJ4rkce
1E/kQX/7y9I44WmFeL446smEpyyf8OwGfUKgD+FZHfo7QX/CcyrsLQR7Cc9C
wO2PyI8Yz8vIQ2NFHsrn0R3km8tQxyM845HPDhH5LJ9HT5CvVRX5GvvPa8jv
1on8jvH0RD5u8zY9H2c8XyGvPyby+r99E2mc8MyHfDMKdVfCU5ZPeF6BPu7Q
h/B8AP0rQn/CMwb2DoK9hOcl4BYD3AhPqg+kor5EuMWgnhAj6gmMD9Ufnor6
A+OzHnWMmqj7kV3DMf8R5pP+3yD/C+ST/i9nR1fd+DizocaL0LO3J79W6m9s
NPrakeuKPO4pxtXnGJ8txlWaL4/T/HEuD/INeJPZ8KHqsXXO81/z/aLJRTz6
lUjIbEgqkVLbc9VFR5pP4/1PLaqjjfuQ/LGQU7lauhyum8lyaL78XJovy5H1
oeeyPm4T+xXMY2MILbB2UlvnRKVRDceqIXMDlPZXKlsVXZzJMGbHwcHZHsUr
W9u1DvPaE6acCnicf25VS0O9suW3zFoVq9zc7Jtl7PoopVwG77+UKv2lkH7v
0PV5F/ebd77yvakaTbZVXR6UpOxZX/qVRd/Djreueh0fo8mpc23uP/M6/1SU
dc6/3KeEKTReq/+US6dPJSq3igQ37jBjv6NSP7yJrs/TUftzP2wQp4wrttPe
s+4ex3yBmSd80vTPOT909jrbGKXIyFLfgoI/KPZiXJ0+oW0nw/545Uyp71PH
JwQrjkKOWhPPdcBzjeK5alHoP8Rcf3XB5hy1r+fMZPg5sWS2p7FnHO8LHNTj
wKc28KHxsg9OzKxw2MZwbojd5wpDzjvuE3iqjXPtDSw8LLNhmU2eVRbWFx37
CfzVSTYOZ7JVSVXsH+Y8fbqtlYHWJbx33nsTLZOVoLULx3pEWxhoXdYu3b4g
6s5P5VV4694tnqbyurw6O76+fp/v5bMmZ25bJzH+Np7JcV1LxyqZa/S1b9kk
kXFWr/3xHTMjVAnv+3uG87cvjNvpdhtn7noUqYTHZPPuWTWWccsEOdaQQ7i9
wHOfmj9XXQ09n0FPwsfu37CjES9ClD/N4jf/emLL9hYeUX7pTafPyuVZRw6V
L2bD9l7JOrDegJ9Bys6GpyOGbrEykL3j7aZvXjv7vZKtbPNIvY5O9rbe5XJv
UBZ/Zc2evNncGiexvb8cvSt7HHyqnG9YKs7p31i298L6rI47Rr1UPtt6eH+p
nMj2toKcVZBD9o7Gc23Nn6tegp4e0JPszZvjhsvXFyFq2yY3x5naG+mby/KO
k3ZetRu02NTedYl5hg/6GaSeam58YGrvixf5DRtnv1fXLjxwztTeCT1q+AzN
4q/2b33l4wQTeye7PCrmefCpetSizStTeyNbT9nlOeqlGlU6ZpGpvWMhpw/k
kL1P8NxV5s9V3aHncehJ9pacu++OXZVU9Wag0tyUz8Xf5Lw7yTJZHen72taU
zwW72A6OvvNTDfXr6N3chM82Kc/i9XtCURMsi5jyOc/QLqu6lY5VLRYEbmth
wufNiZe8xs4IVd8u6uzf3oTPh9xKjvN6pOXBB6NamPLZHnLS5gs5ZK8Vnhtp
/lw1H/QMgp5kb60R7w9rftX407lmvTYmftWx89c2ml81Vnd63iSriV8d/jh3
D81vGNuuW7Zxpolf9aowdZHenw79VO6dauI/Az9mHqr5K9XjQ53ta0z8ZOy1
4d80v6dGv44oGGji9/44f9yo+T21XVTb/uNM/N57yNkKOWTvdjw32Py56lDo
6QQ9yV7f3Ol+zLj1p39K8ydXHMjeNQ/T/Z7x/cDeytrPlxzI3t1b0/2nMXex
mEuHbS84kL2nh4h7G0Vd39mXP3jGgezN7ph+Xqg9ko4HO60+7kD2XhyT7v/V
PMfu7c6dts+B7J01MP28UF1tj8TMfnHQgezNCjldIYfsPYbnFjZ/ruoJPf+B
nmRvbaxvolhfVV7fKmJ9VbLXFbi1FripZO9uc5y5fxqEddki1kUle+Owvl/E
+qry+rYR66uSvR8gZyPkkL078NwP5s/l9W0JPcne0ti/qti/RrK3BPbvCLF/
jWRvYeyLT2JfsL222EdfxT5ie/Oa7zu2dwv2b4DYv2zvYezf4WL/sr25IScF
csjeTHhuuPlz1fzQ8yP0JHvLmftntjfJ3D+zvV7weyeF3zOSvZHwk+7CT7K9
i+FX+wm/yvaugX8+Ivwz2/vL3D+zvQsgxwVyyN5QPHel+XPVndDzGPQke6Mf
iPPXonn6+cv2/nEV5+9Vcf6yvftwrnmKc43tdcI5mF2cg2xvBZyba8W5yfY+
wfl7QZy/bO9OnL8h4vxle8tCzmrIIXub47lZzJ+r7oae26En2TsE8VVBEV+x
vQGIr8JEfMX2LkTc8lHELcznfxHnvBNxDtubslPERf+IuIjtPYf4Kk7EV2zv
XsRXUSK+Ynt/Q44d5JC99/Bcf/PnqnOh51voSfaOQ5yfKuJ89letEOcvFHE+
+6ujiGPbijiW7S2EeHi5iIfZ3mqIn11E/Mz2ZkYcrog4nO2dhDj8nojD2d7K
kNMLcsjevHjuYvPnqoegpxP0JHsdEFcPnbhVj6t9yN7yiMOVXEv1ONyH7F2M
eH7JqtV6PO9D9lJ+0e9tsp5f+JD+NZGPdO7Ro4mWj/iQ/lWR11RPPKfnNT6k
/8TMT1zbetoYCka3+V0oPI7jgSIXLM9nmWhtKLN8UubZnt84HqhfznK+TRcr
Q/judeVXFwnleKBVphNZVzyPUbZ7NV9Yse9bPt8t5tTps3hZgvK96imrJt3f
8fkedWbp7N0ffimdpo7/vefQez7f9w/ccqlD1T/Kth6dS6a4WXI81tCx35pd
e9KUbW10PdJYn7FP5/6xH5eitOk/pkatEUmsz4DH7Rc2jg9THB1XhLQ8Ecn6
TEs4mtWhWZSS2idf96baX9In8GSJvcvaJyjbontfbuIYx/r0aPfYNzAsUnmy
xsYyz6y/8bDNyfgx0zVciud7ZJ1Vw4n0WW13Jn5DNU3+iR0X23pacjx8vNCj
HFG5fJXNw5R5S1f/jW8njt64voGGy/JMAw7pOJE+hl6/Amo+/awEVdrVtGXE
T9bn3dSfrQb0DlR7tKp4bX7OzKzP7A5dI9OG+6p3tn+t2H7p3/h8Vc3VC24V
uqk6D2sW+0+WTKzPla/frY/mvq8W9X6TtCjprz5jn9s1nrj8lto3X1OXYWv/
xtsX73UoYd/gklrY6WXDIn5/4+3KmwI6tsudrJ584/z5SJ5MrM96v+zOPe1+
qren95k7oKcV6xO7qISrv1u8atWn1sl3Jy1YnzyJJ+52jfqsPrnR/dv+fN9Y
n/Zn8nsmWoWpU86+K5q6OI71adNvne3LLJHqi6rrssd5/2B9Kq5tmSt6hrUx
cfuHZsX3/mA+7xh47bCmhzG85O+bPex+Mn/8PWe1n1jgj9poSYEOy3L+YP5M
mJj92/Yy0er7pCERzQ8HsT79ots5aXqoFrnqFtT0Yn2mn1h1/3zh7+qYwpcS
A+KjWB9j2gnDqT6ZjbMXvFEKpNxhfTp5ZK+trZPRo3mFwSnDfVmfbd3vFn74
0Mr4vc9y5/yr37A+b5ZtDntbM07N2rTWgTMhJ1mfkr2/D9bWSb2bPerp+OW3
WB/bkedLRy9KUks+zVl4e88XrE+JmXWOavvd+KHsm/MFw+PY325p/yFS2+/G
qJ/3d8/w/Mb+dsHt6we1/W5s+yY0bUWRUPa3e0+HjdX2uxqyvOK+8n3fsv+8
W9XbXeOxWsDK82LD7u/Yf9ZoOe2Mtt/VLOWW5PA69J795/PxDj4dq/5RNxVI
PJrsZsnn3YK4X5O0fa6e9zj6R9v3rM/Bend8co9LUafHD3apOSKJ9fn1dm/z
JvFh6tHDNxto+531uRMSF6rtdzVq7NPp+l9er9zfSy9vr+nZNlcFbb+zPu8u
3Z7xKSxSHbG1xfPcs/7GG66GXb4zNVzCF8Q81XEifTYOL2CzuVqUOv/7ifna
fud4Y2KVwhYxuXzVJyv69tH2O+vT28P7fSMNl6/dv03WcSJ9Yj3TDLWfflYL
RmRPaBHxk/XZdD4woHfvQCXno8MB2n5nfcbUTwlI0nhzbEu1JjqPSJ8Iq5ur
rxS6qUxd2+GXtt9ZnwEdptkezH1f8U9Zn3Nx0l99vrV+OnSsxpub20+M1nnE
+fXn8z+sG1xSdtmrLbT9zvqsW7a+RtvcyYpVaoO2R/NkYn2CR4U30PfVVKei
r/R9Rvocevl5tJ9bvDKkn1eCtt9ZH9839eO7RH1WnPcPXHQg3zfWZ+S4LpsT
tH3VrdLVCfo+I30CbOafeZ4lUimX79lobb+zPhd3574WNcPa4HG30rQSe38w
n4PXJnXR/U7W1SX8dD9E+rzLNNDbrcAf5XZY7QbLc/5g/lxvvme8tt+Vqj27
PmpxOIj1cZ86NiFF8zuTuySV+K75IdJn0IqHPbX9rsyYu7z22/go1qdT8JP6
2n43fHw7umnplDusj+2OhyV0v7yv19yJlq6+rM/Y61ettP1uMDxceLnw6jes
z9UdnQK1/a4kLnB6eTPkJOsz+cWSzrpfdt5U2Xuy5qdJn6XV7a20/a5k/jy2
sGfPF/+jz16hD/ufzNBniNCH/c8N4LlQ4KnI8ckF1Alp/jjon1voz/4qHPj/
WJWOvyLHM79Rn+TzCPdL90u/X0S/a3ROGl8FewM+pdvLdYYYxBX9EFfQ+FTg
ll3gplCd1hLxyQ/EJzRO+K8Q+CtUv5XjHBrfBJ4METxhOdMRb6Qh3shIPq3v
PfCwiOAhy5fjGRqX68wkZwrszQZ7iSeyfDluvIk6Ns1fDpwDgTP7Jdg7GPbK
caYX6udchwRPrMATrlcgnvyKeJLGbcDPfuAn1aULSXEpjXcAz1eA51SvHo/4
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
nueg/2noT3iugL2jYC/hOR743AM+hOeuD9lCNF4a94W18tX9KOFJ47vFOP/O
WEXg/4/An79T0wA8dxQ85/HvY/Z4V9ee93jvl17682ldtm95+a2ppt/uqh4t
dX1pXaqMujlohmZPzK6N/XX7aF1GpNR2bafZb30jLVLHg9Zlv0OxP04aXrv2
Tqyl40frYrO7Wt9HGr5vUpfV0vGmdQk+P3Z9sLYeXNfDumSS5tO6kHxPyOff
qYM+ltCH1qUC9P8G/WldtsFeL9hL65IAfB4CH1qX5GXiXLsjzjX+jszEeeOf
ZNf2w5xX95bp+4PwPNTwaWd9//T9nXWPvp8Iz5Tad38U1vbbiwl3chfV9h/h
6fBx52J9f174eN013X8AT6vHdlP0/Xz0zitffX8TnqsG1i+i7//sy/LVbaX5
A8KzfOVLYbv03wtB/EF4rsR8O8wnPC0h/wjkE56Noc856EN4/oL+j6E/4XkA
9vaGvfw9QeAzG/gQnikDRPzgIuIHxrPSvZ0JMZq/Hh+auLKm5r8Jz0qLgyO/
aP7dZb7vPt3fE56rml/JpZ8HNUoEOc3WzgfC8+6n3BP08+NerUuXnLXzhPAs
NtTwUj9vxvT0eaifP4RnSullofr5tGxHqUZPtfOK8GzVfsk8/TzjuA14JmP+
EswnPItK8gnPW9DnDvQhPJdD/8rQn/CsAHt7wV7CsyLwGQd8CM99iNP8RZzG
v2e46nOn15YXMhnKdW0eMbZbrLJq277RHd6HKy0qngy1emVhOPJrX6ObwV+V
IN/2fq/VaKV8oziXVfmTlRORn9bccQtTekc/7dhsTYxSvd/bfDutvisPHhQ4
9++IYCW7X/W43IW+KHOuTUgduidWmVx3o23jNe+UkHL9HivfPyo9Utus7+ap
5SWPx7a+uTxAOZuw6UaLC8eVAo9H/3l5MUHJGVO/RXT3IOXkubwPnd+Hq5s6
XL73fEaS8iGncs+2cKgyImbbJk0fNbrGycLlbSwMMwucdcu0+ouSvWSV6Zo+
qldqnXvFcmYyLBtQq0/aphil7DnPOXkKfVF7pgQNa2SwMVza4Lz59Y44Jcii
5KRm3z+qzg27betZydbwpP4T/4S+8UrokaP3ul44rnapvP5m3f6/Fc9h3b/W
0/4WbXDSon3daCXP7PhSPfp9V+Kt6ubpqf2tuuPD/LmPY5QrFwamndoZq1T4
mXDltPb3Q6Y3NfoX/KokRg7NNqfgF6VgUolac7W/owacSx1hG6zMHBFXItvd
MGVAeNFSdtpfl9N3os8dua4M/Tb1mm1IvNIr5sX6zNrfao8KnWlXN1qtE/uq
Z1jIT2WI97lh4drfUQH+O7Tnqn0aRy1b7Z2iLK8/8+Ea7e+Rf7Kd1p6rBoVO
eTKvsOZ/LHsunq/9DRt26d+RtsHq1/jvLn1jLAyl6jQp1E/7S78/qb507134
abjSytNQqun1FCU5vPGdogkxSrPbY4ZO3vBJOd0ruU/UqB9KnlzVh7+y/Kbc
tFv2tJ3VB8Wi6NO3lRfFKZ9uRC2eueSTMjN0n990vwDlqP2BCn2To5TFbbYE
+LvdVX5/ajL2cLVIpe6jVgt3DEtTUqffeKHJV+eXvTq20+hoZd2DPZWn9rUy
jMx87Y0mX802s9itjk3jlMudG87u+czaYFg5oc2sJZ/UGRZ2m1q0iVfmlvao
t8Xe1pDN/ubad2531VKb7uW2upDJeGzjHHVMt1h1Nfj8T7PKhTO9sjB673js
qAZruIDP1wqPO6nxWZ3e+UfiLbcwlfi8Yd7gXhqf1aqdzk57MCJYJT4/etWu
1rA9sWqVjU/tG655pxKfS6Tu+6bxWbWqsXilujxAJT5PKx/u4HsxQd3yskfh
qO5BKvHZ4XWl/C9mJKkffA872RQOVYnPahFvZ43PRt/8tddarv6iEp/LtfW2
LJ4zk7FS08pFUzbFqMTnvc4VD2l8Nl6s0rr7qx1xKvF525aJ7zU+Gx062q+K
7xuvEp87puZeofFYXbX5RVn9L/HZz+/BLY3P6uoj/Sfpf6uAz9sbjJut8Vgt
Pj3MQf9LfH7VLvipxme16M59Y/W/xGcLn6GPND6r/Tcdnar/JT7faHmurcZj
Nf/2zVb6X+LzQdUnm8ZjdUvAv6c1XqvE55whuwdoPFb/rLsXr/FaJT4H7L/g
pPHY2LFVvmz6X+KzxZSZbzQ+G6POXdqu/yU+3/drk7Xo03C11/K99x2up6jE
58ROieenbPikzlmTJ5/GZ9UefHY9/eaDs9UH9fPb2gc0PqvE57XryuyY6Reg
zjlf6mGf5Ch1MvhcYV5UvaPVItWZ1WaX1visEp+fN/Da0mW0tp6vBsZN6Wtl
JD6/D5qX3KlpnHqkQJfGGp+NxOfWFQcHtmyjrVPg7djN9rZG4rPslzaIdVRc
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
jQ==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
       None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnHUcFsXXxXdntkDsAhtF7EbFFsXCxu5uFAvFREHEQEFBDFDB7g5sEFRE
RQWkTFBsDOx+z5czv8/7xzx7n9nZ2Zq599xz72zbI7t3PSVkWXZ+lWVR22/0
c2iZZbMkj2iy7Nw6y/7Js2xflW1U9lL9JNXNUfut9X9/lc4qe6t+gNp3Vjml
yLKL1OmBqt9H9UNUt4yOOUP/T9O+G9T/IZKvVf32nEN1vdX+YM6j9tepbmeV
y1T/vo4rVfbTvoP0/3SVnSTvru2xKltK/kL7l1c5R/JRKnuoHKx+Ttb2AJUj
JR+j7a70IXmg+p6v9vkOUR9nqOws+SPVza9yuOSp2v5VuX6K5D8qn3dPtT2u
8L1/rPoFVY6UvJTu6TTJP0l+V22fV9lI55qhuqiyD89CbX5XWVP3upW2v6ks
KnkLbfdWWVjyoTruOrV/W8ceLvkqye9KPkzyEMnvSG6h85+k9pn6HKP6x1XW
0d+/Vfeo5LUlr6Q2Z+t/a7W5S8fdr/qlVD9B22dVNpR8gLZ9tW+85CMkXy15
ouTfNAaO0rHfSb5RdSO0bxHJP6n+CNV/LfkXyUdK/lbygdp/qdq9IbnWeU9U
/b+Sb1Pd3drXWvKfqrtF8kKSr1f9rZIXljxc8p2Sl5R8h+R7JbeR3J13xfuU
fLWey2mSj5a8uN7dkWo3U//HaztV7Tuq/kqd93ad40zV91ebX1S/neTX1Gay
5I3V5i3JH0heX/VXqc02KofruEu1PVDlLcm/qs1aKteqze/arqNyneS+2n+A
yhtqc4W2B6vMZiyq9NN5N1Wb+VS3g9o/KXlj1e+qsprkK1W/H+9U8raqO0Cl
g+TdVDZS2UXXtqPqvqjcz86SL1Ofm0meX8fupGOfltxJ9fsXvv63Vfdx5X7G
Mi4qn+tlyW9JXkXyRL2jffkv+SQ9w47abqVzbajtiipbSv5H+zdUuUX/e6nv
W3TeEyTPUt0SKt0kf6rtkiqnSL5Z17OXym1qewLzvPDYvlF1u6sMpg9tV1f7
K1S/GM+Ya5X8ubbLqZwt+Ri1G6RzdeXaJF9ceI7303Uey7zUtU1U228qz/Gj
tT/Ubl+pz60lPyC5kLwl40byf9purDKc56N731Pyy7wLleVVtlCfu2i7CbpA
8uU69iCV6er7ApWbdT3Ha986ks+XvJLky7S/i/oZKfkcXdvuvDcde5TaXKs2
e+r/89r/qq5zXdU/JfkF3oXkJyQ/J3lVyX3VfmjhZ9hH25sKP9sbtb1X/VzE
s5X8hEofyddre4/qe0leX/20V7lI/XRO72uA5Cxd27USt0/3PlDyv9ruqHKN
5I0rP5/rJXfQdlWVi9GxupcL1Hc3dD/PV+VEybfqvE+q9NX/NdV2JZVzVX+N
6u4urGMf5zp1bddLvkTlVPS62jyq+sdVP0T/bwl+/2eq/lxtj+M9S75U29Mp
koepzWWSz5D8lc6ztsp5kseonxkqd+Z+N2PV5zOSn5Y8gWcneaHKY2NbtV+4
sj3qLHkBbXP10wldUVnP7yh5wcrjZ5vM9un60vapn+Thhe+hZeU5tbnahMrz
qIPkWHl+oTPRF9eUHgdttd0YnZ7e124acyerzU6q+1llOd3fXJ2zo0qfzLrj
RdU/mFvXvCT5Ick/aP9GKr3RvdpuxdyR/JLaPKM2t6nNvZJHqVyNzdW1XKs2
rzOXJa+A7ZO8RdJXl0u+X21HqwxEx1TWaZfRXnW7FNYPd2r7kPq/EptZe07d
oDaTdd2fqe5hydO0HYUNkTxH7aPaj0c/qExQeQgzpLr3VD7gOegZ3FAbP0zB
PqncLXnv2rrxFslfqJ/xav+K9p0t+arCNvQTlTdVHlSbfWrrvVvBJMx9tR/H
HJc8WfL7kv/SdrjubXm1eUTb23gWkp/R9j50oOSntb1HpT36X/c1XcfdI/lB
9f2Y6ttKXhJcob7m1779VHeN9o1TfQ/V9y+MBwYG45djGFeqO03tW+n/T5Lf
lvyO5AWSnh+hNq0a697hvFN0KHpC8vdgC5UneZ7azlB5SvL76v8HxrjkP7Sd
rfKC5Dbq+2OVufpfartMaV1aNtZvN2a2Q6+rfqzqa22XLW0fl9b2k9KYZJb6
/0vbF9X+s2BM9xLzTnKt8irXqX4WUPtJ2B1tZ6h8IXmK9n+u7SPMNdWtCgbQ
/1W0nY2tRyerzXfYIrVZVHWrgQ30fwPaqrTQ/gHq/67C+n9D1X2j0lL1hcqP
qnuFe9f+BRlPvAvGhuTt0Rdqs62226tNe9WdV/u8g8Bu0brlU+wyuE11y6lN
F7BOZt02OFi/gdM2Y3zw3NT+aLVvgf0ujYfGp/63kfxo5nd+DTZJ8pdqfxY6
UftXR/erzWjVL626FStjV8bzndgRdHJpDAd++1PHHqt286nuD8mHgqsLY9A+
6n8/tWmpusXUfgfJu6rNSpXrsUlXqM1hmW3urfSbxucdko+T/LPa/6T2+6ju
J8mf0w/4BOwteY/Mdna42h/BHFR9N51v8dIY+apgnNxH9fs01jfbqawVjROw
nycG29BP1d+/pe0d51g7GleAKboFt/9BbcqEu45Qm47RdhP8fB12P/O1bhD9
TnvpnF0b28DVVC7hPWXGQzgo6PM1sDPBer6Nrr1tZf/iBnCXynmF9fn20bgR
/DggWD5Z9ZtH+yn4Mb2CfRn04eWl7cJeYCu12U7yXPX3o/rfm2eAjQquB9dd
UdruDFObXVQuL4wpzg3GFT+qboqO3Yxn2NgOYYPeiLbN2OV/1bbS/2W1HRtt
m7HL34MRovXeP9pXSi5z69yxwfoTbFOr35sy+zSXBvs15+jYTtG+z/vavy2+
A7ZU8uaSX5G8iLZLVX4XfzP31L5j8PUEyZNUX2v7n/7PlDxC7W9X+x8kbxRc
v5TK/eAvbGruuhjd/szCfhQ6k+vPVb+g6sdF2zbsGu05x8bB14DjqebZLdo+
pDZfSp6qa95A8jPq7wPJ20meVNi3uyz4Hj9U/a6q/7Aw1kX/onvxRy8Oftcf
gUvBn2rTXWWL6DHzneqn6fq3UN23je9lvsI+5o16v/vzLlQ/Dtupuq8bP4c/
dPwcya9LXo9xqrJm5Tk1UfV17bHWaLto5bGNj3kT84x3pzbfVx5ro6MxFvjq
eP1fVvV7Zsa64BjG/I5qv7Tk3bFfkmdWnpcDmTuV9cwPqv+McxXGWUOC9eGW
Ouf3Kovo/7tq84/aHKY2LSr7QcyvbVU/P758Zp96cOlrALvdquN6SF5N17hu
ZdsHdrs5GL+BLUZI7in5LvVzJforGKMM1/Zs7L7q16usP8GyN6j+FMYV7zK6
n1XALZX9O2zEw7qGsyTvoWNXU/2hkttKvhBfWsffrjZ7RuPGZVV/Zm0M9jxF
+69T/W3oWJV11VcbbU+sbY9WkHy+5Dx4Prxauv2dqj+q8TNr19gvnh98qvP/
JPkStblX9cc1xncvYp+1f0hm7Dg0GAPvie9TWVeD8+9T2+6SH5a8bzS+ba02
x9e2oRdVxr7UXwymlXy+5MHad3swPu+t+m9Vf4HkfpIv0vGvqq8zg31c7MVW
ufUjurFTbp2Fvro/2B9Ct4Cb79b/Xplx/lOl5RcY99H4E9x/U7oXfJb71ebU
zD7JjcEyvsAjpd/vCNU/EIzzh4Gtgv2USyvj2t7pmucmDAy2f0XHDpb8oOR9
osf/c5IPjL7OW9XPfcHvF//q/GD7tYzu+3T182tuf+zZ4D6vA9NGP6tX1OYV
nW8N1T0t+S5sVbTueFPnvRk7hR9U2cccrTajwIo8D8l3SP4rWu+MVvur1eYB
cEJjzgYfZJS2V6n+ZdW9XNlePQqmC26PL/+f2qyX2We/WvJOmd9Vj2BbwDzc
ONpe/Kc+WlW2oc+rz6ckL12YKxgAjmF8qu1Ltft8Vm0eVJv5C/MHPYM5hBdU
P1L1y6r+Z22rxI08p/qHJS+IfwbeDPYf39P/o6N9xnvU5jDmKv4J86UxX/Wp
2pwYjTOnSj4m2n4NUX+N2gyV/FBjzmpt9XuN6vFL8UmxPW+oj2GSr8UvU/0g
yTNVf0K0r4F//lKwXQDfjwl+R6s25r5a6/9qjbkp7M5TvPvgcXWV+vxT9f0z
+x3wSnBKr6v9JO3bBPyOzlb9lZl9oud0PZdm9i0fCpbvxteR3I82kh8Nno8r
N+a1Fgy2TfgM+AuvqZ/Dov2s1/EPoq8fe44dxYY2Ou9v8DmSl+D91h4Df0ue
VttuY6ufTPb6E8ZpZXw1G1tUGUeB17Ax2JdN1PbRaFuwhOo/Ku0zoMOvhhdT
u220/6nosZ3pPNNr28y+wVzmgZn5lL1zY7ALgv8jo3fvKax7v8mNwe+UvJv6
Xr8yzmyh/laobFu/yu0r3IG9UN3PtXX/hWDm3DYIrH9Vbl2BzrivsAyPMCC3
7bhSx/5S257cFsy94c921X2MitYtU5MPclvmOXFw4XnRAcwQrQPBZXsUxmYT
K/vt+OxztX2vNi4Al4Lr8CXAAo8nPACntmPuPvE3dsj9vi4J5n2x3XBeD5bm
LFpqO720n4zNxH5jNy8M5obBlu/pPEVlHhjeaq/cbTavzBXfL3mLyvzYA5n9
klNr+yZf5va9bpe8XjQmAA/A93VR2Vnyd2o/uTaeBds+lvAt+ubAwtd/ZTA/
x/hhbv+k0gTr59/RldH2/PLctnhR9bdK5TGJbT8nvSN8GjAHeGOebU/vFL+9
p8oJkg9Q/ZKSl5Z8eDB/tlJm29gvt01ZCj1RGZODEc/K3Sdj7FfGcbIDY5Mt
gM/tkXvs4RNdr3JFYZ+LuAL+WXuVhVRWzuznnZfb1wMjvJRwQpvcXPgy6Rpm
18YyK6u0o2TGIy8mTNJa+z+rbdt3ij4PGGZHyc9GY6E+uo911eZC+tT+qLKs
5N15F4VxzlqVuVN8q76VuTzs4wDsTG2bzPUOSteMTR5Z2C6jY15LegYcdSv2
qTAeg2MFo8Hd9M89Z/FDHih9X3tF7we/8eyHpuc/UOf9u7atBm+cr37GqO3C
OnZ1cGtuHuuRwlzWMvpfqSwn+Y5gLhx7jc4bl/TeJWDh2te8qI47V9cwn9rd
G8wrc79rwkXjJ2Ueazen8fak2j5V+Bmuqe15+t82t92ZWJo/wpbB6WM/N4ze
YkPx/R8o/PzAAI+W1j0PSX6sNIbqUDk2xPgEgz1f+h7AznDRjD3wKXw17/fG
3FgHnHNDbo4T/Ib+W6P2OLwrmOPk/fJc+6Zn+0QwtwdOezmYj+mf7Ox3heMC
2IvXSnPX2JFPCnPX2Na3SvP8rwfHCrCVP6h+QmkO//Xc9hvbPUv140rbz9dy
4w+wx6u5eTXwycO5+UWe7R25dTNz9q7cupZ5DQZ7tbDOhS+5pDZnsm1ljuWx
zFwIcUD4kJ0rY7DnJO8kuQ8+muRdKuNwOK69KmP1MZk5kv61eZJ26MvSPNQ6
2u6oUupeu1bG5C+rTefK2PhxydtVxu1PYIvV9juVv3Xs87rekaVx4u25+VHG
/zjVv1Dahj8YjE0Z//gazxaeB/gOT5ceg+/m5u3Aokuq7svSPNQLuTEBeAD/
4avSHNnE3D4G/sLk3D4A+H9VbRfJzTE+lntuMeafy40zwBiV7mP5ynaBOAex
SXQCmLpbGm/Y6zaVMeHfus5JpfnKLhr7v6j0Vt2HuXlWMBVcQVOaM/1R8rTS
nCzxmxNzc0To/pOS/h8UrK+ZC/BCg/GpCvNnzyUODW7mxMJ4APsCt45PgU0j
Bsz1g7WfT3j7nWAudmiyHTNr+6BgvD8Lc8cLqe6T2jwc/uwgfLDCWGjh2th1
W/X3dLSvh698VmGbCycM9wHvsaX2PxHNs4FbxyfsSiz50Nw+O7b6sNzHLqBr
+zN3XHLLynFDuOXl1f9Gpf2I54J9Cfw7fJDJhXUWPtHLpX2nKZLHlMaez+aO
RfRV+62i+Ts4OrDVEbnx1bXBtm0eB6g2IxMftQN+RbSfC476sDZHBT5ZpLK/
xjj5oDYn1z94rDBOPsqNj8HG8BPwLNzvI7ltCLoXrukalVML+3CnJL0Er0jM
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
            "]], Polygon3DBox[CompressedData["
1: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
xDDGLu6ZlFs7tE59Qo5N7kP+Qq24HIh6SfWP1ib1aWq95RTkEpYdxFfoMxbB
vmIVPYyaHuvL1pnVWsspySXNhu3sJjGTsZJ7OOVO5FfUgsuh+PdM04ZLsfZp
7G2+rjbcGNy9HNO30XtaS7ytjh7TWukovN9lTfQvciFLdXyRmjD1Geo0/H2n
a6M3Nca6vEmMamzqnjTnsnNaPeVFZXyd66e1NWtIPl99prHUBWW08PJdauXV
xLsXVD2ktbnLymjp5Z/UA6sLNrYyxlJveWmZWM6Yzr0As1WJHV3P1YfOUSXW
MOZYvJeakHtF1Wf6fS/vft8N2+gL1LRbq9I/WFuzZqUezPzJ+oJ1Bv2Leklr
XatX0ZuZj1k/sI5grDY0Zuul7nJklw9ZP7COYP65XBt+31jK/ET+7kHwdIPk
8+o7rcUtXcUf6V+MTZevEivpH9wbsWCX75m/qx+pBtHyb95GL6KmX+2+fMqj
vejw5QfMT9X/jDrI/DcnmAh8TplcwPXJvdrWyNy7sEkbPYd7GMyfzP/Vp9SD
jOct2uhRjurm+1Zt9CjucTH21P+qd1y4yl5g9bjWdi8ukzuYQ/j/R7CmKX+w
VJvYx1jPvSHyk+q11W3Lrwypk8tYc9ffGoMay65dZa+OfKd7Sdyz414A/aH1
JOtK7n1QQ6Z2bJZB9GZq2NTLHNSNr5na1E+N4R2PM7epr1o7d/+IMZixlz7H
evWHdfZmD9UEt/HH1rOGdPzFIm1qp+YW7lU4ug5/7Z6F25rovdRKu0fLvSk+
w3vr156to1e2lj9Vkf3kfi9zt896mW8ztNF/6UPdf+ecdi47R92f5XpoLuSc
d2+Me2T0v/pha6fyZUv0UkN9u47+WC3BrEX216hXtfZvDuPeB+PDg3vZAyF/
smSb2qqxq7VK/ZG1UGuW7j0xP/f/fbJX9/erIVU7+kQZf6p+0/rCs2XiGzWn
1n+tAxt/qiG1PmKdRD5msTa1XnMZ94KoObUeYl1EvmfdNny/e67UM8oHqH3a
s+OLVm1TfzO3NRczPnB/1K5dfGYO436n/1Thp1ZsU99ZtOOvVmr/P/cydzKH
cn/WllXG1wZt9EnusVG/KZ93eS/7MswtjAc27qVm7P7hP+gzTBEf7PyYsU09
V22G+5/Uu6v9MAd2f69jwrHgGHX9e7pO7Lpst/49VydXMId275T38FrzaPff
u36amzqmr2/CGcgVuAfTvVXusTKfNq+2vUcd7YDnHqijz1fbMh7HtXXiA/dC
DYrsBVIzql5K3ZTrkZpMtZhLDzL21PurpXEMyp+r4VQvpW7KvTrmI9aP1+vW
H2sa1jIWHIT/37xOLq9Gx9xIPb3aEHMk9SjGnMaa7hmQW1Gfr3bDHNL9n38a
RxaZMx/U2T+glmTOIv5hljb5vloV9//rz4xN/SZqp9VQm++b97sXQh+vbzdv
1SYnIxdjH/Ut6j/dC+AeAPe37VNHeyGH8Hcdfb9akeWLrJfv1MllzNndW+ge
Q/kOeQ/3ujknnYvyCu7VkX+7sJc9O/qH/9bJdcypvdb9DWphvId763wHny2P
8X/M+YUi
            "]], Polygon3DBox[CompressedData["
1:eJwl1nmwjlUYAPAvrnuvjEqRVJRoCtmV7MquRLhIt3BRti7SoEJFG2OUJnVD
xNWlImuWjC17CMlStK+WGaJspen3zPvHM3Oe33nOeZfvvOd85XMGd8wtlEql
XhRFRJPMVGpRRirVET4JSqelUkvld/D3CqdS5USWvk9YVTZLfpPoyhrLF/IH
tYcaW8rYz+Q701OpOtpjWC99m9hudhd7juWwe4xdx3toj2LV9TVlK9hDbASr
wJrJi/KNbAfby9aw6myO+6goHtVXy/wPsEn6C8TEy1Kpo+qe55+pWWxsvroK
8nbqJqjJZ5NZS/kNfLz2dPaMvuasJBvL3ma5aUlNaz5K+90iSX0V1paNZVPF
C677veteIYaHqXtJXSl1LdQNYXlsHCvOmrEc9gZ7llVmD7I89gHLYxfMNZFv
9xxr2FJ2ir3MNrMV7EN2mr3CtrCVbD6rKe8c78p8H7OZ7EbWho1hM9gEdtzY
F/hGY5ew91kleQd1b6mbx95mbVgvVkd+XJxgB429yLPVvcZGsHszk+eLZ5rM
euprn5nMGfPMZW+yA8aeZ921J7Hh+lqpu51N0S6I96Kvg7wvbyo/Jc7oa816
slryY3E/7FPzVWP5nqOCyGbd1OWwu9W0FxXZffJb+Ovas9mrrnE/q86ms/nx
+7JOrAabwRaw2eywa6SJAdpT2Bh9XdX0V3u//Kw4z7pkJu813uVStlh9F3X9
eFv53+JcjJWfUFegvSx+X3WPqhvIu8gviH/01WePsOvk34tvWQ/2GGsu7yZq
sS/NdSy+B/OMZ4PZADWPsIva51mW2KfuRPzG6ibIh+hrqG4ubxNjWIa+Rmwe
a8sGsqLx7cgr86necQnRQt8gdj37Rns0K6W2nnwab8R6xe/G67PprDHLiffA
hsvL8R/Z2PjteAP5u7wJ6x3viheP31Hs1R4stuorKe8Rv4maA7FHsDnyfp5t
mpp+rCUro64/v1p+RHzNirG6Yo+6XLGZXSd/XN1Vag6LQ7Ee5FXiftSUEQ/E
Ny3vxdPVHBRfFkqetbfrvqOmZ5HkuR9jpdXu136aF+Pb1KzNSPau2MOqeqeb
2eqMZM3G2q3C9sX3HHOy21m9WBvya8z3BXuKXWLZ8VxsJxvG/olvK/YM3je+
ZdaAtZBfrm4T2xlrgNVm/4rlbANbxfrIr1W3j400tmi8f/OdFV303xG/o/Pj
N/letYPUVWOt9F1ih9hIVpf1YBnyI+K5WGPsidgP5CVcYwfbG2uatYv3zj5n
e2KNs6Pm+yP2We3bjK3tuj/K98Q3qK5qrD9978hzeF5cM9aPvjPy/XyYdu04
y9SdZF+xoXFusE7x7uU1XLegcPKe431nyzPEBu3t5vtV3UOZyX4ce/BatoMt
N9+GjOSsizPvBvYVqxXfjbkqi7rueWXsrxnJ+RfnYFl169nOWKtsHLuN/cJ+
FjWMudXYlizLXPXU5Ttf1sfZEGetmi9Yf2NfNLYSW8hWsYdjrbEr2Z/sVHpy
D3EvnWMNZSb7Z+yZR9XVELuN+47dm5bMF/PuYodZ07Tk/uI+uxl7hi/QXsXW
6dsmrxl7R+FkrcWaO2Tc6PRkncR6aaSut5r27LT+k8Y2Fh1jjzU+z7Mti7NV
LFCzknWP9aemOJvPPmLtWC4rxsobOzr+r8h/j9D3MLtMrI7/HvGdq0uX3xXf
jPsYINbrKysfZuzNan4SP7A0dqfYpaa/WBtnULzjOBfC1LVmZ1ltdVtjrYlF
7BKrE2tX3ifO5ULJ/6NcY2fKhxRJ/is1ZIXVrdHewjbHGoo1qm527IWxl+vL
l8/izWIPiXMgrmVcVnyHsbZZTfF4ZnKuxFnyl7yNmCNfbGyn2A/i/DC2gC1h
nWPfYP+x7sZeZMvYOrbLvWxX93R68p3F91Yz9gN12eyCunPqmsSfRzY51q+a
jfJP9f0P/zlXOg==
            "]]},
          Annotation[#, "Charting`Private`Tag$25753#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{779, 1010, 1377, 1011, 2157, 780, 1044, 1393, 1045, 2165, 
        796, 1070, 1404, 1071, 2170, 806, 1096, 1415, 1097, 816, 2190, 1122, 
        1426, 1123, 826, 2195, 1148, 1437, 1149, 836, 2202, 1174, 1448, 1175, 
        846, 1200, 1459, 1201, 2173, 856, 1226, 1470, 1227, 2181, 866, 1252, 
        1481, 1253, 2186, 876, 1278, 1492, 1279, 886, 2208, 1304, 1503, 1305, 
        896, 2211, 1330, 1514, 1331, 906, 2218, 1354, 1525, 1355, 1358}], 
       Line3DBox[{781, 1012, 1378, 1013, 2158, 782, 1046, 1394, 1047, 2166, 
        797, 1072, 1405, 2285, 1073, 807, 1098, 2246, 1416, 1099, 817, 1124, 
        1427, 1125, 827, 2196, 1150, 1438, 1151, 837, 2203, 1176, 1449, 1177, 
        847, 1202, 1460, 1203, 2174, 857, 1228, 1471, 1229, 2182, 867, 1254, 
        1482, 1255, 877, 1280, 1493, 1281, 887, 1306, 1504, 1307, 897, 2212, 
        1332, 1515, 1333, 907, 2219, 1356, 1526, 1357, 1360}], 
       Line3DBox[{783, 1014, 1379, 1015, 2159, 1381, 1018, 1048, 2230, 1019, 
        1395, 1050, 1074, 2236, 1051, 1406, 1076, 2238, 1100, 1077, 1417, 
        1102, 2247, 1126, 1103, 1428, 1128, 1152, 1129, 1439, 2293, 1154, 
        1178, 1155, 1450, 1180, 1204, 1181, 2175, 1461, 1206, 1230, 1207, 
        1472, 1232, 1256, 2267, 1233, 1483, 1258, 1282, 1259, 1494, 1284, 
        2271, 1308, 1285, 1505, 1310, 1334, 1311, 1516, 2299, 1336, 1359, 
        1337, 1362}], 
       Line3DBox[{784, 1016, 1380, 2282, 1017, 1382, 1021, 1049, 2231, 1022, 
        1396, 1052, 1075, 2237, 1053, 1407, 1078, 2239, 1101, 1079, 1418, 
        1104, 2248, 1127, 1105, 1429, 1130, 2254, 1153, 1131, 1440, 1156, 
        1179, 1157, 1451, 1182, 1205, 1183, 1462, 1208, 1231, 2263, 1209, 
        1473, 1234, 1257, 2268, 1235, 1484, 1260, 1283, 1261, 1495, 1286, 
        2272, 1309, 1287, 1506, 1312, 2276, 1335, 1313, 1517, 1338, 1361, 
        1339, 1363}], 
       Line3DBox[{8, 578, 1952, 23, 273, 1719, 38, 296, 1742, 53, 1539, 319, 
        68, 1553, 342, 83, 1567, 365, 98, 1581, 388, 113, 411, 1842, 128, 434,
         1860, 143, 457, 1876, 158, 480, 173, 1598, 503, 188, 1612, 526, 203, 
        1626, 552, 218}], 
       Line3DBox[{253, 252, 2161, 788, 279, 2168, 801, 302, 2171, 811, 2188, 
        325, 821, 2192, 348, 831, 2198, 371, 841, 2206, 394, 851, 417, 2177, 
        861, 440, 2184, 871, 463, 2187, 881, 486, 891, 2209, 509, 901, 2214, 
        532, 911, 2222, 558, 561}], 
       Line3DBox[{789, 1030, 1386, 1031, 2162, 790, 1058, 1399, 1059, 2169, 
        802, 1084, 1410, 2286, 1085, 812, 1110, 2250, 1421, 1111, 822, 2193, 
        1136, 1432, 1137, 832, 2199, 1162, 1443, 1163, 842, 2207, 1188, 1454, 
        1189, 852, 1214, 1465, 1215, 2178, 862, 1240, 1476, 1241, 2185, 872, 
        1266, 1487, 1267, 882, 1292, 1498, 1293, 892, 1318, 1509, 1319, 902, 
        2215, 1344, 1520, 1345, 912, 2223, 1366, 1529, 1367, 1369}], 
       Line3DBox[{791, 1032, 1387, 1033, 2163, 1389, 1036, 1060, 2234, 1037, 
        1400, 1062, 1086, 2241, 1063, 1411, 1088, 2243, 1112, 1089, 1422, 
        1114, 2251, 1138, 1115, 1433, 1140, 1164, 1141, 1444, 2294, 1166, 
        1190, 1167, 1455, 1192, 1216, 1193, 2179, 1466, 1218, 1242, 1219, 
        1477, 1244, 1268, 2269, 1245, 1488, 1270, 1294, 1271, 1499, 1296, 
        2273, 1320, 1297, 1510, 1322, 1346, 1323, 1521, 2300, 1348, 1368, 
        1349, 1371}], 
       Line3DBox[{792, 1034, 1388, 2284, 1035, 1390, 1038, 1061, 2235, 1039, 
        1401, 1064, 1087, 2242, 1065, 1412, 1090, 2244, 1113, 1091, 1423, 
        1116, 2252, 1139, 1117, 1434, 1142, 2256, 1165, 1143, 1445, 1168, 
        1191, 1169, 1456, 1194, 1217, 1195, 1467, 1220, 1243, 2266, 1221, 
        1478, 1246, 1269, 2270, 1247, 1489, 1272, 1295, 1273, 1500, 1298, 
        2274, 1321, 1299, 1511, 1324, 2278, 1347, 1325, 1522, 1350, 1370, 
        1351, 1372}], 
       Line3DBox[{913, 997, 1352, 1327, 903, 991, 1326, 2279, 1301, 893, 985, 
        1300, 2275, 1275, 883, 979, 1274, 1249, 873, 973, 2261, 1248, 1223, 
        863, 967, 2259, 1222, 1197, 853, 961, 1196, 1171, 843, 955, 1170, 
        1145, 833, 949, 1144, 2257, 1119, 823, 943, 1118, 2253, 1093, 813, 
        937, 1092, 2245, 1067, 803, 931, 2228, 1066, 1041, 793, 925, 2224, 
        1040, 1005, 776, 919, 1374, 1003, 1373}], 
       Line3DBox[{914, 998, 1523, 1329, 2216, 904, 992, 1512, 1303, 894, 986, 
        1501, 2297, 1277, 884, 980, 1490, 1251, 874, 974, 2262, 1479, 1225, 
        864, 968, 1468, 1199, 854, 2295, 962, 1457, 1173, 844, 956, 1446, 
        1147, 2200, 834, 950, 1435, 1121, 824, 944, 1424, 2291, 1095, 814, 
        938, 1413, 2287, 1069, 804, 932, 2229, 1402, 1043, 794, 926, 1391, 
        1008, 777, 2281, 920, 1375, 1004, 1006}], 
       Line3DBox[{915, 999, 1524, 1353, 2217, 905, 993, 1513, 1328, 2210, 895,
         987, 1502, 1302, 885, 981, 1491, 1276, 875, 975, 1480, 1250, 865, 
        2180, 969, 1469, 1224, 855, 2172, 963, 1458, 1198, 845, 957, 1447, 
        1172, 2201, 835, 951, 1436, 1146, 2194, 825, 945, 1425, 1120, 2189, 
        815, 939, 1414, 2288, 1094, 805, 933, 1403, 1068, 795, 2164, 927, 
        1392, 1042, 778, 2156, 921, 1376, 1007, 1009}], 
       Line3DBox[{916, 1000, 1364, 1341, 908, 994, 1340, 2280, 1315, 898, 988,
         1314, 2277, 1289, 888, 982, 1288, 1263, 878, 976, 2264, 1262, 1237, 
        868, 970, 2260, 1236, 1211, 858, 964, 1210, 1185, 848, 958, 1184, 
        1159, 838, 952, 1158, 2258, 1133, 828, 946, 1132, 2255, 1107, 818, 
        940, 1106, 2249, 1081, 808, 934, 2232, 1080, 1055, 798, 928, 2226, 
        1054, 1025, 785, 922, 2225, 1383, 1020, 1023}], 
       Line3DBox[{917, 1001, 1527, 1343, 2220, 909, 995, 1518, 1317, 899, 989,
         1507, 2298, 1291, 889, 983, 1496, 1265, 879, 977, 2265, 1485, 1239, 
        869, 971, 1474, 1213, 859, 2296, 965, 1463, 1187, 849, 959, 1452, 
        1161, 2204, 839, 953, 1441, 1135, 829, 947, 1430, 2292, 1109, 819, 
        941, 1419, 2289, 1083, 809, 935, 2233, 1408, 1057, 799, 929, 2227, 
        1397, 1028, 786, 2283, 923, 1384, 1024, 1026}], 
       Line3DBox[{918, 1002, 1528, 1365, 2221, 910, 996, 1519, 1342, 2213, 
        900, 990, 1508, 1316, 890, 984, 1497, 1290, 880, 978, 1486, 1264, 870,
         2183, 972, 1475, 1238, 860, 2176, 966, 1464, 1212, 850, 960, 1453, 
        1186, 2205, 840, 954, 1442, 1160, 2197, 830, 948, 1431, 1134, 2191, 
        820, 942, 1420, 2290, 1108, 810, 936, 2240, 1409, 1082, 800, 2167, 
        930, 1398, 1056, 787, 2160, 924, 1385, 1027, 1029}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1530, 1694, 1944, 919, 1943, 1695, 1946, 2281, 1634, 1945, 
        1697, 2156, 1635, 1947, 2105, 2157, 1636, 1948, 2106, 2158, 1637, 
        1949, 2107, 2159, 1951, 1638, 1950, 2282, 1699, 1953, 1639, 1952, 
        1701, 1955, 2090, 2225, 1954, 1703, 1957, 2283, 1640, 1956, 1705, 
        2160, 1641, 1958, 1707, 2161, 1642, 1959, 2108, 2162, 1643, 1960, 
        2109, 2163, 1962, 1644, 1961, 2284, 1708, 1963, 1645, 1710}], 
       Line3DBox[{1531, 1696, 1964, 2091, 2224, 1712, 1698, 1966, 926, 1965, 
        1714, 2164, 1646, 1967, 2110, 2165, 1647, 1968, 2111, 2166, 1648, 
        1716, 2230, 1700, 1969, 1649, 1717, 2231, 1702, 1970, 1650, 1719, 
        1704, 1971, 2092, 2226, 1721, 1706, 1973, 2093, 2227, 1972, 1723, 
        2167, 1651, 1974, 1725, 2168, 1652, 1975, 2112, 2169, 1653, 1726, 
        2234, 1709, 1976, 1654, 1727, 2235, 1711, 1977, 1655, 1729}], 
       Line3DBox[{1532, 1713, 1978, 2094, 2228, 1731, 1715, 1981, 2095, 2229, 
        1980, 1734, 933, 1983, 2113, 2170, 1656, 1984, 2285, 1737, 1657, 1738,
         2236, 1718, 1985, 1658, 1739, 2237, 1720, 1987, 1659, 1742, 1722, 
        1989, 2096, 2232, 1745, 1724, 1992, 2097, 2233, 1991, 1748, 2098, 
        2240, 1994, 1751, 2171, 1660, 1995, 2286, 1752, 1661, 1753, 2241, 
        1728, 1996, 1662, 1754, 2242, 1730, 1998, 1663, 1757}], 
       Line3DBox[{1546, 1759, 1999, 1758, 2244, 1545, 1756, 1997, 1755, 2243, 
        1544, 1783, 1782, 2250, 1543, 1781, 2188, 1780, 1542, 2290, 1777, 
        1776, 1541, 2289, 1750, 1993, 1749, 1540, 2249, 1747, 1990, 1746, 
        1539, 1744, 1988, 1743, 2239, 1538, 1741, 1986, 1740, 2238, 1537, 
        1769, 1768, 2246, 1536, 1767, 1096, 1535, 2288, 1764, 1763, 1534, 
        2287, 1736, 1982, 1735, 1533, 2245, 1733, 1979, 1732, 1762}], 
       Line3DBox[{1560, 1787, 2007, 1786, 2252, 1559, 1785, 2006, 1784, 2251, 
        1558, 1804, 2193, 2117, 1557, 1803, 2192, 1802, 1556, 2116, 2191, 
        1800, 1555, 2292, 1779, 2005, 1778, 1554, 2255, 1775, 2004, 1774, 
        1553, 1773, 2003, 1772, 2248, 1552, 1771, 2002, 1770, 2247, 1551, 
        1794, 1124, 1550, 1793, 2190, 2115, 1549, 2114, 2189, 1791, 1548, 
        2291, 1766, 2001, 1765, 1547, 2253, 1761, 2000, 1760, 1790}], 
       Line3DBox[{1574, 1807, 2015, 1806, 2256, 1573, 1805, 2014, 1140, 1572, 
        1821, 2199, 2125, 1571, 1820, 2198, 1819, 1570, 2123, 2197, 1817, 
        1569, 1135, 2013, 1801, 1568, 2258, 1799, 2012, 1798, 1567, 1797, 
        2011, 1796, 2254, 1566, 1795, 2010, 1128, 1565, 1813, 2196, 2121, 
        1564, 1812, 2195, 2120, 1563, 2118, 2194, 1810, 1562, 1121, 2009, 
        1792, 1561, 2257, 1789, 2008, 1788, 1809}], 
       Line3DBox[{106, 660, 843, 107, 662, 844, 108, 845, 109, 846, 110, 847, 
        111, 1450, 665, 112, 1451, 666, 113, 667, 848, 114, 669, 849, 115, 
        850, 116, 851, 117, 852, 118, 1455, 672, 119, 1456, 673, 120}], 
       Line3DBox[{1588, 1823, 2023, 1168, 1587, 1822, 2022, 2294, 2126, 1586, 
        1835, 2207, 2132, 1585, 1834, 2206, 1833, 1584, 2131, 2205, 1831, 
        1583, 2124, 2204, 2021, 1818, 1582, 1159, 2020, 1816, 1581, 1815, 
        2019, 1156, 1580, 1814, 2018, 2293, 2122, 1579, 1829, 2203, 2129, 
        1578, 1828, 2202, 2128, 1577, 2127, 2201, 1826, 1576, 2119, 2200, 
        2017, 1811, 1575, 1145, 2016, 1808, 1825}], 
       Line3DBox[{1589, 1824, 2024, 961, 1836, 1827, 2026, 2295, 1664, 2025, 
        1838, 2172, 1665, 2027, 2134, 2173, 1666, 2028, 2135, 2174, 1667, 
        1840, 2130, 2175, 2029, 1668, 1841, 1183, 2030, 1669, 1842, 1830, 
        2031, 964, 1844, 1832, 2033, 2296, 1670, 2032, 1846, 2176, 1671, 2034,
         1848, 2177, 1672, 2035, 2136, 2178, 1673, 1849, 2133, 2179, 2036, 
        1674, 1850, 1195, 2037, 1675, 1851}], 
       Line3DBox[{1590, 1837, 2038, 2099, 2259, 1853, 1839, 2040, 968, 2039, 
        1855, 2180, 1676, 2041, 2137, 2181, 1677, 2042, 2138, 2182, 1678, 
        1857, 1207, 2043, 1679, 1858, 2263, 1843, 2044, 1680, 1860, 1845, 
        2045, 2100, 2260, 1862, 1847, 2047, 971, 2046, 1864, 2183, 1681, 2048,
         1866, 2184, 1682, 2049, 2139, 2185, 1683, 1867, 1219, 2050, 1684, 
        1868, 2266, 1852, 2051, 1685, 1870}], 
       Line3DBox[{1591, 1854, 2052, 2101, 2261, 1872, 1856, 2054, 2102, 2262, 
        2053, 1873, 975, 2055, 2140, 2186, 1686, 2056, 1255, 1687, 1874, 2267,
         1859, 2057, 1688, 1875, 2268, 1861, 2058, 1689, 1876, 1863, 2059, 
        2103, 2264, 1877, 1865, 2061, 2104, 2265, 2060, 1878, 978, 2062, 1879,
         2187, 1690, 2063, 1267, 1691, 1880, 2269, 1869, 2064, 1692, 1881, 
        2270, 1871, 2065, 1693, 1882}], 
       Line3DBox[{472, 448, 1274, 470, 451, 1490, 717, 473, 1491, 719, 1492}],
        Line3DBox[{491, 469, 1295, 489, 467, 1294, 488, 487, 1498, 727, 486, 
        726, 1497, 484, 724, 1496, 462, 482, 1288, 460, 480, 458, 1283, 478, 
        456, 1282, 477, 476, 1493, 720, 475}], 
       Line3DBox[{1605, 1898, 2073, 1897, 2274, 1604, 1896, 2072, 1895, 2273, 
        1603, 1915, 1318, 1602, 1914, 2209, 1913, 1601, 1316, 1911, 1600, 
        2298, 1894, 2071, 1893, 1599, 2277, 1892, 2070, 1891, 1598, 1890, 
        2069, 1889, 2272, 1597, 1888, 2068, 1887, 2271, 1596, 1905, 1306, 
        1595, 1904, 2208, 2141, 1594, 1302, 1902, 1593, 2297, 1886, 2067, 
        1885, 1592, 2275, 1884, 2066, 1883, 1901}], 
       Line3DBox[{1619, 1918, 2081, 1917, 2278, 1618, 1916, 2080, 1322, 1617, 
        1932, 2215, 2149, 1616, 1931, 2214, 1930, 1615, 2147, 2213, 1928, 
        1614, 1317, 2079, 1912, 1613, 2280, 1910, 2078, 1909, 1612, 1908, 
        2077, 1907, 2276, 1611, 1906, 2076, 1310, 1610, 1924, 2212, 2145, 
        1609, 1923, 2211, 2144, 1608, 2142, 2210, 1921, 1607, 1303, 2075, 
        1903, 1606, 2279, 1900, 2074, 1899, 1920}], 
       Line3DBox[{1633, 1934, 2089, 1350, 1632, 1933, 2088, 2300, 2150, 1631, 
        1942, 2223, 2155, 1630, 1941, 2222, 1940, 1629, 2154, 2221, 1939, 
        1628, 2148, 2220, 2087, 1929, 1627, 1341, 2086, 1927, 1626, 1926, 
        2085, 1338, 1625, 1925, 2084, 2299, 2146, 1624, 1938, 2219, 2153, 
        1623, 1937, 2218, 2152, 1622, 2151, 2217, 1936, 1621, 2143, 2216, 
        2083, 1922, 1620, 1327, 2082, 1919, 1935}]}}},
    VertexNormals->CompressedData["
1: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
AfzcFMuH8Pzpo3gV7PeFuViD/WiqP1q8rNwb/Lm56tg74OebOrI/OvOQoxn8
Fzo+2AP+P2pKI3/vpbgezd/ePtFAuk54zRukl0TaNTHAzVZKdQ5w26Dcg/S8
I6fWYTQ3+0oTgT6aRb/dAfA0NJR7inBjDE0HHTLj4PsD3UelfNeHfrZpzxYm
6KPZFr+7C3hmyo+7wT7GGow/gfyT3/EO4ZlVwxQA50VhpSUr9MvnrrSS/Dxy
AX0nkzwfGgp98TZqPvBqx030XYTVisW60BdXU3OA8egEdA+tesv0IqyfpPr9
HWHrPgFua9ieRMHctYjqN2U0zdB9qEvLAQ+wX0/1+9GsNuj8Jmw1rob82Uz1
m41yGvXgf3lOWwf4v9BvZsjkobnlqLQ4J8TbSfXvq4+5oLkQxwO+A4BbHtW/
r6z2R/27+XTBBOixNdQcZtl1kQnoQ1dUfjYGXdGlyiUI+ERq3SqCvHFAILOL
h6iPC/MWXSP9JuAPxxaJcMBti1Ubigt/FWQEzwt6ivrB83xBpN5rNXqgB+fF
wcW/DOzzCqUg/4tdDpUphY/goiLrRB/aZ+GvPqePZcZn4dO0uSpYT67XFod1
nZ31URnxWdinUvdqWOc68/TgA/sszEP4vAU8v+zQgVpY/zvBegjWLzHbJcPz
3yttbzqWjeCc6aKv4LmWcwqHvgk/pp+S474N6w8YnnJlt0bR33/lewnPL/m4
xgLWH5bNeMrXP6Ipz7M5w98zuUk+v9VzPXouc23Ypfu9j2iaH8jnx0KKOMDO
eep59yryvUnUe3e/v/zb52AELcGctGPnQdox+bPh9VKxx/RJyh/Fb34+8N5E
yp/Sd+UfjGP78cb7tAHBF014jFaP9X3nRvyDi53BpG4X/mD+9+LnsTV4O3NK
7+MnPXh02jLnFKZ6fNNFPsNZsQL8Zkxrz6HgIZyR4TKa3zIyMKDfvyzMb3v4
vFYXZfjSui5ueR/y3Z7GSK1/3fcsPsi5EbNwOJe92tyDdj1WyPFbwBCuJJO9
I42pHnvBoTY/J1aASY043AP7XolZD4n3Y05xjbenG0Jpc/lHxMCfnlVxycTf
w377X39ZYBxJO9gZ/CKQ8J+rIXyJSWw/pm25UmL7iybs73q5emIdY6D1TxJx
YQ+d+v2IuLAE3vrjYFfJlns+lXivetyrWnhvbYVAAPFerJ1/u89UtzttT4pY
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
i95fu8NznqGf1r7lavEXHJy1/tyjKs7fYTMisIpqvu3gIbc6hzra5ROK55Xe
BTx41fqeClqgL71/2EvKRFftiu6DFvrzNXktPB8rsG8rnt86sDGKeZ6ynSf7
0mK7l1bMOp/4kPWHtCzZ8zlzN615D3kGBWM0Ic94z0PdeD4jSkWC4U+XCz+O
sh/2kvbdRGnqPWihatTCXMa7vaSFMyPPzPtSRr+s+Li9hJHn3LC6nLS9nlo9
EovXj97mqfXnXuPvypsyJri9pK6kbCma/6WMOrMnfBier2+dGg7686tTboP+
6NbeMQydqqg0FAh9f0qrXlBAcnPFKa3trJyP7TqCMK7WmKQojPvs5JzNeF78
fMPj+GXOWuMfWayYvNLvn3FfMwh9tPOQ1gXbcZ53rLz+me9r1WeDzHypJNe9
1TMY/awrKCX6l9/+QGnNKr/MEv2ikjZ953/uZVbwVb3L6JP+5v6Zgn6yQ+2J
/hWuhHVCP90qU/rsGP2Y37xC9K8uOf4Enl90s4as77UcZ6L/zy3XqaLdXpkR
/JOy5G0PZf6RZ8Wi+hnDGXl0UyMHIc/151ZE/wevjTTF+h4tanJi+FOvjmkQ
/X/6tLWH0QMVp5oygtED5e9ftQP65Nk0sPTlVs/MCSKHo9stPTNHsvJ3UXtV
RRm96RZmrmH0TGdUJBL9D6q/mQC64ihRedArzY8R/VutX5ga2nAqM3nYngM+
Nacy/+g/zuPAGKxXrM8kWYzruX8+0X/qj2VLGzWdM99ai/dqaPn9M+5967nm
yVaHMjVfm3rts/L6Z74c9vsJNp+f/nVOTJDdBzf9694QH81vk4t1nTMjbfwl
Lxv7/WMXYuw+2PevezGk76eMnb79UKaGY8j7pv9a98Xs/ljK7o/67P7oP+zE
b+hz9najASVGD8q/LIk+BwwS/Vp3eGbK/Co8OHyXp9afeV0rnqMLve0Z2UUB
tw8NY4k+Hx69OA30Z4sipEDvOraD6DP9kbGGe9OpzDBv9UivplP/yLO6LEIS
+jz0aaUY8Bx/dzzRZ0K+0yqsu2/r9JXAlUXhTSNm3ekb2mW8wInmT/dEBif0
86yXBLe7n7yYE6nvl1k0VeSFNmMHf3Db3a+fABw+lzaazOCQ0pFzJLi16fn1
Frj1fiCUD1yV9O+8x+CW4nlCeeL5tStd+2cyz19YwsXtl6zwlqvGXplNnuFn
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
vVR/T+Q592ZQCvyfZEefxP6+LG0hkef/AQTaaQc=
     "]], {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{378.90057757608963`, 205.18766451629753`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-2.999999999999899, 2.999999999999597}, {-2.9999999999998237`, 
   2.9999999999998237`}, {-0.9999999999999748, 0.9999999999999748}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.7611461579352585`, -2.61855303613124, 1.2212879297519252`},
  ViewVertical->{0.10467311251197053`, -0.04239544155924429, 
   0.993602619789246}]], "Output",
 CellChangeTimes->{3.8966996789208813`*^9, 3.8966997123585663`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"6e5b3bc3-0ac5-4408-80e6-11d3dbbf4a6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"torus", "[", 
       RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Phi]"}], "]"}], 
    ",", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"torus", "[", 
       RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], "]"}]}],
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.896699799455196*^9, 3.8966998472735777`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"4a8f0d2d-7df1-47c1-91c4-fe01a82e04dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", "+", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"R", "+", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}]}], ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.89669984775746*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"269744c6-a9a2-4fd4-9d61-165524b4cd59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", GridBox[{
    {
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"torus", "[", 
          RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Phi]"}], "]"}], 
       ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"torus", "[", 
          RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Phi]"}], 
        "]"}]}], "]"}], 
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"torus", "[", 
          RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Phi]"}], "]"}], 
       ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"torus", "[", 
          RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], 
        "]"}]}], "]"}]},
    {
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"torus", "[", 
          RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Phi]"}], "]"}], 
       ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"torus", "[", 
          RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], 
        "]"}]}], "]"}], 
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"torus", "[", 
          RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], 
        "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"torus", "[", 
          RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], 
        "]"}]}], "]"}]}
   }], "]"}]], "Input",
 CellChangeTimes->{{3.8966998958596115`*^9, 3.896699949506114*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"34d8acad-ca07-48b7-a851-974551ddf0ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["r", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"R", "+", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], "2"]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8966999322774687`*^9, 3.8966999499166417`*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"0aa02c65-4769-4f53-bbae-83bae26401f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"torus", "[", 
           RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Phi]"}], "]"}],
         ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"torus", "[", 
           RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], 
         "]"}]}], "]"}], ",", "\[Phi]"}], "]"}], ",", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"torus", "[", 
           RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Phi]"}], "]"}],
         ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"torus", "[", 
           RowBox[{"\[Phi]", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], 
         "]"}]}], "]"}], ",", "\[Phi]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8967000913915863`*^9, 3.8967002366907387`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"368898a4-4c0f-4734-8d00-590eb5d3839c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"R", "+", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{"R", "+", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"R", "+", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{"R", "+", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.896700199872305*^9, 3.896700237319199*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"28d701ff-5f6a-4945-b159-a63df16e36bb"]
}, Open  ]],

Cell[TextData[StyleBox["4.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.896700665645539*^9, 
  3.89670066576548*^9}},ExpressionUUID->"54d5b0a1-f388-4db4-9002-\
aef75f52d63c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"H", "==", 
      FractionBox[
       RowBox[{"k1", "+", "k2"}], "2"]}], ",", 
     RowBox[{"K", "==", 
      RowBox[{"k1", " ", "k2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k1", ",", "k2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8967006689773703`*^9, 3.8967007298419294`*^9}, {
  3.8967007720662656`*^9, 3.896700773193864*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6e9b7775-fc01-432a-9992-a24c768bef4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "\[Rule]", 
      RowBox[{"H", "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["H", "2"], "-", "K"}]]}]}], ",", 
     RowBox[{"k2", "\[Rule]", 
      RowBox[{"H", "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["H", "2"], "-", "K"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "\[Rule]", 
      RowBox[{"H", "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["H", "2"], "-", "K"}]]}]}], ",", 
     RowBox[{"k2", "\[Rule]", 
      RowBox[{"H", "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["H", "2"], "-", "K"}]]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.896700708572027*^9, 3.896700730395316*^9}, 
   3.8967007737167006`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"d6a4b4a0-10c0-4259-8c6d-4ce5345fc416"]
}, Open  ]],

Cell[TextData[{
 StyleBox["5.",
  FontWeight->"Bold"],
 " The fastest way to change the angle is to rotate ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c066bed4-3496-4278-987f-e7fb7ff6a900"],
 ". When change is small, it is the same as",
 " to add to ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7603d9b9-9960-4903-91b2-72c0bd34f13c"],
 " orthogonal vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", " ", "u"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2eca2273-2a00-45a4-a2e1-20d46cd7d3fa"],
 ". The change of angle is equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", " ", 
    RowBox[{"u", "/", "u"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e06ea67e-feb2-40a1-bda1-216c31a302c3"],
 ", so gradient is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"J", " ", 
     RowBox[{"u", " ", "/"}]}], " ", "|", "u", 
    SuperscriptBox["|", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "44122cf5-30bd-4113-8f14-d5e68d0e5fb6"],
 "."
}], "Text",
 CellChangeTimes->{{3.8970009142528257`*^9, 3.897000915002744*^9}, {
  3.89700095128901*^9, 3.897000954218402*^9}, {3.8970013280978127`*^9, 
  3.8970015011137514`*^9}, {3.8970857764789457`*^9, 
  3.897085776685816*^9}},ExpressionUUID->"ddb6620d-4dcf-4c6e-9b29-\
dab6ea9ceb57"],

Cell[TextData[{
 StyleBox["6.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
      SubscriptBox["\[Sum]", "i"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["p", "i"], "-", "q"}], ")"}], "\[Cross]", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["p", 
          RowBox[{"i", "+", "1"}]], "-", "q"}], ")"}]}]}]}], "=", 
    RowBox[{
     RowBox[{"A", "-", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{
        SubscriptBox["\[Sum]", "i"], 
        RowBox[{"q", "\[Cross]", 
         SubscriptBox["p", "i"]}]}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{
        SubscriptBox["\[Sum]", "i"], 
        RowBox[{"q", "\[Cross]", 
         SubscriptBox["p", 
          RowBox[{"i", "+", "1"}]]}]}]}]}], "=", "A"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "382adc65-3017-47db-8d4a-67a29f9998b0"],
 " because each edge is considered twice, first time with a positive sign and \
a second time with a negative sign."
}], "Text",
 CellChangeTimes->{{3.897001572337535*^9, 3.8970015816754007`*^9}, {
  3.897001701195426*^9, 3.897001846243743*^9}, {3.8970018887869635`*^9, 
  3.897001893841941*^9}, {3.8970019293142705`*^9, 3.897002008146449*^9}, {
  3.897002039850976*^9, 3.8970020862602463`*^9}, {3.89708578296599*^9, 
  3.897085784526491*^9}},ExpressionUUID->"ce9fd351-212c-4f63-a449-\
1ed384e789be"],

Cell[TextData[{
 StyleBox["7. ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Integral]", "M"], 
     RowBox[{"N", 
      RowBox[{"\[DifferentialD]", "A"}]}]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Integral]", "M"], 
      RowBox[{
       RowBox[{"\[DifferentialD]", "f"}], "\[Cross]", 
       RowBox[{"\[DifferentialD]", "f"}]}]}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Integral]", "M"], 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{
         RowBox[{"\[DifferentialD]", "f"}], "\[Wedge]", 
         RowBox[{"\[DifferentialD]", "f"}]}]}]}], "=", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Integral]", "M"], 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"\[DifferentialD]", 
          RowBox[{"(", 
           RowBox[{"f", "\[Wedge]", 
            RowBox[{"\[DifferentialD]", "f"}]}], ")"}]}]}]}], "=", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{
         SubscriptBox["\[Integral]", 
          RowBox[{"\[PartialD]", "M"}]], 
         RowBox[{"\[DifferentialD]", 
          RowBox[{"(", 
           RowBox[{"f", "\[Wedge]", 
            RowBox[{"\[DifferentialD]", "f"}]}], ")"}]}]}]}]}]}]}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "79bd57af-3518-4268-bbfd-c418c4463239"]
}], "Text",
 CellChangeTimes->{{3.8970853977743196`*^9, 3.897085592792883*^9}, {
  3.8970857863265114`*^9, 
  3.897085788118535*^9}},ExpressionUUID->"5d9a7e26-c215-46fd-957f-\
994d43332f9b"],

Cell[TextData[{
 StyleBox["8.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[DifferentialD]", "f"}], "\[Wedge]", 
    RowBox[{"\[DifferentialD]", "N"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "cec13a21-c2cc-47f7-83bb-45229a852473"],
 " is a two-form, so it is uniquely determined by a pair of noncollinear \
vectors. Take two principal curvature directions ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "1"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9d5c5eee-446b-42b3-9e97-8533a810edc1"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0aa883ad-4379-4d3a-b76f-70f280c03c5d"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"|", 
     RowBox[{"d", " ", 
      RowBox[{"f", "(", 
       SubscriptBox["X", "1"], ")"}]}], "|"}], "=", 
    RowBox[{
     RowBox[{"|", 
      RowBox[{"d", " ", 
       RowBox[{"f", "(", 
        SubscriptBox["X", "2"], ")"}]}], "|"}], "=", "1"}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ceabe322-1eaa-4074-a35e-7e04ff1ab47a"],
 ". ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", " ", 
    RowBox[{"f", "(", 
     SubscriptBox["X", "1"], ")"}], "  ", "and", " ", "d", " ", 
    RowBox[{"f", "(", 
     SubscriptBox["X", "2"], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fc2935d2-2efc-4365-a59d-cdab75e1774d"],
 " are orthogonal, so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      RowBox[{"f", "(", 
       SubscriptBox["X", "1"], ")"}]}], "\[Wedge]", 
     RowBox[{"\[DifferentialD]", 
      RowBox[{"f", "(", 
       SubscriptBox["X", "2"], ")"}]}]}], "=", 
    RowBox[{"1", "=", 
     RowBox[{"\[DifferentialD]", 
      RowBox[{"A", "(", 
       RowBox[{
        SubscriptBox["X", "1"], ",", 
        SubscriptBox["X", "2"]}], ")"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "40939de1-2553-4059-b56f-ab456dbe4e4a"],
 ". By definition of 2-form, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[DifferentialD]", "f"}], "\[Wedge]", 
     RowBox[{"\[DifferentialD]", 
      RowBox[{"N", "(", 
       RowBox[{
        SubscriptBox["X", "1"], ",", 
        SubscriptBox["X", "2"]}], ")"}]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[DifferentialD]", 
       RowBox[{"f", "(", 
        SubscriptBox["X", "1"], ")"}]}], "\[Cross]", 
      RowBox[{"\[DifferentialD]", 
       RowBox[{"N", "(", 
        SubscriptBox["X", "2"], ")"}]}]}], "-", 
     RowBox[{
      RowBox[{"\[DifferentialD]", 
       RowBox[{"f", "(", 
        SubscriptBox["X", "2"], ")"}]}], "\[Cross]", 
      RowBox[{"\[DifferentialD]", 
       RowBox[{"N", "(", 
        SubscriptBox["X", "1"], ")"}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e89450f3-6b1f-4f90-92c4-194a8004b952"],
 ". By definition of principal curvature, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[DifferentialD]", 
     RowBox[{"N", "(", 
      SubscriptBox["X", "i"], ")"}]}], "=", 
    RowBox[{
     SubscriptBox["\[Kappa]", "i"], 
     RowBox[{"\[DifferentialD]", 
      RowBox[{"f", "(", 
       SubscriptBox["X", "i"], ")"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "49e8c4ce-027b-4478-814f-bad8caa1f8ef"],
 ", so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[DifferentialD]", "f"}], "\[Wedge]", 
     RowBox[{"\[DifferentialD]", 
      RowBox[{"N", "(", 
       RowBox[{
        SubscriptBox["X", "1"], ",", 
        SubscriptBox["X", "2"]}], ")"}]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Kappa]", "1"], "+", 
        SubscriptBox["\[Kappa]", "2"]}], ")"}], 
      RowBox[{
       RowBox[{"\[DifferentialD]", 
        RowBox[{"f", "(", 
         SubscriptBox["X", "1"], ")"}]}], "\[Cross]", 
       RowBox[{"\[DifferentialD]", 
        RowBox[{"f", "(", 
         SubscriptBox["X", "2"], ")"}]}]}]}], "=", 
     RowBox[{
      RowBox[{"2", "H", " ", "N"}], "=", 
      RowBox[{"2", " ", "H", " ", "N", " ", 
       RowBox[{"\[DifferentialD]", "A"}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "338e8ab8-4ab2-429c-a056-35b2e6ddf32f"],
 ".\nFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[DifferentialD]", "N"}], "\[Wedge]", 
    RowBox[{"\[DifferentialD]", 
     RowBox[{"N", "(", 
      RowBox[{
       SubscriptBox["X", "1"], ",", 
       SubscriptBox["X", "2"]}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "695bffaf-8134-4f0d-a6fc-66686b8d3ddc"],
 " we get ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[DifferentialD]", 
       RowBox[{"N", "(", 
        SubscriptBox["X", "1"], ")"}]}], "\[Cross]", 
      RowBox[{"\[DifferentialD]", 
       RowBox[{"N", "(", 
        SubscriptBox["X", "2"], ")"}]}]}], "-", 
     RowBox[{
      RowBox[{"\[DifferentialD]", 
       RowBox[{"N", "(", 
        SubscriptBox["X", "2"], ")"}]}], "\[Cross]", 
      RowBox[{"\[DifferentialD]", 
       RowBox[{"N", "(", 
        SubscriptBox["X", "1"], ")"}]}]}]}], "=", 
    RowBox[{
     RowBox[{"2", 
      SubscriptBox["\[Kappa]", "1"], 
      SubscriptBox["\[Kappa]", "2"], 
      RowBox[{
       RowBox[{"\[DifferentialD]", 
        RowBox[{"f", "(", 
         SubscriptBox["X", "1"], ")"}]}], "\[Cross]", 
       RowBox[{"\[DifferentialD]", 
        RowBox[{"f", "(", 
         SubscriptBox["X", "2"], ")"}]}]}]}], "=", 
     RowBox[{"2", "K", " ", "N", 
      RowBox[{"\[DifferentialD]", "A"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c4bce98d-5967-4dce-bf19-a6213c032264"],
 "."
}], "Text",
 CellChangeTimes->{{3.897085402350833*^9, 3.8970854055503426`*^9}, {
  3.897085789829109*^9, 3.897085988542486*^9}, {3.8972752143762636`*^9, 
  3.897275378223851*^9}, {3.897275418456417*^9, 3.897275615061388*^9}, {
  3.8972757438135433`*^9, 
  3.8972759992481923`*^9}},ExpressionUUID->"11ea45ef-cacc-45c4-ab08-\
ddb4cad477b3"],

Cell[TextData[{
 StyleBox["9.",
  FontWeight->"Bold"],
 " Area of the triangle is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "u", "|", 
    RowBox[{"\[CenterDot]", 
     RowBox[{"h", "/", "2"}]}]}], TraditionalForm]],ExpressionUUID->
  "d690d594-8261-40db-8332-c2d4afbeab92"],
 ", where ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "61c0172f-2273-42f1-bb1d-ac5f33512352"],
 " is a height. As ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "u", "|"}], TraditionalForm]],ExpressionUUID->
  "bdc80f3f-622d-4229-97d3-237005703a7d"],
 " is fixed, gradient is equal to the gradient of height times ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"|", "u", "|"}], ")"}], "/", "2"}], TraditionalForm]],
  ExpressionUUID->"d03b079e-18ee-4d95-ab89-1b3b4ad5eef2"],
 ". Gradient of height is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["u", "\[Perpendicular]"], "/", 
    RowBox[{"(", 
     RowBox[{"|", "u", "|"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "41471a17-d876-4ae2-b3bb-0d4f703249ea"],
 ", so gradient of area is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["u", "\[Perpendicular]"], "/", "2"}], TraditionalForm]],
  ExpressionUUID->"17256343-3679-41a0-9464-e295c42aecf7"],
 "."
}], "Text",
 CellChangeTimes->{{3.8972760020121193`*^9, 3.8972760049361567`*^9}, {
   3.8976930713800364`*^9, 3.8976930735190706`*^9}, 3.89769355941536*^9, {
   3.897869006698945*^9, 3.8978690108116026`*^9}, {3.89851973379472*^9, 
   3.8985197368627787`*^9}},ExpressionUUID->"27300f9d-ce35-4823-a1ad-\
7e274f74e233"],

Cell[TextData[{
 StyleBox["10.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"volume", "(", "f", ")"}], "=", 
    RowBox[{
     FractionBox["1", "6"], 
     RowBox[{
      SubscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"i", " ", "j", " ", "k"}], " ", "\[Element]", "F"}]], 
      RowBox[{
       SubscriptBox["f", "i"], "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["f", "j"], "\[Cross]", 
         SubscriptBox["f", "k"]}], ")"}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "680169a1-207e-41fd-bcf2-b77baa0542c2"],
 ", because ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["f", "j"], "\[Cross]", 
     SubscriptBox["f", "k"]}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4de64803-d9de-4b37-8726-ccddc57f74d8"],
 " is an double area of triangle, volume of the pyramid with the tip on ",
 Cell[BoxData[
  FormBox["O", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d0e21419-0be9-41e5-afbd-761ba6f0f572"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "6"], 
    RowBox[{
     SubscriptBox["f", "i"], "\[CenterDot]", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["f", "j"], "\[Cross]", 
       SubscriptBox["f", "k"]}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8342bcd2-b857-4763-96b8-1caca4faa683"],
 ". So \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Del]", 
      SubscriptBox["f", "i"]], 
     RowBox[{"volume", "(", "f", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "6"], 
      RowBox[{
       SubscriptBox["\[Sum]", 
        RowBox[{
         RowBox[{"i", " ", "j", " ", "k"}], " ", "\[Element]", "F"}]], 
       RowBox[{
        SubscriptBox["f", "j"], "\[Cross]", 
        SubscriptBox["f", "k"]}]}]}], "=", 
     RowBox[{
      SubscriptBox["\[Integral]", 
       SubscriptBox["C", "i"]], 
      RowBox[{"N", 
       RowBox[{"\[DifferentialD]", "A"}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e7dd9f0b-93f6-412b-80d0-c27cfb125eb8"],
 ". ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Del]", 
      SubscriptBox["f", "i"]], 
     RowBox[{"area", "(", "f", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sum]", 
       RowBox[{
        RowBox[{"i", " ", "j"}], " ", "\[Element]", "E"}]], 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cot", " ", 
          SubscriptBox["\[Alpha]", 
           RowBox[{"i", " ", "j"}]]}], "+", " ", 
         RowBox[{"cot", " ", 
          SubscriptBox["\[Beta]", 
           RowBox[{"i", " ", "j"}]]}]}], ")"}]}]}], "=", 
     RowBox[{
      SubscriptBox["\[Integral]", 
       SubscriptBox["C", "i"]], 
      RowBox[{"H", " ", "N", " ", 
       RowBox[{"\[DifferentialD]", "A"}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "59dbad8c-68cb-47be-afce-5c80d63cd92d"],
 ". So these vectors have the same direction."
}], "Text",
 CellChangeTimes->{{3.8985197387144156`*^9, 3.8985199964222555`*^9}, {
   3.898520044527878*^9, 3.898520044527878*^9}, {3.898520079770155*^9, 
   3.8985201152665043`*^9}, 3.898520333284092*^9, {3.898520429319521*^9, 
   3.8985205288620863`*^9}},ExpressionUUID->"d227b1ba-d882-4553-95ec-\
a351741af5dd"],

Cell[TextData[{
 StyleBox["11.",
  FontWeight->"Bold"],
 " The sum of three diangles gives us the entire sphere plus four the area of \
the rectangle (there are two triangles, each has two intersections). The area \
of each diangle is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", "\[Alpha]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3cbe4ac4-4dc3-46c3-8059-fcb4f80f4ae2"],
 ", because it is proportional to ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "57a95258-9bee-48b1-b84b-42437be163e1"],
 " and is equal to 4\[Pi] when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", "\[Pi]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bb48c23c-44e2-4bb0-be38-225c43796bc0"],
 ". So ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"4", "A"}], "+", 
     RowBox[{"4", "\[Pi]"}]}], "=", 
    RowBox[{
     RowBox[{"4", 
      SubscriptBox["\[Alpha]", "1"]}], "+", 
     RowBox[{"4", 
      SubscriptBox["\[Alpha]", "2"]}], "+", 
     RowBox[{"4", 
      SubscriptBox["\[Alpha]", "3"]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "350b59a7-6617-429e-a5ae-2979aa0246bb"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", "+", "\[Pi]"}], "=", 
    RowBox[{
     SubscriptBox["\[Alpha]", "1"], "+", 
     SubscriptBox["\[Alpha]", "2"], "+", 
     SubscriptBox["\[Alpha]", "3"]}]}], TraditionalForm]],ExpressionUUID->
  "baba4ad1-632c-4b84-84c2-4bae56efc769"],
 "."
}], "Text",
 CellChangeTimes->{{3.897693075966505*^9, 3.897693290162016*^9}, {
  3.8976933436172233`*^9, 3.8976933561757994`*^9}, {3.8976933939442883`*^9, 
  3.897693446031109*^9}},ExpressionUUID->"0a2ae328-f01e-4f68-8603-\
6b093eee3a22"],

Cell[TextData[{
 StyleBox["12.",
  FontWeight->"Bold"],
 " The total area for a spherical polygon is equal to the area of the \
triangles it consists of. The sum of triangles\[CloseCurlyQuote] angles is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sum]", "i"], 
     SubscriptBox["\[Alpha]", "i"]}], "+", 
    RowBox[{"2", "\[Pi]"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "95e8ad9a-b2af-4b76-aeed-7d78e3b34c38"],
 ", so the area is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sum]", "i"], 
      SubscriptBox["\[Alpha]", "i"]}], "+", 
     RowBox[{"2", "\[Pi]"}], "-", 
     RowBox[{"\[Pi]", " ", "n"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "58050de8-c393-4209-a178-58a4fdc2b0c6"],
 "."
}], "Text",
 CellChangeTimes->{{3.89769356171994*^9, 3.897693564327696*^9}, {
  3.8978680564892373`*^9, 
  3.897868269876232*^9}},ExpressionUUID->"222ecf35-730d-4a94-9034-\
8595e80b5998"],

Cell[TextData[{
 StyleBox["14.",
  FontWeight->"Bold"],
 " If we consider a mollified surface, its total curvature equals to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    RowBox[{"\[Pi]", "(", 
     RowBox[{"2", "-", 
      RowBox[{"2", "g"}]}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ba0f2536-e60d-42cc-a7dc-eed9a5b87a49"],
 " by continuous Gauss-Bonnet theorem. For mollified surface, the integral of \
the curvature is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sum]", 
    RowBox[{"d", 
     RowBox[{"(", "v", ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "961daf1a-3408-4a83-9467-e51f23262596"],
 ". As we go from mollified to discrete surface, LHS doesn\[CloseCurlyQuote]t \
change, and RHS is equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "\[Pi]", " ", "\[Chi]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "53c14ca9-a441-4e14-95e2-7de475096d12"],
 " by Euler\[CloseCurlyQuote]s theorem."
}], "Text",
 CellChangeTimes->{{3.8978690133997188`*^9, 3.8978691308839245`*^9}, {
  3.8978691672197227`*^9, 3.8978692117736464`*^9}, {3.897869339160303*^9, 
  3.8978693612865143`*^9}, {3.897869401256642*^9, 3.897869433227457*^9}, {
  3.897869673490145*^9, 3.8978697071304464`*^9}, {3.8978697417277093`*^9, 
  3.8978697826580763`*^9}, {3.8978698235868053`*^9, 
  3.897869859001048*^9}},ExpressionUUID->"1f344499-062e-4e92-a888-\
929b69bb6fbf"],

Cell[TextData[{
 StyleBox["15.",
  FontWeight->"Bold"],
 " The flat sides are move along the side\[CloseCurlyQuote]s normals, so they \
are parallelopipeds with the volume is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", " ", 
    SubscriptBox["A", 
     RowBox[{"i", " ", "j", " ", "k"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "17914466-9089-43bf-81e6-8c5e20631d6a"],
 ".",
 " "
}], "Text",
 CellChangeTimes->{{3.897869892669827*^9, 3.897870010976409*^9}, {
  3.8978702516569757`*^9, 
  3.8978702540052757`*^9}},ExpressionUUID->"08bcd7ed-12e9-4f09-9bcb-\
32a7d9d179cf"],

Cell[TextData[{
 StyleBox["16.",
  FontWeight->"Bold"],
 " The edge sides are parts of cylinder with the height equal to the edge \
length and angle ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", 
    RowBox[{"i", " ", "j"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "42a4423c-6299-4bf2-bce4-4eecd669a2c3"],
 ", so the volume is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Pi]", " ", 
    SuperscriptBox["r", "2"], " ", 
    RowBox[{
     SubscriptBox["\[Phi]", 
      RowBox[{"i", " ", "j"}]], "/", "2"}], "\[Pi]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ed40e2ea-f505-4794-b616-09304c42c45d"],
 ". "
}], "Text",
 CellChangeTimes->{{3.8978700127254558`*^9, 3.897870083562228*^9}, {
  3.8978702225020204`*^9, 
  3.8978702957336893`*^9}},ExpressionUUID->"8061a52c-d227-4609-98c6-\
dd8a9bd89900"],

Cell[TextData[{
 StyleBox["17.",
  FontWeight->"Bold"],
 " The vertex sides are parts of sphere with angle defect ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "edaa025c-3c7e-4867-9789-b537f3d1e646"],
 " and the volume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"4", "\[Pi]"}], "3"], 
    SuperscriptBox["r", "3"], " ", 
    RowBox[{
     SubscriptBox["K", "i"], "/", 
     RowBox[{"(", 
      RowBox[{"4", "\[Pi]"}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b0612a0d-54b0-4506-8899-a9039b03dea0"],
 "."
}], "Text",
 CellChangeTimes->{{3.8978703050876207`*^9, 3.8978703427282143`*^9}, {
  3.897870379784234*^9, 
  3.8978704873773212`*^9}},ExpressionUUID->"278fea09-14ec-40c1-be3e-\
a33cd6000124"],

Cell[TextData[{
 StyleBox["18.",
  FontWeight->"Bold"],
 " The final formula is obvious."
}], "Text",
 CellChangeTimes->{{3.897870489618377*^9, 
  3.8978705256388793`*^9}},ExpressionUUID->"4c566f56-3260-44d9-a316-\
7580d8e65d66"]
}, Open  ]]
},
WindowSize->{1152., 592.8},
WindowMargins->{{Automatic, -5.399999999999864}, {
  Automatic, -5.3999999999999995`}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"290967aa-1ac8-447a-aa41-ddeaccb30de3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Plot3D_templates"->{
  Cell[296067, 6607, 1444, 44, 97, "Input",ExpressionUUID->"f74e4cc1-395a-4daf-9332-2b8ac1ae2cd3",
   CellTags->"Plot3D_templates"],
  Cell[297514, 6653, 309, 5, 35, "Output",ExpressionUUID->"dac6a657-20a0-46fa-af48-f0543a834093",
   CellTags->"Plot3D_templates"],
  Cell[297826, 6660, 75126, 1231, 342, "Output",ExpressionUUID->"5df03f68-be2b-453b-96b6-4de9c0538e23",
   CellTags->"Plot3D_templates"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Plot3D_templates", 550764, 11544}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 172, 3, 58, "Subtitle",ExpressionUUID->"c333f29a-1060-4e0f-87ca-3b3b5ddc9ed3"],
Cell[755, 27, 4043, 96, 139, "Text",ExpressionUUID->"4bed9d0b-15c9-4e78-b84e-e08bbd68a536"],
Cell[4801, 125, 4962, 164, 97, "Text",ExpressionUUID->"7a2d9414-ab82-40b6-a5f3-16a373545086"],
Cell[9766, 291, 1221, 40, 42, "Text",ExpressionUUID->"28e3d3ca-8aa2-4172-8a82-e33e546bd5d3"],
Cell[10990, 333, 1865, 63, 42, "Text",ExpressionUUID->"159adcef-ae36-4ac1-8500-c166926d3ebf"],
Cell[12858, 398, 2012, 68, 42, "Text",ExpressionUUID->"eded7164-4cbb-4df4-be0b-d128e86fd5a2"],
Cell[14873, 468, 1231, 34, 101, "Text",ExpressionUUID->"e4eccb31-7603-4541-9c07-60181ef11c30"],
Cell[CellGroupData[{
Cell[16129, 506, 2766, 68, 241, "Input",ExpressionUUID->"49ca6829-3e01-4f87-a603-42b9d2fc7f1e"],
Cell[18898, 576, 67037, 1327, 350, "Output",ExpressionUUID->"6c3f3b9b-ccb2-4a35-b08a-1e605e75431b"]
}, Open  ]],
Cell[85950, 1906, 78915, 1314, 220, "Text",ExpressionUUID->"9ff99aae-835d-452f-b1e8-e0a1e526ce28"],
Cell[164868, 3222, 26749, 447, 220, "Text",ExpressionUUID->"ee50de04-e1dc-4269-a39d-551523d39c70"],
Cell[191620, 3671, 1210, 36, 57, "Text",ExpressionUUID->"cf7c7045-4052-41a9-bc94-60932b8ae077"],
Cell[192833, 3709, 5893, 121, 454, "Text",ExpressionUUID->"04904710-0b1a-4b99-a49d-d44ee3d1dcfd"],
Cell[198729, 3832, 154, 3, 31, "Input",ExpressionUUID->"934a6a3a-01c6-422c-971f-11cf638d0510"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198920, 3840, 163, 3, 58, "Subtitle",ExpressionUUID->"d4c9bcb2-334e-4e3e-898e-bc9854e487df"],
Cell[199086, 3845, 1720, 59, 90, "Text",ExpressionUUID->"3781a3ed-b821-4ea8-b939-5a07b8c0328b"],
Cell[200809, 3906, 573, 16, 38, "Text",ExpressionUUID->"42d0bf17-a5bd-45a3-8465-ae81bcd40a33"],
Cell[201385, 3924, 2192, 78, 135, "Text",ExpressionUUID->"d3ce8907-65e7-422d-8db0-fd1ea6c56903"],
Cell[203580, 4004, 2435, 77, 90, "Text",ExpressionUUID->"5fe7bc32-875b-4826-8e59-404fed2c443b"],
Cell[206018, 4083, 1135, 35, 38, "Text",ExpressionUUID->"3714e5e2-991d-4b5e-b076-02f7a1e82901"],
Cell[207156, 4120, 2615, 85, 111, "Text",ExpressionUUID->"f059e619-d389-4e30-977a-82dda4fd2f4f"],
Cell[209774, 4207, 1598, 49, 63, "Text",ExpressionUUID->"55faad1f-37a1-4822-99ad-d32eda0090bd"],
Cell[211375, 4258, 2423, 83, 86, "Text",ExpressionUUID->"8db8eaba-aa89-4a4c-af77-50526d3ee280"],
Cell[213801, 4343, 2130, 70, 84, "Text",ExpressionUUID->"e2655df3-03b4-46e1-a248-01c3dae208d2",
 InitializationCell->True],
Cell[215934, 4415, 2608, 83, 79, "Text",ExpressionUUID->"7dea4943-f2c7-4bda-8b73-58eef73ca78b"],
Cell[218545, 4500, 3330, 99, 87, "Text",ExpressionUUID->"5a6faa27-0188-48de-84f6-18b9314832d1"],
Cell[221878, 4601, 3513, 114, 90, "Text",ExpressionUUID->"94a4879c-782d-4001-b9c0-1c93c7a01c6c"],
Cell[225394, 4717, 4464, 129, 152, "Text",ExpressionUUID->"ac8b0702-6200-4db2-aa69-b961da601e45"],
Cell[229861, 4848, 477, 10, 63, "Text",ExpressionUUID->"d78de8b6-041e-4d23-b9c5-64680ff23cfd"],
Cell[230341, 4860, 1951, 67, 49, "Text",ExpressionUUID->"35f92a76-52b3-4ac5-bc4e-3eaf288c50a9"],
Cell[232295, 4929, 1528, 50, 64, "Text",ExpressionUUID->"4a78c2ff-fafe-49b7-b524-ded252c56b0e"],
Cell[233826, 4981, 1614, 56, 38, "Text",ExpressionUUID->"6b37868d-4751-41d7-88d2-509b2bdeee70"],
Cell[235443, 5039, 6626, 219, 217, "Text",ExpressionUUID->"71ba6b14-a120-48a8-a68f-1c3399231f63"],
Cell[242072, 5260, 3560, 119, 147, "Text",ExpressionUUID->"9cc1be4c-1f63-4b02-8556-7056894d7253"],
Cell[245635, 5381, 1424, 43, 150, "Text",ExpressionUUID->"6112bfd8-3549-4e79-8315-90748105c7b1"],
Cell[247062, 5426, 37457, 785, 672, "Text",ExpressionUUID->"02d30a41-8ec6-421a-9c75-2d8d7ea208d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284556, 6216, 165, 3, 58, "Subtitle",ExpressionUUID->"0d15b2a8-5fbf-4b8c-972a-d4e4c3e88572"],
Cell[284724, 6221, 1298, 43, 48, "Text",ExpressionUUID->"943b1a37-4452-4c21-8083-6f00fbe4617a"],
Cell[CellGroupData[{
Cell[286047, 6268, 1206, 39, 119, "Input",ExpressionUUID->"92085d17-7e12-473b-abbf-d46356f86fa3"],
Cell[287256, 6309, 2313, 75, 65, "Output",ExpressionUUID->"6de6ceb1-6baa-4e01-bf5d-605b44b00632"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289606, 6389, 967, 31, 61, "Input",ExpressionUUID->"0f10bd11-5aac-419f-8e18-8c421a2ede1a"],
Cell[290576, 6422, 883, 29, 61, "Output",ExpressionUUID->"dd7cb072-6b3c-48f5-a2b4-e8633d4444f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291496, 6456, 482, 12, 31, "Input",ExpressionUUID->"f27ca086-6621-447b-a080-905a3ca40fc3"],
Cell[291981, 6470, 1995, 67, 68, "Output",ExpressionUUID->"64e874b8-f36f-4e78-aaa3-3f6bc59f5d3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294013, 6542, 612, 16, 31, "Input",ExpressionUUID->"f7fb01c3-e9b2-4de1-bb65-f57c488ba707"],
Cell[294628, 6560, 1005, 33, 65, "Output",ExpressionUUID->"07f597b7-3165-4df8-8953-097ee0894a38"]
}, Open  ]],
Cell[295648, 6596, 394, 7, 38, "Text",ExpressionUUID->"ab4fd19e-d8ef-4918-8427-706afbeada9d"],
Cell[CellGroupData[{
Cell[296067, 6607, 1444, 44, 97, "Input",ExpressionUUID->"f74e4cc1-395a-4daf-9332-2b8ac1ae2cd3",
 CellTags->"Plot3D_templates"],
Cell[297514, 6653, 309, 5, 35, "Output",ExpressionUUID->"dac6a657-20a0-46fa-af48-f0543a834093",
 CellTags->"Plot3D_templates"],
Cell[297826, 6660, 75126, 1231, 342, "Output",ExpressionUUID->"5df03f68-be2b-453b-96b6-4de9c0538e23",
 CellTags->"Plot3D_templates"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372989, 7896, 1292, 39, 52, "Input",ExpressionUUID->"ef54d0a4-b476-47d9-9624-24a0309f63c0"],
Cell[374284, 7937, 2045, 65, 65, "Output",ExpressionUUID->"694785b2-06c8-46f8-8015-abb5774d6aa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376366, 8007, 1353, 41, 52, "Input",ExpressionUUID->"25dd5610-cf68-4bed-ba52-dd987a584b1a"],
Cell[377722, 8050, 825, 26, 56, "Output",ExpressionUUID->"9c76bc78-d040-4c91-bbec-f3b1b9d1f61b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378584, 8081, 4309, 134, 142, "Input",ExpressionUUID->"55c98839-d69f-46b4-a1a6-f9ff1064d66b"],
Cell[382896, 8217, 656, 20, 59, "Output",ExpressionUUID->"4f14a5b5-e606-405b-b6ca-07d55cc5e956"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383589, 8242, 2037, 61, 55, "Input",ExpressionUUID->"f6103666-3208-4168-bf8a-e267b477af24"],
Cell[385629, 8305, 2080, 65, 65, "Output",ExpressionUUID->"edcc82cb-d79b-44db-bd08-6a60d61ba951"]
}, Open  ]],
Cell[387724, 8373, 187, 4, 38, "Text",ExpressionUUID->"835debd8-61d7-44b5-9cab-b21931cc35d0"],
Cell[387914, 8379, 804, 22, 32, "Input",ExpressionUUID->"4a245ba6-760c-40dc-b985-2b8575781e62"],
Cell[CellGroupData[{
Cell[388743, 8405, 682, 18, 31, "Input",ExpressionUUID->"ed231080-abd5-494c-b878-f58f1dc49335"],
Cell[389428, 8425, 129577, 2110, 244, "Output",ExpressionUUID->"6e5b3bc3-0ac5-4408-80e6-11d3dbbf4a6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[519042, 10540, 540, 15, 31, "Input",ExpressionUUID->"4a8f0d2d-7df1-47c1-91c4-fe01a82e04dd"],
Cell[519585, 10557, 1103, 33, 35, "Output",ExpressionUUID->"269744c6-a9a2-4fd4-9d61-165524b4cd59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520725, 10595, 1760, 54, 48, "Input",ExpressionUUID->"34d8acad-ca07-48b7-a851-974551ddf0ad"],
Cell[522488, 10651, 503, 15, 39, "Output",ExpressionUUID->"0aa02c65-4769-4f53-bbae-83bae26401f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[523028, 10671, 1161, 33, 31, "Input",ExpressionUUID->"368898a4-4c0f-4734-8d00-590eb5d3839c"],
Cell[524192, 10706, 1939, 55, 57, "Output",ExpressionUUID->"28d701ff-5f6a-4945-b159-a63df16e36bb"]
}, Open  ]],
Cell[526146, 10764, 184, 4, 38, "Text",ExpressionUUID->"54d5b0a1-f388-4db4-9002-aef75f52d63c"],
Cell[CellGroupData[{
Cell[526355, 10772, 518, 14, 50, "Input",ExpressionUUID->"6e9b7775-fc01-432a-9992-a24c768bef4b"],
Cell[526876, 10788, 894, 30, 45, "Output",ExpressionUUID->"d6a4b4a0-10c0-4259-8c6d-4ce5345fc416"]
}, Open  ]],
Cell[527785, 10821, 1457, 42, 64, "Text",ExpressionUUID->"ddb6620d-4dcf-4c6e-9b29-dab6ea9ceb57"],
Cell[529245, 10865, 1487, 44, 67, "Text",ExpressionUUID->"ce9fd351-212c-4f63-a449-1ed384e789be"],
Cell[530735, 10911, 1563, 49, 42, "Text",ExpressionUUID->"5d9a7e26-c215-46fd-957f-994d43332f9b"],
Cell[532301, 10962, 6179, 194, 140, "Text",ExpressionUUID->"11ea45ef-cacc-45c4-ab08-ddb4cad477b3"],
Cell[538483, 11158, 1576, 46, 67, "Text",ExpressionUUID->"27300f9d-ce35-4823-a1ad-7e274f74e233"],
Cell[540062, 11206, 3452, 110, 73, "Text",ExpressionUUID->"d227b1ba-d882-4553-95ec-a351741af5dd"],
Cell[543517, 11318, 1779, 53, 63, "Text",ExpressionUUID->"0a2ae328-f01e-4f68-8603-6b093eee3a22"],
Cell[545299, 11373, 1027, 31, 63, "Text",ExpressionUUID->"222ecf35-730d-4a94-9034-8595e80b5998"],
Cell[546329, 11406, 1449, 36, 63, "Text",ExpressionUUID->"1f344499-062e-4e92-a888-929b69bb6fbf"],
Cell[547781, 11444, 602, 18, 40, "Text",ExpressionUUID->"08bcd7ed-12e9-4f09-9bcb-32a7d9d179cf"],
Cell[548386, 11464, 860, 26, 40, "Text",ExpressionUUID->"8061a52c-d227-4609-98c6-dd8a9bd89900"],
Cell[549249, 11492, 841, 27, 42, "Text",ExpressionUUID->"278fea09-14ec-40c1-be3e-a33cd6000124"],
Cell[550093, 11521, 229, 7, 38, "Text",ExpressionUUID->"4c566f56-3260-44d9-a316-7580d8e65d66"]
}, Open  ]]
}
]
*)

